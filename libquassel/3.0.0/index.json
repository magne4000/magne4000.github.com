[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/alias.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/**\n * Converts core object to an Array of {@link AliasItem}\n * @param {Object} data\n * @returns {AliasItem[]}\n */\nexport function toArray(data) {\n  let i = 0, ret = Array(data.Aliases.names.length);\n  for (; i<data.Aliases.names.length; i++) {\n    ret[i] = new AliasItem(data.Aliases.names[i], data.Aliases.expansions[i]);\n  }\n  return ret;\n}\n\n/**\n * Returns an object that can be fed to the core\n * @param {AliasItem[]} aliasitems\n * @returns {Object}\n */\nexport function toCoreObject(aliasitems) {\n  const ret = { Aliases: { names: [], expansions: [] } };\n  for (let item of aliasitems) {\n    ret.Aliases.names.push(item.name);\n    ret.Aliases.expansions.push(item.expansion);\n  }\n  return ret;\n}\n\n/**\n * Object representing an alias\n * @param {String} name\n * @param {String} expansion\n */\nexport class AliasItem {\n  constructor(name, expansion) {\n    this.name = name;\n    this.expansion = expansion;\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/alias.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "toArray",
    "memberof": "src/alias.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/alias.js~toArray",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/alias.js",
    "importStyle": "{toArray}",
    "description": "Converts core object to an Array of {@link AliasItem}",
    "lineNumber": 14,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{AliasItem[]}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "AliasItem[]"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "toCoreObject",
    "memberof": "src/alias.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/alias.js~toCoreObject",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/alias.js",
    "importStyle": "{toCoreObject}",
    "description": "Returns an object that can be fed to the core",
    "lineNumber": 27,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "AliasItem[]"
        ],
        "spread": false,
        "optional": false,
        "name": "aliasitems",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 51,
    "kind": "class",
    "name": "AliasItem",
    "memberof": "src/alias.js",
    "static": true,
    "longname": "src/alias.js~AliasItem",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/alias.js",
    "importStyle": "{AliasItem}",
    "description": "Object representing an alias",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "expansion",
        "description": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 52,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/alias.js~AliasItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/alias.js~AliasItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 42,
    "undocument": true
  },
  {
    "__docId__": 53,
    "kind": "member",
    "name": "name",
    "memberof": "src/alias.js~AliasItem",
    "static": false,
    "longname": "src/alias.js~AliasItem#name",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "expansion",
    "memberof": "src/alias.js~AliasItem",
    "static": false,
    "longname": "src/alias.js~AliasItem#expansion",
    "access": "public",
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 55,
    "kind": "file",
    "name": "src/buffer.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/** @module buffer */\n\nconst logger = require('debug')('libquassel:buffer');\nconst { util } = require('qtdatastream');\n\nimport { IRCMessage } from './message';\n\n/**\n * BufferInfo object representation\n * @typedef {Object} BufferInfo\n * @property {number} id\n * @property {number} network\n * @property {number} type\n * @property {number} group\n * @property {String} name\n */\n\n/**\n * @type {Object}\n * @property {number} Types.INVALID\n * @property {number} Types.STATUS\n * @property {number} Types.CHANNEL\n * @property {number} Types.QUERY\n * @property {number} Types.GROUP\n */\nexport const Types = {\n  INVALID: 0x00,\n  STATUS: 0x01,\n  CHANNEL: 0x02,\n  QUERY: 0x04,\n  GROUP: 0x08\n};\n\n/**\n * User attached to a buffer, with its modes\n */\nexport class IRCBufferUser {\n\n  /** @type {IRCUser} */\n  user;\n  /** @type {boolean} */\n  isOp;\n  /** @type {boolean} */\n  isHalfOp; /** @type {boolean} */\n  isOwner;\n  /** @type {boolean} */\n  isAdmin;\n  /** @type {boolean} */\n  isVoiced;\n\n  /**\n   * @param {IRCUser} user\n   * @param {string} modes\n   */\n  constructor(user, modes) {\n    this.user = user;\n    this.isOp = false;\n    this.isHalfOp = false;\n    this.isOwner = false;\n    this.isAdmin = false;\n    this.isVoiced = false;\n    this._modes = '';\n    this.modes = modes;\n  }\n\n  /** @type {string} */\n  get modes() {\n    return this._modes;\n  }\n\n  /** @type {string} */\n  set modes(value) {\n    this._modes = value;\n    this.isOp = this.hasMode('o');\n    this.isHalfOp = this.hasMode('h');\n    this.isOwner = this.hasMode('q');\n    this.isAdmin = this.hasMode('a');\n    this.isVoiced = this.hasMode('v');\n  }\n\n  /**\n   * Returns `true` if user has specified mode\n   * @param {string} mode\n   * @returns {boolean}\n   */\n  hasMode(mode) {\n    return this._modes.indexOf(mode) !== -1;\n  }\n}\n\n/**\n * Quassel respresentation of a buffer\n */\nexport class IRCBuffer {\n\n  /** @type {?number} */\n  id;\n  /** @type {boolean} */\n  isChannel;\n  /** @type {boolean} */\n  isActive;\n  /** @type {boolean} */\n  isStatusBuffer;\n  /** @type {?number} */\n  lastMessageId;\n  /** @type {?number} */\n  firstMessageId;\n  /**\n   * Map of users of this channel.\n   * @type {Map<string, IRCBufferUser>}\n   */\n  users;\n  /**\n   * Map of messages in this buffer.\n   * @type {Map<number, IRCMessage>}\n   */\n  messages;\n  /** @type {?Types} */\n  type;\n  /** @type {number} */\n  network;\n  /** @type {number} */\n  group;\n\n\n  /**\n   * @param {object} data\n   */\n  constructor(data) {\n    this._name = null;\n    this.isChannel = false;\n    this.isActive = false;\n    this.id = null;\n    this.users = new Map();\n    this.messages = new Map();\n    this.lastMessageId = null;\n    this.firstMessageId = null;\n\n    this.update(data);\n    this.isStatusBuffer = (this.type === Types.STATUS);\n  }\n\n  /**\n   * Add {@link IRCUser} to the buffer\n   * @param {IRCUser} user\n   * @param {string} modes\n   */\n  addUser(user, modes) {\n    if (user && typeof user.nick === 'string') {\n      this.users.set(user.nick, new IRCBufferUser(user, modes));\n    }\n  }\n\n  /**\n   * Add a mode to an {@link IRCUser}\n   * @param {IRCUser} user\n   * @param {string} mode\n   */\n  addUserMode(user, mode) {\n    if (user && typeof user.nick === 'string') {\n      const userAndModes = this.users.get(user.nick);\n      if (userAndModes) userAndModes.modes += mode;\n    }\n  }\n\n  /**\n   * remove mode from an {@link IRCUser}\n   * @param {IRCUser} user\n   * @param {string} mode\n   */\n  removeUserMode(user, mode) {\n    if (user && typeof user.nick === 'string') {\n      let userAndModes = this.users.get(user.nick);\n      if (userAndModes) userAndModes.modes = userAndModes.modes.replace(mode, '');\n    }\n  }\n\n  /**\n   * Check if current buffer contains specified user\n   * @param {string|IRCUser} nick\n   * @returns {boolean}\n   */\n  hasUser(nick) {\n    if (nick === undefined || nick === null) {\n      logger('User should not be null or undefined');\n      return null;\n    }\n    return this.users.has(typeof nick.nick === 'string' ? nick.nick : nick);\n  }\n\n  /**\n   * Remove user from buffer\n   * @param {string|IRCUser} nick\n   */\n  removeUser(nick) {\n    this.users.delete(typeof nick.nick === 'string' ? nick.nick : nick);\n  }\n\n  /**\n   * Update user maps hashes with current .nick\n   * @param {string} oldnick\n   */\n  updateUserMaps(oldnick) {\n    const userAndModes = this.users.get(oldnick);\n    if (oldnick !== userAndModes.user.nick) {\n      this.users.set(userAndModes.user.nick, userAndModes);\n      this.users.delete(oldnick);\n    }\n  }\n\n  /**\n   * Add an {@link IRCMessage} to the buffer\n   * @param {Object} message\n   * @returns {?IRCMessage} the message, if successfully added, `undefined` otherwise\n   */\n  addMessage(message) {\n    if (this.messages.has(message.id)) return undefined;\n    if (this.lastMessageId === null || this.lastMessageId < message.id) {\n      this.lastMessageId = message.id;\n    }\n    if (this.firstMessageId === null || this.firstMessageId > message.id) {\n      this.firstMessageId = message.id;\n    }\n    const ircmsg = new IRCMessage(message);\n    this.messages.set(message.id, ircmsg);\n    return ircmsg;\n  }\n\n  /**\n   * Update internal lastMessageId and firstMessageId\n   * @protected\n   */\n  _updateFirstAndLast() {\n    this.lastMessageId = null;\n    this.firstMessageId = null;\n    for (let key of this.messages.keys()) {\n      if (this.lastMessageId === null || this.lastMessageId < key) this.lastMessageId = key;\n      if (this.firstMessageId === null || this.firstMessageId > key) this.firstMessageId = key;\n    }\n  }\n\n  /**\n   * Clear buffer messages\n   */\n  clearMessages() {\n    this.lastMessageId = null;\n    this.firstMessageId = null;\n    this.messages.clear();\n  }\n\n  /**\n   * Delete a message from the buffer\n   * @param {number} messageId\n   */\n  deleteMessage(messageId) {\n    if (this.messages.size <= 1) {\n      this.clearMessages();\n    } else {\n      this.messages.delete(messageId);\n      this._updateFirstAndLast();\n    }\n  }\n\n  /**\n   * Trim messages and leave only `n` messages\n   * @param {number} n\n   */\n  trimMessages(n) {\n    if (n <= 0) {\n      this.clearMessages();\n    } else if (n < this.messages.size) {\n      let idsToKeep = [], newMap = new Map;\n      this.messages.forEach((val, key) => {\n        idsToKeep.push(key);\n      });\n      idsToKeep.sort();\n      idsToKeep.splice(0, idsToKeep.length - n);\n      idsToKeep.forEach(val => {\n        newMap.set(val, this.messages.get(val));\n      });\n      this.messages = newMap;\n      this._updateFirstAndLast();\n    }\n  }\n\n  /**\n   * Check if specified `messageId` is the last one of this buffer\n   * @param {number} messageId\n   * @returns {boolean}\n   */\n  isLast(messageId) {\n    return this.lastMessageId === messageId;\n  }\n\n  /**\n   * get {@link BufferInfo} corresponding to the current buffer\n   * @returns {BufferInfo}\n   */\n  getBufferInfo() {\n    return {\n      id: this.id,\n      network: this.network,\n      type: this.type,\n      group: this.group || 0,\n      name: this.name\n    };\n  }\n\n  get firstMessage() {\n    return this.messages.get(this.firstMessageId);\n  }\n\n  get lastMessage() {\n    return this.messages.get(this.lastMessageId);\n  }\n\n  set name(value) {\n    this._name = value ? value.toString() : null;\n    this.isChannel = (this._name && '#&+!'.indexOf(this._name[0]) !== -1);\n  }\n\n  get name() {\n    return this._name;\n  }\n\n  update(data) {\n    Object.assign(this, data);\n  }\n\n  toString() {\n    return `<IRCBuffer ${this._name ? this._name : '*'}>`;\n  }\n}\n\n/**\n * A collection of buffers\n */\nexport class IRCBufferCollection extends Map {\n\n  constructor(...args) {\n    if (args.length > 0) throw new Error(`IRCBufferCollection doesn't support initializing with values.`);\n    super();\n    // This map references buffers by their IDs for quick lookup\n    this._map_buffer_ids = new Map();\n  }\n\n  /**\n   * Add a buffer to this collection\n   * @param {IRCBuffer} buffer\n   */\n  add(buffer) {\n    if (this.has(buffer.name)) {\n      logger('Buffer already added (%s)', buffer.name);\n      return;\n    }\n    this.set(buffer.name, buffer);\n  }\n\n  /**\n   * @override\n   */\n  set(key, value) {\n    if (key !== null && typeof key !== 'string') throw new Error(`Key must be a string or null`);\n    key = key === null ? null : key.toLowerCase();\n    if (value.id !== -1) {\n      this._map_buffer_ids.set(value.id, key);\n    }\n    super.set(key, value);\n  }\n\n  /**\n   * Get the buffer by name if `key` is a `String` or a `Buffer`, by id otherwise\n   * @param {number|string|Buffer} key\n   * @override\n   * @returns {?Buffer}\n   */\n  get(key) {\n    if (typeof key === 'number') {\n      return this.get(this._map_buffer_ids.get(key));\n    }\n    if (key === undefined) return void 0;\n    if (key instanceof Buffer) {\n      key = util.str(key);\n    }\n    return super.get(key === null ? null : key.toLowerCase());\n  }\n\n  /**\n   * Does the buffer exists in this collection\n   * @param {number|string|Buffer} key\n   * @override\n   * @returns {boolean}\n   */\n  has(key) {\n    if (key === undefined) return false;\n    if (key instanceof Buffer) {\n      key = util.str(key);\n    }\n    if (typeof key === 'number') {\n      return this._map_buffer_ids.has(key);\n    }\n    return super.has(key === null ? null : key.toLowerCase());\n  }\n\n  /**\n   * Delete the buffer from the collection\n   * @param {number|string|Buffer} key\n   * @override\n   * @returns {boolean}\n   */\n  delete(key) {\n    if (key === undefined) return false;\n    if (key instanceof Buffer) {\n      key = util.str(key);\n    }\n    if (typeof key === 'number') {\n      key = this._map_buffer_ids.delete(key);\n      return super.delete(key);\n    }\n    const deleted = super.delete(key === null ? null : key.toLowerCase());\n    if (deleted.id !== -1) {\n      this._map_buffer_ids.delete(deleted.id);\n    }\n    return deleted;\n  }\n\n  /**\n   * Clear the buffer\n   * @override\n   */\n  clear() {\n    super.clear();\n    this._map_buffer_ids.clear();\n  }\n\n  /**\n   * Change buffer id\n   * @param {IRCBuffer} buffer\n   * @param {number} bufferIdTo\n   */\n  move(buffer, bufferIdTo) {\n    this.delete(buffer.name);\n    buffer.id = bufferIdTo;\n    this.set(buffer.name, buffer);\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/buffer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/buffer.js",
    "static": true,
    "longname": "src/buffer.js~logger",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@module",
        "tagValue": "buffer"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 57,
    "kind": "variable",
    "name": "util",
    "memberof": "src/buffer.js",
    "static": true,
    "longname": "src/buffer.js~util",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/buffer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 58,
    "kind": "typedef",
    "name": "BufferInfo",
    "memberof": "src/buffer.js",
    "static": true,
    "longname": "src/buffer.js~BufferInfo",
    "access": "public",
    "description": "BufferInfo object representation",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "group",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BufferInfo"
    }
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "Types",
    "memberof": "src/buffer.js",
    "static": true,
    "longname": "src/buffer.js~Types",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/buffer.js",
    "importStyle": "{Types}",
    "description": "",
    "lineNumber": 34,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.INVALID",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.STATUS",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.CHANNEL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.QUERY",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.GROUP",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 60,
    "kind": "class",
    "name": "IRCBufferUser",
    "memberof": "src/buffer.js",
    "static": true,
    "longname": "src/buffer.js~IRCBufferUser",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/buffer.js",
    "importStyle": "{IRCBufferUser}",
    "description": "User attached to a buffer, with its modes",
    "lineNumber": 45,
    "interface": false
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "user",
    "memberof": "src/buffer.js~IRCBufferUser",
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#user",
    "access": "public",
    "description": null,
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "IRCUser"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "isOp",
    "memberof": "src/buffer.js~IRCBufferUser",
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#isOp",
    "access": "public",
    "description": null,
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "member",
    "name": "isHalfOp",
    "memberof": "src/buffer.js~IRCBufferUser",
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#isHalfOp",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "isOwner",
    "memberof": "src/buffer.js~IRCBufferUser",
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#isOwner",
    "access": "public",
    "description": null,
    "lineNumber": 53,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "member",
    "name": "isAdmin",
    "memberof": "src/buffer.js~IRCBufferUser",
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#isAdmin",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "isVoiced",
    "memberof": "src/buffer.js~IRCBufferUser",
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#isVoiced",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer.js~IRCBufferUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 63,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "modes",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "_modes",
    "memberof": "src/buffer.js~IRCBufferUser",
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#_modes",
    "access": "private",
    "description": null,
    "lineNumber": 70,
    "undocument": true,
    "type": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "get",
    "name": "modes",
    "memberof": "src/buffer.js~IRCBufferUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#modes",
    "access": "public",
    "description": null,
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "set",
    "name": "modes",
    "memberof": "src/buffer.js~IRCBufferUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#modes",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "hasMode",
    "memberof": "src/buffer.js~IRCBufferUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferUser#hasMode",
    "access": "public",
    "description": "Returns `true` if user has specified mode",
    "lineNumber": 94,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 85,
    "kind": "class",
    "name": "IRCBuffer",
    "memberof": "src/buffer.js",
    "static": true,
    "longname": "src/buffer.js~IRCBuffer",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/buffer.js",
    "importStyle": "{IRCBuffer}",
    "description": "Quassel respresentation of a buffer",
    "lineNumber": 102,
    "interface": false
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "id",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#id",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "member",
    "name": "isChannel",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#isChannel",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "isActive",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#isActive",
    "access": "public",
    "description": null,
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "member",
    "name": "isStatusBuffer",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#isStatusBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "lastMessageId",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#lastMessageId",
    "access": "public",
    "description": null,
    "lineNumber": 113,
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "firstMessageId",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#firstMessageId",
    "access": "public",
    "description": null,
    "lineNumber": 115,
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "users",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#users",
    "access": "public",
    "description": "Map of users of this channel.",
    "lineNumber": 120,
    "type": {
      "nullable": null,
      "types": [
        "Map<string, IRCBufferUser>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 93,
    "kind": "member",
    "name": "messages",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#messages",
    "access": "public",
    "description": "Map of messages in this buffer.",
    "lineNumber": 125,
    "type": {
      "nullable": null,
      "types": [
        "Map<number, IRCMessage>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "type",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#type",
    "access": "public",
    "description": null,
    "lineNumber": 127,
    "type": {
      "nullable": true,
      "types": [
        "Types"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "network",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#network",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "group",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#group",
    "access": "public",
    "description": null,
    "lineNumber": 131,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 97,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "_name",
    "memberof": "src/buffer.js~IRCBuffer",
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#_name",
    "access": "private",
    "description": null,
    "lineNumber": 138,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "addUser",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#addUser",
    "access": "public",
    "description": "Add {@link IRCUser} to the buffer",
    "lineNumber": 156,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "modes",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "addUserMode",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#addUserMode",
    "access": "public",
    "description": "Add a mode to an {@link IRCUser}",
    "lineNumber": 167,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "removeUserMode",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#removeUserMode",
    "access": "public",
    "description": "remove mode from an {@link IRCUser}",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "hasUser",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#hasUser",
    "access": "public",
    "description": "Check if current buffer contains specified user",
    "lineNumber": 191,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "removeUser",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#removeUser",
    "access": "public",
    "description": "Remove user from buffer",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "updateUserMaps",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#updateUserMaps",
    "access": "public",
    "description": "Update user maps hashes with current .nick",
    "lineNumber": 211,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "oldnick",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "addMessage",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#addMessage",
    "access": "public",
    "description": "Add an {@link IRCMessage} to the buffer",
    "lineNumber": 224,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?IRCMessage} the message, if successfully added, `undefined` otherwise"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "IRCMessage"
      ],
      "spread": false,
      "description": "the message, if successfully added, `undefined` otherwise"
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "_updateFirstAndLast",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#_updateFirstAndLast",
    "access": "protected",
    "description": "Update internal lastMessageId and firstMessageId",
    "lineNumber": 241,
    "params": [],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "clearMessages",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#clearMessages",
    "access": "public",
    "description": "Clear buffer messages",
    "lineNumber": 253,
    "params": [],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "deleteMessage",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#deleteMessage",
    "access": "public",
    "description": "Delete a message from the buffer",
    "lineNumber": 263,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "trimMessages",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#trimMessages",
    "access": "public",
    "description": "Trim messages and leave only `n` messages",
    "lineNumber": 276,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "n",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "isLast",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#isLast",
    "access": "public",
    "description": "Check if specified `messageId` is the last one of this buffer",
    "lineNumber": 299,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "getBufferInfo",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#getBufferInfo",
    "access": "public",
    "description": "get {@link BufferInfo} corresponding to the current buffer",
    "lineNumber": 307,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{BufferInfo}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "BufferInfo"
      ],
      "spread": false,
      "description": ""
    },
    "params": []
  },
  {
    "__docId__": 129,
    "kind": "get",
    "name": "firstMessage",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#firstMessage",
    "access": "public",
    "description": null,
    "lineNumber": 317,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 130,
    "kind": "get",
    "name": "lastMessage",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#lastMessage",
    "access": "public",
    "description": null,
    "lineNumber": 321,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 131,
    "kind": "set",
    "name": "name",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#name",
    "access": "public",
    "description": null,
    "lineNumber": 325,
    "undocument": true
  },
  {
    "__docId__": 134,
    "kind": "get",
    "name": "name",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#name",
    "access": "public",
    "description": null,
    "lineNumber": 330,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 135,
    "kind": "method",
    "name": "update",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#update",
    "access": "public",
    "description": null,
    "lineNumber": 334,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 136,
    "kind": "method",
    "name": "toString",
    "memberof": "src/buffer.js~IRCBuffer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBuffer#toString",
    "access": "public",
    "description": null,
    "lineNumber": 338,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 137,
    "kind": "class",
    "name": "IRCBufferCollection",
    "memberof": "src/buffer.js",
    "static": true,
    "longname": "src/buffer.js~IRCBufferCollection",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/buffer.js",
    "importStyle": "{IRCBufferCollection}",
    "description": "A collection of buffers",
    "lineNumber": 346,
    "interface": false,
    "extends": [
      "Map"
    ]
  },
  {
    "__docId__": 138,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 348,
    "undocument": true
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "_map_buffer_ids",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#_map_buffer_ids",
    "access": "private",
    "description": null,
    "lineNumber": 352,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "method",
    "name": "add",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#add",
    "access": "public",
    "description": "Add a buffer to this collection",
    "lineNumber": 359,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "set",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#set",
    "access": "public",
    "description": "",
    "lineNumber": 370,
    "override": true,
    "params": [
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "value",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "get",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#get",
    "access": "public",
    "description": "Get the buffer by name if `key` is a `String` or a `Buffer`, by id otherwise",
    "lineNumber": 385,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?Buffer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string",
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "Buffer"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "has",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#has",
    "access": "public",
    "description": "Does the buffer exists in this collection",
    "lineNumber": 402,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string",
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 144,
    "kind": "method",
    "name": "delete",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#delete",
    "access": "public",
    "description": "Delete the buffer from the collection",
    "lineNumber": 419,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string",
          "Buffer"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    },
    "override": true
  },
  {
    "__docId__": 145,
    "kind": "method",
    "name": "clear",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#clear",
    "access": "public",
    "description": "Clear the buffer",
    "lineNumber": 439,
    "override": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 146,
    "kind": "method",
    "name": "move",
    "memberof": "src/buffer.js~IRCBufferCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/buffer.js~IRCBufferCollection#move",
    "access": "public",
    "description": "Change buffer id",
    "lineNumber": 449,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCBuffer"
        ],
        "spread": false,
        "optional": false,
        "name": "buffer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferIdTo",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 147,
    "kind": "file",
    "name": "src/bufferview.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/**\n * Quassel BufferView\n */\nexport default class BufferView {\n\n  /** @type {number} */\n  id;\n  /** @type {boolean} */\n  sortAlphabetically;\n  /** @type {number} */\n  showSearch;\n  /** @type {number} */\n  networkId;\n  /** @type {number} */\n  minimumActivity;\n  /** @type {boolean} */\n  hideInactiveNetworks;\n  /** @type {boolean} */\n  hideInactiveBuffers;\n  /** @type {boolean} */\n  disableDecoration;\n  /** @type {String} */\n  bufferViewName;\n  /** @type {number} */\n  allowedBufferTypes;\n  /** @type {boolean} */\n  addNewBuffersAutomatically;\n  /** @type {number[]} */\n  TemporarilyRemovedBuffers;\n  /** @type {number[]} */\n  RemovedBuffers;\n  /** @type {number[]} */\n  BufferList;\n\n  constructor (id, data) {\n    this.id = id;\n\n    if (data) {\n      this.update(data);\n    }\n  }\n\n  /**\n   * Returns `true` if given `bufferId` is temporarily hidden\n   * @param {number} bufferId\n   * @returns {boolean}\n   */\n  isTemporarilyRemoved(bufferId) {\n    return this.TemporarilyRemovedBuffers.indexOf(bufferId) !== -1;\n  }\n\n  /**\n   * Returns `true` if given `bufferId` is permanently hidden\n   * @param {number} bufferId\n   * @returns {boolean}\n   */\n  isPermanentlyRemoved(bufferId) {\n    return this.RemovedBuffers.indexOf(bufferId) !== -1;\n  }\n\n  /**\n   * Returns `true` if given `bufferId` is hidden\n   * @param {number} bufferId\n   * @returns {boolean}\n   */\n  isHidden(bufferId) {\n    return this.isTemporarilyRemoved(bufferId) || this.isPermanentlyRemoved(bufferId);\n  }\n\n  /**\n   * Remove hidden status for given `bufferId`\n   * @param {number} bufferId\n   */\n  unhide(bufferId) {\n    if (typeof bufferId !== 'number') return;\n    let index = this.TemporarilyRemovedBuffers.indexOf(bufferId);\n    if (index !== -1) {\n      this.TemporarilyRemovedBuffers.splice(index, 1);\n    } else {\n      index = this.RemovedBuffers.indexOf(bufferId);\n      if (index !== -1) {\n        this.RemovedBuffers.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Temporarily hide given `bufferId`\n   * @param {number} bufferId\n   */\n  setTemporarilyRemoved(bufferId) {\n    if (typeof bufferId !== 'number') return;\n    this.unhide(bufferId);\n    this.TemporarilyRemovedBuffers.push(bufferId);\n  }\n\n  /**\n   * Permanently hide given `bufferId`\n   * @param {number} bufferId\n   */\n  setPermanentlyRemoved(bufferId) {\n    if (typeof bufferId !== 'number') return;\n    this.unhide(bufferId);\n    this.RemovedBuffers.push(bufferId);\n  }\n\n  /**\n   * Add (or move) a buffer to a specified position\n   * @param {number} bufferId\n   * @param {number} position\n   */\n  addBuffer(bufferId, position) {\n    const index = this.BufferList.indexOf(bufferId);\n    if (index !== -1) {\n      this.moveBuffer(bufferId, position);\n    } else {\n      this.BufferList.splice(position, 0, bufferId);\n    }\n  }\n\n  /**\n   * Move a buffer to another position\n   * @param {number} bufferId\n   * @param {number} position\n   */\n  moveBuffer(bufferId, position) {\n    const index = this.BufferList.indexOf(bufferId);\n    if (index !== -1) {\n      this.BufferList.splice(index, 1);\n      this.BufferList.splice(position, 0, bufferId);\n    }\n  }\n\n  /**\n   * Used by sort methods\n   * @param {number} id1\n   * @param {number} id2\n   * @returns {number}\n   * @example\n   * const bufferView = new BufferView(1, {...});\n   * anArrayOfBufferIds.sort(bufferView.comparator);\n   */\n  comparator(id1, id2) {\n    if (!this.BufferList) return 0;\n    const iid1 = this.BufferList.indexOf(id1);\n    const iid2 = this.BufferList.indexOf(id2);\n    if (iid1 === iid2) {  // -1 === -1\n      return 0;\n    }\n    return iid1 < iid2 ? -1 : 1;\n  }\n\n  update(data) {\n    Object.assign(this, data);\n  }\n\n  toString() {\n    return `<BufferView ${this.bufferViewName}>`;\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/bufferview.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 148,
    "kind": "class",
    "name": "BufferView",
    "memberof": "src/bufferview.js",
    "static": true,
    "longname": "src/bufferview.js~BufferView",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/bufferview.js",
    "importStyle": "BufferView",
    "description": "Quassel BufferView",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 149,
    "kind": "member",
    "name": "id",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#id",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "member",
    "name": "sortAlphabetically",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#sortAlphabetically",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "member",
    "name": "showSearch",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#showSearch",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "member",
    "name": "networkId",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#networkId",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "member",
    "name": "minimumActivity",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#minimumActivity",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "hideInactiveNetworks",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#hideInactiveNetworks",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "hideInactiveBuffers",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#hideInactiveBuffers",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 156,
    "kind": "member",
    "name": "disableDecoration",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#disableDecoration",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "bufferViewName",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#bufferViewName",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 158,
    "kind": "member",
    "name": "allowedBufferTypes",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#allowedBufferTypes",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "addNewBuffersAutomatically",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#addNewBuffersAutomatically",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "member",
    "name": "TemporarilyRemovedBuffers",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#TemporarilyRemovedBuffers",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "RemovedBuffers",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#RemovedBuffers",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "member",
    "name": "BufferList",
    "memberof": "src/bufferview.js~BufferView",
    "static": false,
    "longname": "src/bufferview.js~BufferView#BufferList",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true
  },
  {
    "__docId__": 165,
    "kind": "method",
    "name": "isTemporarilyRemoved",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#isTemporarilyRemoved",
    "access": "public",
    "description": "Returns `true` if given `bufferId` is temporarily hidden",
    "lineNumber": 56,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 166,
    "kind": "method",
    "name": "isPermanentlyRemoved",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#isPermanentlyRemoved",
    "access": "public",
    "description": "Returns `true` if given `bufferId` is permanently hidden",
    "lineNumber": 65,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 167,
    "kind": "method",
    "name": "isHidden",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#isHidden",
    "access": "public",
    "description": "Returns `true` if given `bufferId` is hidden",
    "lineNumber": 74,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 168,
    "kind": "method",
    "name": "unhide",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#unhide",
    "access": "public",
    "description": "Remove hidden status for given `bufferId`",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 169,
    "kind": "method",
    "name": "setTemporarilyRemoved",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#setTemporarilyRemoved",
    "access": "public",
    "description": "Temporarily hide given `bufferId`",
    "lineNumber": 99,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 170,
    "kind": "method",
    "name": "setPermanentlyRemoved",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#setPermanentlyRemoved",
    "access": "public",
    "description": "Permanently hide given `bufferId`",
    "lineNumber": 109,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 171,
    "kind": "method",
    "name": "addBuffer",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#addBuffer",
    "access": "public",
    "description": "Add (or move) a buffer to a specified position",
    "lineNumber": 120,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 172,
    "kind": "method",
    "name": "moveBuffer",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#moveBuffer",
    "access": "public",
    "description": "Move a buffer to another position",
    "lineNumber": 134,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 173,
    "kind": "method",
    "name": "comparator",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#comparator",
    "access": "public",
    "description": "Used by sort methods",
    "examples": [
      "const bufferView = new BufferView(1, {...});\nanArrayOfBufferIds.sort(bufferView.comparator);"
    ],
    "lineNumber": 151,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id2",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 174,
    "kind": "method",
    "name": "update",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#update",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 175,
    "kind": "method",
    "name": "toString",
    "memberof": "src/bufferview.js~BufferView",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/bufferview.js~BufferView#toString",
    "access": "public",
    "description": null,
    "lineNumber": 165,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 176,
    "kind": "file",
    "name": "src/identity.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\nconst { types: qtypes, serialization: { Serializable, serialize } } = require('qtdatastream');\n\n/**\n * Quassel Identity\n * @implements {Serializable}\n */\n@Serializable()\nexport default class Identity {\n\n  @serialize(qtypes.QBool)\n  autoAwayEnabled = false;\n\n  @serialize(qtypes.QString)\n  autoAwayReason = 'Not here. No, really. not here!';\n\n  @serialize(qtypes.QBool)\n  autoAwayReasonEnabled = false;\n\n  @serialize(qtypes.QUInt)\n  autoAwayTime = 10;\n\n  @serialize(qtypes.QString)\n  awayNick = '';\n\n  @serialize(qtypes.QBool)\n  awayNickEnabled = false;\n\n  @serialize(qtypes.QString)\n  awayReason = 'Gone fishing.';\n\n  @serialize(qtypes.QBool)\n  awayReasonEnabled = true;\n\n  @serialize(qtypes.QBool)\n  detachAwayEnabled = false;\n\n  @serialize(qtypes.QString)\n  detachAwayReason = 'All Quassel clients vanished from the face of the earth...';\n\n  @serialize(qtypes.QBool)\n  detachAwayReasonEnabled = false;\n\n  @serialize(qtypes.QString)\n  ident = 'quassel';\n\n  @serialize(qtypes.QUserType.get('IdentityId'))\n  identityId = -1;\n\n  /** @type {string} */\n  @serialize(qtypes.QString)\n  identityName;\n\n  /** @type {string} */\n  @serialize(qtypes.QString)\n  realName;\n\n  /** @type {string[]} */\n  @serialize(qtypes.QList)\n  get nicks() {\n    return this._nicks;\n  }\n\n  /** @type {string[]} */\n  set nicks(value) {\n    this._nicks = value;\n    this.nickRegexes = value.map(nick => nick.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1'));\n  }\n\n  /** @type {number} */\n  set id(value) {\n    this.identityId = value;\n  }\n\n  /** @type {number} */\n  get id() {\n    return this.identityId;\n  }\n\n  @serialize(qtypes.QString)\n  kickReason = 'Kindergarten is elsewhere!';\n\n  @serialize(qtypes.QString)\n  partReason = 'http://quassel-irc.org - Chat comfortably. Anywhere.';\n\n  @serialize(qtypes.QString)\n  quitReason = 'http://quassel-irc.org - Chat comfortably. Anywhere.';\n\n  constructor(data) {\n    this._nicks = [];\n    this.nickRegexes = [];\n    if (data) {\n      this.update(data);\n    }\n    // TODO see if identityId is always a number, otherwise parseInt\n  }\n\n  update(data) {\n    Object.assign(this, data);\n  }\n\n  /**\n   * Create an {@link module:identity} object with default values\n   * @param {String} name\n   * @param {?String} nick\n   * @param {?String} realname\n   */\n  static create(name, nick, realname) {\n    const options = {\n      identityName: name,\n      realName: realname || name,\n      nicks: [ nick || name ]\n    };\n    return new this(options);\n  }\n\n  toString() {\n    return `<Identity ${this.identityName}>`;\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/identity.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 177,
    "kind": "variable",
    "name": "types",
    "memberof": "src/identity.js",
    "static": true,
    "longname": "src/identity.js~types",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/identity.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 178,
    "kind": "class",
    "name": "Identity",
    "memberof": "src/identity.js",
    "static": true,
    "longname": "src/identity.js~Identity",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/identity.js",
    "importStyle": "Identity",
    "description": "Quassel Identity",
    "lineNumber": 16,
    "decorators": [
      {
        "name": "Serializable",
        "arguments": "()"
      }
    ],
    "interface": false,
    "implements": [
      "Serializable"
    ]
  },
  {
    "__docId__": 179,
    "kind": "member",
    "name": "autoAwayEnabled",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#autoAwayEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 180,
    "kind": "member",
    "name": "autoAwayReason",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#autoAwayReason",
    "access": "public",
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 181,
    "kind": "member",
    "name": "autoAwayReasonEnabled",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#autoAwayReasonEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "autoAwayTime",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#autoAwayTime",
    "access": "public",
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUInt)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 183,
    "kind": "member",
    "name": "awayNick",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#awayNick",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "awayNickEnabled",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#awayNickEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 185,
    "kind": "member",
    "name": "awayReason",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#awayReason",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "awayReasonEnabled",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#awayReasonEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 40,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 187,
    "kind": "member",
    "name": "detachAwayEnabled",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#detachAwayEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "detachAwayReason",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#detachAwayReason",
    "access": "public",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 189,
    "kind": "member",
    "name": "detachAwayReasonEnabled",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#detachAwayReasonEnabled",
    "access": "public",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "ident",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#ident",
    "access": "public",
    "description": null,
    "lineNumber": 52,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 191,
    "kind": "member",
    "name": "identityId",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#identityId",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUserType.get('IdentityId'))"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "identityName",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#identityName",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ]
  },
  {
    "__docId__": 193,
    "kind": "member",
    "name": "realName",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#realName",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ]
  },
  {
    "__docId__": 194,
    "kind": "get",
    "name": "nicks",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#nicks",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QList)"
      }
    ]
  },
  {
    "__docId__": 195,
    "kind": "set",
    "name": "nicks",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#nicks",
    "access": "public",
    "description": null,
    "lineNumber": 72,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "_nicks",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#_nicks",
    "access": "private",
    "description": null,
    "lineNumber": 73,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 197,
    "kind": "member",
    "name": "nickRegexes",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#nickRegexes",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 198,
    "kind": "set",
    "name": "id",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#id",
    "access": "public",
    "description": null,
    "lineNumber": 78,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 200,
    "kind": "get",
    "name": "id",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#id",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "member",
    "name": "kickReason",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#kickReason",
    "access": "public",
    "description": null,
    "lineNumber": 88,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "partReason",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#partReason",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 203,
    "kind": "member",
    "name": "quitReason",
    "memberof": "src/identity.js~Identity",
    "static": false,
    "longname": "src/identity.js~Identity#quitReason",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 204,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true
  },
  {
    "__docId__": 207,
    "kind": "method",
    "name": "update",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#update",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 208,
    "kind": "method",
    "name": "create",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/identity.js~Identity.create",
    "access": "public",
    "description": "Create an {@link module:identity} object with default values",
    "lineNumber": 115,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "realname",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 209,
    "kind": "method",
    "name": "toString",
    "memberof": "src/identity.js~Identity",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/identity.js~Identity#toString",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 210,
    "kind": "file",
    "name": "src/ignore.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\nconst logger = require('debug')('libquassel:ignore');\nconst { Serializable } = require('qtdatastream').serialization;\n\nimport { Types } from './message';\n\n/**\n * @type {Object}\n * @property {number} IgnoreTypes.SENDER\n * @property {number} IgnoreTypes.MESSAGE\n * @property {number} IgnoreTypes.CTCP\n */\nexport const IgnoreTypes = {\n  SENDER: 0,\n  MESSAGE: 1,\n  CTCP: 2\n};\n\n/**\n * @type {Object}\n * @property {number} StrictnessTypes.UNMATCHED\n * @property {number} StrictnessTypes.SOFT\n * @property {number} StrictnessTypes.HARD\n */\nexport const StrictnessTypes = {\n  UNMATCHED: 0,\n  SOFT: 1,\n  HARD: 2\n};\n\n/**\n * @type {Object}\n * @property {number} ScopeTypes.GLOBAL\n * @property {number} ScopeTypes.NETWORK\n * @property {number} ScopeTypes.CHANNEL\n */\nexport const ScopeTypes = {\n  GLOBAL: 0,\n  NETWORK: 1,\n  CHANNEL: 2\n};\n\n/**\n * Ignore item as represented in the configuration\n */\nexport class IgnoreItem {\n  /** @type {number} */\n  strictness;\n  /** @type {string} */\n  scopeRule;\n  /** @type {number} */\n  scope;\n  /** @type {boolean} */\n  isRegEx;\n  /** @type {boolean} */\n  isActive;\n  /** @type {number} */\n  ignoreType;\n  /** @type {string} */\n  ignoreRule;\n  /** @type {RegExp[]} */\n  regexScope;\n  /** @type {RegExp} */\n  regexIgnore;\n\n  /**\n   * @param {number} strictness\n   * @param {string} scopeRule\n   * @param {number} scope\n   * @param {boolean} isRegEx\n   * @param {boolean} isActive\n   * @param {number} ignoreType\n   * @param {string} ignoreRule\n   */\n  constructor(strictness, scopeRule, scope, isRegEx, isActive, ignoreType, ignoreRule){\n    this.strictness = strictness;\n    this.scopeRule = scopeRule;\n    this.scope = scope;\n    this.isRegEx = isRegEx;\n    this.isActive = isActive;\n    this.ignoreType = ignoreType;\n    this.ignoreRule = ignoreRule;\n    this.regexScope = [];\n    this.compile();\n  }\n\n  /**\n   * Returns `true` if subject match the scope rules, `false` otherwhise\n   * @param {string} subject\n   * @returns {boolean}\n   */\n  matchScope(subject) {\n    if (typeof subject !== 'string') return false;\n    let ret = false;\n    for (let regexScope of this.regexScope) {\n      ret = subject.match(regexScope) !== null;\n      if (ret) break;\n    }\n    return ret;\n  }\n\n  /**\n   * Returns `true` if subject match ignore rule, `false` otherwhise\n   * @param {String} subject\n   * @returns {boolean}\n   */\n  matchIgnore(subject) {\n    if (typeof subject !== 'string') return false;\n    return subject.match(this.regexIgnore) !== null;\n  }\n\n  /**\n   * Compile internal regexes from `scopeRules` and `ignoreRule` attributes\n   */\n  compile() {\n    const scopeRules = this.scopeRule.split(';');\n    this.regexScope = [];\n    for (let scopeRule of scopeRules) {\n      this.regexScope.push(wildcardToRegex(scopeRule));\n    }\n    try {\n      this.regexIgnore = this.isRegEx ? new RegExp(this.ignoreRule, 'i') : wildcardToRegex(this.ignoreRule);\n    } catch (e) {\n      logger('Invalid RexExp', e);\n      this.isActive = false;\n    }\n  }\n\n  toString() {\n    const ret = [ '<IgnoreItem' ];\n    for (let key of [ 'strictness', 'scopeRule', 'scope', 'isRegEx', 'isActive', 'ignoreType', 'ignoreRule' ]) {\n      ret.push(`${key}=${this[key]}`);\n    }\n    ret.push('>');\n    return ret.join(' ');\n  }\n}\n\nfunction wildcardToRegex(subject) {\n  const input = subject.trim().replace(/([.+^$\\\\(){}|-])/g, '\\\\$1').replace(/\\*/g, '.*').replace(/\\?/g, '.');\n  return new RegExp(`^${input}$`, 'i');\n}\n\n/**\n * Handles list of {@link IgnoreItem}\n * @implements {Serializable}\n */\n@Serializable()\nexport class IgnoreList {\n\n  constructor() {\n    this.list = [];\n  }\n\n  /**\n   * Import object as a list of {@link IgnoreItem}\n   * @param {Object} data\n   */\n  import(data) {\n    let item;\n    this.list = new Array(data);\n    for (let i=0; i<data.IgnoreList.ignoreRule.length; i++) {\n      item = new IgnoreItem(\n        data.IgnoreList.strictness[i],\n        data.IgnoreList.scopeRule[i],\n        data.IgnoreList.scope[i],\n        data.IgnoreList.isRegEx[i],\n        data.IgnoreList.isActive[i],\n        data.IgnoreList.ignoreType[i],\n        data.IgnoreList.ignoreRule[i]\n      );\n      this.list[i] = item;\n    }\n  }\n\n  /**\n   * Export the map into an Object ready for qtdatasteam\n   * @override\n   * @returns {Object}\n   */\n  _export() {\n    const len = this.list.length;\n    const ret = {\n      IgnoreList: {\n        strictness: Array(len),\n        scopeRule: Array(len),\n        scope: Array(len),\n        isRegEx: Array(len),\n        isActive: Array(len),\n        ignoreType: Array(len),\n        ignoreRule: Array(len)\n      }\n    };\n    for (let i=0; i<len; i++) {\n      ret.IgnoreList.strictness[i] = this.list[i].strictness;\n      ret.IgnoreList.scopeRule[i] = this.list[i].scopeRule;\n      ret.IgnoreList.scope[i] = this.list[i].scope;\n      ret.IgnoreList.isRegEx[i] = this.list[i].isRegEx;\n      ret.IgnoreList.isActive[i] = this.list[i].isActive;\n      ret.IgnoreList.ignoreType[i] = this.list[i].ignoreType;\n      ret.IgnoreList.ignoreRule[i] = this.list[i].ignoreRule;\n    }\n    return ret;\n  }\n\n  /**\n   * Returns true if `message` matches ignore rules\n   * @param {IRCMessage} message\n   * @param {NetworkCollection} networks\n   * @returns {boolean}\n   */\n  matches(message, networks) {\n    const network = networks.get(message.bufferInfo.network);\n    const buffer = network.buffers.get(message.bufferInfo.id);\n\n    if (message.type !== Types.PLAIN && message.type !== Types.ACTION && message.type !== Types.NOTICE)\n      return false;\n\n    for (let item of this.list) {\n      if (!item.isActive || item.ignoreType === IgnoreTypes.CTCP)\n        continue;\n      if (item.scope === ScopeTypes.GLOBAL\n          || (item.scope === ScopeTypes.NETWORK && item.matchScope(network.networkName))\n          || (item.scope === ScopeTypes.CHANNEL && item.matchScope(buffer.name))) {\n        const subject = item.ignoreType === IgnoreTypes.MESSAGE ? message.content : message.sender;\n        if (item.matchIgnore(subject)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  toString() {\n    return [ '<IgnoreList', this.list.map(x => '\\n\\t' + x), '>' ].join(' ');\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/ignore.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 211,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/ignore.js",
    "static": true,
    "longname": "src/ignore.js~logger",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 212,
    "kind": "variable",
    "name": "Serializable",
    "memberof": "src/ignore.js",
    "static": true,
    "longname": "src/ignore.js~Serializable",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 213,
    "kind": "variable",
    "name": "IgnoreTypes",
    "memberof": "src/ignore.js",
    "static": true,
    "longname": "src/ignore.js~IgnoreTypes",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": "{IgnoreTypes}",
    "description": "",
    "lineNumber": 20,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "IgnoreTypes.SENDER",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "IgnoreTypes.MESSAGE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "IgnoreTypes.CTCP",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 214,
    "kind": "variable",
    "name": "StrictnessTypes",
    "memberof": "src/ignore.js",
    "static": true,
    "longname": "src/ignore.js~StrictnessTypes",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": "{StrictnessTypes}",
    "description": "",
    "lineNumber": 32,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "StrictnessTypes.UNMATCHED",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "StrictnessTypes.SOFT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "StrictnessTypes.HARD",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 215,
    "kind": "variable",
    "name": "ScopeTypes",
    "memberof": "src/ignore.js",
    "static": true,
    "longname": "src/ignore.js~ScopeTypes",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": "{ScopeTypes}",
    "description": "",
    "lineNumber": 44,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ScopeTypes.GLOBAL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ScopeTypes.NETWORK",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ScopeTypes.CHANNEL",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 216,
    "kind": "class",
    "name": "IgnoreItem",
    "memberof": "src/ignore.js",
    "static": true,
    "longname": "src/ignore.js~IgnoreItem",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": "{IgnoreItem}",
    "description": "Ignore item as represented in the configuration",
    "lineNumber": 53,
    "interface": false
  },
  {
    "__docId__": 217,
    "kind": "member",
    "name": "strictness",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#strictness",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 218,
    "kind": "member",
    "name": "scopeRule",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#scopeRule",
    "access": "public",
    "description": null,
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 219,
    "kind": "member",
    "name": "scope",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#scope",
    "access": "public",
    "description": null,
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 220,
    "kind": "member",
    "name": "isRegEx",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#isRegEx",
    "access": "public",
    "description": null,
    "lineNumber": 61,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 221,
    "kind": "member",
    "name": "isActive",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#isActive",
    "access": "public",
    "description": null,
    "lineNumber": 63,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 222,
    "kind": "member",
    "name": "ignoreType",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#ignoreType",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 223,
    "kind": "member",
    "name": "ignoreRule",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#ignoreRule",
    "access": "public",
    "description": null,
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 224,
    "kind": "member",
    "name": "regexScope",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#regexScope",
    "access": "public",
    "description": null,
    "lineNumber": 69,
    "type": {
      "nullable": null,
      "types": [
        "RegExp[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 225,
    "kind": "member",
    "name": "regexIgnore",
    "memberof": "src/ignore.js~IgnoreItem",
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#regexIgnore",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "RegExp"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 226,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ignore.js~IgnoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 82,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "strictness",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "scopeRule",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "scope",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isRegEx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isActive",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ignoreType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "ignoreRule",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 235,
    "kind": "method",
    "name": "matchScope",
    "memberof": "src/ignore.js~IgnoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#matchScope",
    "access": "public",
    "description": "Returns `true` if subject match the scope rules, `false` otherwhise",
    "lineNumber": 99,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "subject",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 236,
    "kind": "method",
    "name": "matchIgnore",
    "memberof": "src/ignore.js~IgnoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#matchIgnore",
    "access": "public",
    "description": "Returns `true` if subject match ignore rule, `false` otherwhise",
    "lineNumber": 114,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "subject",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 237,
    "kind": "method",
    "name": "compile",
    "memberof": "src/ignore.js~IgnoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#compile",
    "access": "public",
    "description": "Compile internal regexes from `scopeRules` and `ignoreRule` attributes",
    "lineNumber": 122,
    "params": [],
    "return": null
  },
  {
    "__docId__": 241,
    "kind": "method",
    "name": "toString",
    "memberof": "src/ignore.js~IgnoreItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreItem#toString",
    "access": "public",
    "description": null,
    "lineNumber": 136,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 242,
    "kind": "function",
    "name": "wildcardToRegex",
    "memberof": "src/ignore.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/ignore.js~wildcardToRegex",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 146,
    "undocument": true,
    "params": [
      {
        "name": "subject",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 243,
    "kind": "class",
    "name": "IgnoreList",
    "memberof": "src/ignore.js",
    "static": true,
    "longname": "src/ignore.js~IgnoreList",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/ignore.js",
    "importStyle": "{IgnoreList}",
    "description": "Handles list of {@link IgnoreItem}",
    "lineNumber": 156,
    "decorators": [
      {
        "name": "Serializable",
        "arguments": "()"
      }
    ],
    "interface": false,
    "implements": [
      "Serializable"
    ]
  },
  {
    "__docId__": 244,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/ignore.js~IgnoreList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreList#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true
  },
  {
    "__docId__": 245,
    "kind": "member",
    "name": "list",
    "memberof": "src/ignore.js~IgnoreList",
    "static": false,
    "longname": "src/ignore.js~IgnoreList#list",
    "access": "public",
    "description": null,
    "lineNumber": 159,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 246,
    "kind": "method",
    "name": "import",
    "memberof": "src/ignore.js~IgnoreList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreList#import",
    "access": "public",
    "description": "Import object as a list of {@link IgnoreItem}",
    "lineNumber": 166,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 248,
    "kind": "method",
    "name": "_export",
    "memberof": "src/ignore.js~IgnoreList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreList#_export",
    "access": "private",
    "description": "Export the map into an Object ready for qtdatasteam",
    "lineNumber": 188,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Object}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": ""
    },
    "override": true,
    "params": []
  },
  {
    "__docId__": 249,
    "kind": "method",
    "name": "matches",
    "memberof": "src/ignore.js~IgnoreList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreList#matches",
    "access": "public",
    "description": "Returns true if `message` matches ignore rules",
    "lineNumber": 219,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCMessage"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "NetworkCollection"
        ],
        "spread": false,
        "optional": false,
        "name": "networks",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 250,
    "kind": "method",
    "name": "toString",
    "memberof": "src/ignore.js~IgnoreList",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/ignore.js~IgnoreList#toString",
    "access": "public",
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 251,
    "kind": "file",
    "name": "src/libquassel.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\nimport './usertypes'; // register usertypes first\nconst { EventEmitter } = require('events');\nconst logger = require('debug')('libquassel:main');\n\nimport { Types as RequestTypes, Core } from './request';\nimport { NetworkCollection } from './network';\nimport { IRCBuffer } from './buffer';\nimport IRCUser from './user';\nimport Identity from './identity';\nimport BufferView from './bufferview';\nimport { Types as MessageTypes, HighlightModes } from './message';\nimport * as alias from './alias';\nimport * as ignore from './ignore';\n\n/**\n * @type {Object}\n * @property {number} Features.SYNCHRONIZEDMARKERLINE\n * @property {number} Features.SASLAUTHENTICATION\n * @property {number} Features.SASLEXTERNAL\n * @property {number} Features.HIDEINACTIVENETWORKS\n * @property {number} Features.PASSWORDCHANGE\n * @property {number} Features.CAPNEGOTIATION\n * @property {number} Features.VERIFYSERVERSSL\n * @property {number} Features.CUSTOMRATELIMITS\n * @property {number} Features.NUMFEATURES\n */\nexport const Features = {\n  SYNCHRONIZEDMARKERLINE: 0x0001,\n  SASLAUTHENTICATION: 0x0002,\n  SASLEXTERNAL: 0x0004,\n  HIDEINACTIVENETWORKS: 0x0008,\n  PASSWORDCHANGE: 0x0010,\n  CAPNEGOTIATION: 0x0020, // IRCv3 capability negotiation, account tracking\n  VERIFYSERVERSSL: 0x0040, // IRC server SSL validation\n  CUSTOMRATELIMITS: 0x0080, // IRC server custom message rate limits\n  NUMFEATURES: 0x0080\n};\n\n/**\n * @typedef {function(user: string, password: string)} loginCallback\n */\n\n/**\n * Main class to interact with Quassel instance\n * @example\n * import { Client } from 'libquassel';\n * const net = require('net');\n *\n * const quassel = new Client(function(next) {\n *   next(\"user\", \"password\");\n * });\n * const socket = net.createConnection({\n *   host: \"localhost\",\n *   port: 4242\n * });\n *\n * quassel.connect(socket);\n */\nexport class Client extends EventEmitter {\n  /**\n   * @param {function(next: loginCallback)} loginCallback\n   * @param {Object} [options] Allows optionnal parameters\n   * @param {number} [options.initialbackloglimit=options.backloglimit] number of backlogs to request per buffer at connection\n   * @param {number} [options.backloglimit=100] number of backlogs to request per buffer after connection\n   * @param {boolean} [options.securecore=true] Use SSL to connect to the core (if the core allows it)\n   * @param {number} [options.highlightmode=0x02] Choose how highlights on nicks works. Defaults to only highlight a message if current nick is present.\n   */\n  constructor(loginCallback, options = {}) {\n    super();\n    /** @type {Object} options */\n    this.options = {};\n    this.options.backloglimit = parseInt(options.backloglimit || 100, 10);\n    this.options.initialbackloglimit = parseInt(options.initialbackloglimit || this.options.backloglimit, 10);\n    this.options.highlightmode = (typeof options.highlightmode === 'number') ? options.highlightmode : HighlightModes.CURRENTNICK;\n    this.options.securecore = options.securecore !== false;\n    /** @type {Core} */\n    this.core = new Core(this.options);\n    /** @type {NetworkCollection} */\n    this.networks = new NetworkCollection();\n    /** @type {Map<number, Identity>} */\n    this.identities = new Map();\n    /** @type {IgnoreList} */\n    this.ignoreList = new ignore.IgnoreList();\n    /** @type {AliasItem[]} */\n    this.aliases = [];\n    /** @type {Map<number, BufferView>} */\n    this.bufferViews = new Map();\n    /** @type {?number} */\n    this.heartbeatInterval = null;\n    /** @type {boolean} */\n    this.useCompression = false;\n    /** @type {?boolean} */\n    this.connected = null;\n    /** @type {?Object} */\n    this.coreInfo = null;\n    /** @type {?Object} */\n    this.coreData = null;\n    /** @type {function(next: loginCallback)} */\n    this.loginCallback = loginCallback;\n\n    if (typeof loginCallback !== 'function') {\n      throw new Error('loginCallback parameter is mandatory and must be a function');\n    }\n\n    this.core.on('data', data => this.dispatch(data));\n  }\n\n  /**\n   * Handles quasselcore messages that possesses a `MsgType` attribute\n   * @param {Object} obj\n   * @emits {Event:coreinfoinit}\n   * @emits {Event:login}\n   * @emits {Event:loginfailed}\n   * @emits {Event:network.addbuffer}\n   * @emits {Event:init}\n   * @emits {Event:setup}\n   * @emits {Event:setupok}\n   * @emits {Event:setupfailed}\n   * @emits {Event:identities.init}\n   * @protected\n   */\n  handleMsgType(obj) {\n    switch (obj.MsgType) {\n    case 'ClientInitAck':\n      this.handleClientInitAck(obj);\n      break;\n    case 'ClientLoginAck':\n      logger('Logged in');\n      this.emit('login');\n      break;\n    case 'ClientLoginReject':\n      logger('ClientLoginReject: %O', obj);\n      this.emit('loginfailed');\n      break;\n    case 'CoreSetupAck':\n      logger('Core setup successful');\n      this.emit('setupok');\n      break;\n    case 'CoreSetupReject':\n      logger('Core setup failed: %O', obj.Error);\n      this.emit('setupfailed', obj.Error);\n      break;\n    case 'SessionInit':\n      this.handleSessionInit(obj);\n      break;\n    default:\n      logger('Unhandled MsgType %s', obj.MsgType);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleClientInitAck(obj) {\n    this.coreInfo = obj;\n    this.emit('coreinfoinit', obj);\n    if (!obj.Configured) {\n      this.core.finishClientInit(() => this.emit('setup', obj.StorageBackends));\n    } else if (obj.LoginEnabled) {\n      this.core.finishClientInit(() => this.login());\n    } else {\n      this.emit('error', new Error('Your core is not supported'));\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleSessionInit(obj) {\n    this.emit('init', obj);\n    // Init networks\n    for (let networkId of obj.SessionState.NetworkIds) {\n      // Save network list\n      this.networks.add(networkId);\n      this.core.sendInitRequest('Network', String(networkId));\n    }\n    // Attach buffers to network\n    for (let bufferInfo of obj.SessionState.BufferInfos) {\n      const ircbuffer = new IRCBuffer(bufferInfo);\n      this.networks.get(ircbuffer.network).buffers.add(ircbuffer);\n      if (ircbuffer.isChannel) {\n        this.core.sendInitRequest('IrcChannel', `${ircbuffer.network}/${ircbuffer.name}`);\n      }\n      this.emit('network.addbuffer', ircbuffer.network, bufferInfo.id);\n      // Init backlogs for this buffer\n      if (this.options.initialbackloglimit > 0) {\n        this.core.backlog(bufferInfo.id);\n      }\n    }\n    // Init Identities\n    for (let identity of obj.SessionState.Identities) {\n      this.identities.set(identity.identityId, new Identity(identity));\n    }\n    this.emit('identities.init', this.identities);\n    this.core.sendInitRequest('BufferSyncer');\n    this.core.sendInitRequest('BufferViewManager');\n    this.core.sendInitRequest('IgnoreListManager');\n    this.core.sendInitRequest('AliasManager');\n    this.heartbeatInterval = setInterval(() => this.core.heartBeat(), 30000);\n  }\n\n  /**\n   * Returns `true` if the core supports the given feature\n   * @example\n   * quassel.supports(Features.PASSWORDCHANGE);\n   * @param {number} feature\n   * @returns {boolean}\n   */\n  supports(feature) {\n    return (this.coreInfo.CoreFeatures & feature) > 0;\n  }\n\n  /**\n   * Dispatch quasselcore messages\n   * @param {Object} obj\n   * @protected\n   */\n  dispatch(obj) {\n    if (obj === null) {\n      logger('Received null object ... ?');\n    } else if (obj.MsgType !== undefined) {\n      this.handleMsgType(obj);\n    } else if (Array.isArray(obj)) {\n      this.handleStruct(obj);\n    } else {\n      logger('Unknown message: %O', obj);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleInitDataNetwork(id, data) {\n    id = parseInt(id, 10);\n    const network = this.networks.get(id);\n    network.update(data);\n    return network;\n  }\n\n  /**\n   * Handles most of the quasselcore messages\n   * @param {*} obj - quasselcore message decoded by qtdatasteam\n   * @emits {Event:coreinfo}\n   * @emits {Event:network.init}\n   * @emits {Event:network.latency}\n   * @emits {Event:network.connectionstate}\n   * @emits {Event:network.addbuffer}\n   * @emits {Event:network.connected}\n   * @emits {Event:network.disconnected}\n   * @emits {Event:network.userrenamed}\n   * @emits {Event:network.mynick}\n   * @emits {Event:network.networkname}\n   * @emits {Event:network.server}\n   * @emits {Event:network.serverlist}\n   * @emits {Event:network.adduser}\n   * @emits {Event:network.new}\n   * @emits {Event:network.remove}\n   * @emits {Event:network.codec.decoding}\n   * @emits {Event:network.codec.encoding}\n   * @emits {Event:network.codec.server}\n   * @emits {Event:network.perform}\n   * @emits {Event:network.identity}\n   * @emits {Event:network.autoreconnect.interval}\n   * @emits {Event:network.autoreconnect.retries}\n   * @emits {Event:network.autoidentify.service}\n   * @emits {Event:network.autoidentify.password}\n   * @emits {Event:network.unlimitedreconnectretries}\n   * @emits {Event:network.usesasl}\n   * @emits {Event:network.sasl.account}\n   * @emits {Event:network.sasl.password}\n   * @emits {Event:network.rejoinchannels}\n   * @emits {Event:network.usecustommessagerate}\n   * @emits {Event:network.messagerate.unlimited}\n   * @emits {Event:network.messagerate.delay}\n   * @emits {Event:network.messagerate.burstsize}\n   * @emits {Event:buffer.read}\n   * @emits {Event:buffer.lastseen}\n   * @emits {Event:buffer.markerline}\n   * @emits {Event:buffer.remove}\n   * @emits {Event:buffer.rename}\n   * @emits {Event:buffer.merge}\n   * @emits {Event:buffer.deactivate}\n   * @emits {Event:buffer.activate}\n   * @emits {Event:buffer.backlog}\n   * @emits {Event:buffer.message}\n   * @emits {Event:bufferview.ids}\n   * @emits {Event:bufferview.bufferunhide}\n   * @emits {Event:bufferview.bufferhidden}\n   * @emits {Event:bufferview.orderchanged}\n   * @emits {Event:bufferview.init}\n   * @emits {Event:bufferview.networkid}\n   * @emits {Event:bufferview.search}\n   * @emits {Event:bufferview.hideinactivenetworks}\n   * @emits {Event:bufferview.hideinactivebuffers}\n   * @emits {Event:bufferview.allowedbuffertypes}\n   * @emits {Event:bufferview.addnewbuffersautomatically}\n   * @emits {Event:bufferview.minimumactivity}\n   * @emits {Event:bufferview.bufferviewname}\n   * @emits {Event:bufferview.disabledecoration}\n   * @emits {Event:bufferview.update}\n   * @emits {Event:user.part}\n   * @emits {Event:user.quit}\n   * @emits {Event:user.away}\n   * @emits {Event:user.realname}\n   * @emits {Event:channel.join}\n   * @emits {Event:channel.addusermode}\n   * @emits {Event:channel.removeusermode}\n   * @emits {Event:channel.topic}\n   * @emits {Event:ignorelist}\n   * @emits {Event:identity}\n   * @emits {Event:identity.new}\n   * @emits {Event:identity.remove}\n   * @emits {Event:aliases}\n   * @protected\n   */\n  handleStruct(obj) {\n    const [ requesttype ] = obj;\n    let className, id, functionName, data;\n    switch (requesttype) {\n    case RequestTypes.SYNC:\n      [ , className, id, functionName, ...data ] = obj;\n      this.handleStructSync(className.toString(), id, functionName.toString(), data);\n      break;\n    case RequestTypes.RPCCALL:\n      [ , functionName, ...data ] = obj;\n      this.handleStructRpcCall(functionName.toString(), data);\n      break;\n    case RequestTypes.INITDATA:\n      [ , className, id, ...data ] = obj;\n      this.handleStructInitData(className.toString(), id, data);\n      break;\n    case RequestTypes.HEARTBEAT:\n      logger('HeartBeat');\n      this.core.heartBeat(true);\n      break;\n    case RequestTypes.HEARTBEATREPLY:\n      logger('HeartBeatReply');\n      break;\n    default:\n      logger('Unhandled RequestType #%s', requesttype);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSync(className, id, functionName, data) {\n    let networkId, username, buffername;\n    switch (className) {\n    case 'Network':\n      return this.handleStructSyncNetwork(parseInt(id.toString(), 10), functionName, data);\n    case 'BufferSyncer':\n      return this.handleStructSyncBufferSyncer(functionName, data);\n    case 'BufferViewManager':\n      return this.handleStructSyncBufferViewManager(functionName, data);\n    case 'BufferViewConfig':\n      return this.handleStructSyncBufferViewConfig(parseInt(id.toString(), 10), functionName, data);\n    case 'IrcUser':\n      [ networkId, username ] = splitOnce(id, '/');\n      return this.handleStructSyncIrcUser(parseInt(networkId, 10), username, functionName, data);\n    case 'IrcChannel':\n      [ networkId, buffername ] = splitOnce(id, '/');\n      return this.handleStructSyncIrcChannel(parseInt(networkId, 10), buffername, functionName, data);\n    case 'BacklogManager':\n      return this.handleStructSyncBacklogManager(functionName, data);\n    case 'IgnoreListManager':\n      return this.handleStructSyncIgnoreListManager(functionName, data);\n    case 'Identity':\n      return this.handleStructSyncIdentity(parseInt(id, 10), functionName, data);\n    case 'AliasManager':\n      return this.handleStructSyncAliasManager(functionName, data);\n    default:\n      logger('Unhandled Sync %s', className);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructRpcCall(functionName, data) {\n    switch (functionName) {\n    case '2displayStatusMsg(QString,QString)':\n      // Even official client doesn't use this ...\n      break;\n    case '2displayMsg(Message)':\n      this.handleStructRpcCallDisplayMsg(data);\n      break;\n    case '__objectRenamed__':\n      this.handleStructRpcCall__objectRenamed__(data);\n      break;\n    case '2networkCreated(NetworkId)':\n      // data[0] is networkId\n      this.networks.add(data[0]);\n      this.core.sendInitRequest('Network', String(data[0]));\n      this.emit('network.new', data[0]);\n      break;\n    case '2networkRemoved(NetworkId)':\n      // data[0] is networkId\n      this.networks.add(data[0]);\n      this.networks.delete(data[0]);\n      this.emit('network.remove', data[0]);\n      break;\n    case '2identityCreated(Identity)':\n      // data[0] is identity\n      this.identities.set(data[0].identityId, new Identity(data[0]));\n      this.emit('identity.new', data[0].identityId);\n      break;\n    case '2identityRemoved(IdentityId)':\n      // data[0] is identityId\n      this.identities.delete(data[0]);\n      this.emit('identity.remove', data[0]);\n      break;\n    default:\n      logger('Unhandled RpcCall %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructRpcCallDisplayMsg([ message ]) {\n    const network = this.networks.get(message.bufferInfo.network);\n    if (network) {\n      const identity = this.identities.get(network.identityId);\n      let buffer = network.buffers.get(message.bufferInfo.id);\n      if (!buffer) {\n        buffer = network.buffers.get(message.bufferInfo.name);\n        if (buffer) {\n          buffer.update(message.bufferInfo);\n          network.buffers.move(buffer, message.bufferInfo.id);\n        } else {\n          buffer = new IRCBuffer(message.bufferInfo);\n          this.networks.get(message.bufferInfo.network).buffers.add(buffer);\n          this.emit('network.addbuffer', message.bufferInfo.network, message.bufferInfo.id);\n        }\n      }\n      if (message.type === MessageTypes.NETSPLITJOIN) {\n        // TODO\n      } else if (message.type === MessageTypes.NETSPLITQUIT) {\n        // TODO\n      }\n\n      const simpleMessage = buffer.addMessage(message);\n      if (simpleMessage) {\n        simpleMessage._updateFlags(network, identity, this.options.highlightmode);\n        this.emit('buffer.message', message.bufferInfo.id, simpleMessage.id);\n      }\n    } else {\n      logger('Network %d does not exists', message.bufferInfo.network);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructRpcCall__objectRenamed__([ renamedSubject, oldSubject, newSubject ]) {\n    renamedSubject = renamedSubject.toString();\n    let networkId, newNick, oldNick;\n    switch (renamedSubject) {\n    case 'IrcUser':\n      [ networkId, newNick ] = splitOnce(oldSubject, '/'); // 1/Nick\n      networkId = parseInt(networkId, 10);\n      [ , oldNick ] = splitOnce(newSubject, '/'); // 1/Nick_\n      this.networks.get(networkId).renameUser(oldNick, newNick);\n      this.emit('network.userrenamed', networkId, oldNick, newNick);\n      break;\n    default:\n      logger('Unhandled RpcCall.__objectRenamed__ %s', renamedSubject);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructInitData(className, id, [ data ]) {\n    let network, bufferViewIds;\n    switch (className) {\n    case 'Network':\n      network = this.handleInitDataNetwork(id, data);\n      this.emit('network.init', network.networkId);\n      break;\n    case 'BufferSyncer':\n      this.handleStructInitDataBufferSyncer(data);\n      break;\n    case 'IrcUser':\n      this.handleStructInitDataIrcUser(id, data);\n      break;\n    case 'IrcChannel':\n      this.handleStructInitDataIrcChannel(id, data);\n      break;\n    case 'BufferViewManager':\n      ({ BufferViewIds: bufferViewIds } = data);\n      for (let bufferViewId of bufferViewIds) {\n        this.core.sendInitRequest('BufferViewConfig', bufferViewId);\n      }\n      this.emit('bufferview.ids', bufferViewIds);\n      break;\n    case 'BufferViewConfig':\n      this.handleStructInitDataBufferViewConfig(id, data);\n      break;\n    case 'IgnoreListManager':\n      this.ignoreList.import(data);\n      this.emit('ignorelist', this.ignoreList);\n      break;\n    case 'AliasManager':\n      this.aliases = alias.toArray(data);\n      this.emit('aliases', this.aliases);\n      break;\n    case 'CoreInfo':\n      this.coreData = data;\n      this.emit('coreinfo', data);\n      break;\n    default:\n      logger('Unhandled InitData %s', className);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructInitDataBufferSyncer(data) {\n    const { MarkerLines: markerLinesData, LastSeenMsg: lastSeenData } = data;\n    if (lastSeenData) {\n      for (let i=0; i<lastSeenData.length; i+=2) {\n        let bufferId = lastSeenData[i];\n        let messageId = lastSeenData[i+1];\n        if (this.networks.hasBuffer(bufferId)) {\n          this.emit('buffer.lastseen', bufferId, messageId);\n        } else {\n          logger('Buffer #%d does not exists', bufferId);\n        }\n      }\n    }\n    if (markerLinesData) {\n      for (let i=0; i<markerLinesData.length; i+=2) {\n        let bufferId = markerLinesData[i];\n        let messageId = markerLinesData[i+1];\n        if (this.networks.hasBuffer(bufferId)) {\n          this.emit('buffer.markerline', bufferId, messageId);\n        } else {\n          logger('Buffer #%d does not exists', bufferId);\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructInitDataIrcChannel(id, data) {\n    let [ networkId, bufferName ] = splitOnce(id, '/');\n    networkId = parseInt(networkId, 10);\n    const buffer = this.networks.get(networkId).buffers.get(bufferName);\n    buffer.topic = data.topic;\n    buffer.isActive = true;\n    this.emit('channel.topic', buffer.id, data.topic);\n    this.emit('buffer.activate', buffer.id);\n  }\n\n  /**\n   * @protected\n   */\n  handleStructInitDataIrcUser(id, data) {\n    let [ networkId, nick ] = splitOnce(id, '/');\n    networkId = parseInt(networkId, 10);\n    const user = this.networks.get(networkId).getUser(nick);\n    if (user) {\n      user.update(data);\n      this.emit('network.adduser', networkId, nick);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructInitDataBufferViewConfig(id, data) {\n    id = parseInt(id, 10);\n    this.bufferViews.set(id, new BufferView(id, data));\n    for (let temporarilyRemovedBuffer of data.TemporarilyRemovedBuffers) {\n      this.emit('bufferview.bufferhidden', id, temporarilyRemovedBuffer, 'temp');\n    }\n    for (let removedBuffer of data.RemovedBuffers) {\n      this.emit('bufferview.bufferhidden', id, removedBuffer, 'perm');\n    }\n    this.emit('bufferview.orderchanged', id);\n    this.emit('bufferview.init', id);\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncNetwork(id, functionName, [ data ]) {\n    const network = this.networks.get(id);\n    let nick, oldNick;\n    if (!network) {\n      logger('Uninitialized network %d. Ignoring %s', id, functionName);\n      return;\n    }\n    switch (functionName) {\n    case 'addIrcUser':\n      network.addUser(new IRCUser(data));\n      [ nick ] = data.split('!');\n      this.core.sendInitRequest('IrcUser',  `${id}/${nick}`);\n      break;\n    case 'addIrcChannel':\n      if (network.buffers.has(data)) {\n        this.emit('network.addbuffer', id, network.buffers.get(data).id);\n      } else {\n        const ircbuffer = new IRCBuffer({ name: data, network: id });\n        this.networks.get(ircbuffer.network).buffers.add(ircbuffer);\n        this.emit('network.addbuffer', id, data);\n      }\n      this.core.sendInitRequest('IrcChannel', `${id}/${data}`);\n      break;\n    case 'setConnectionState':\n      network.connectionState = data;\n      this.emit('network.connectionstate', id, data);\n      break;\n    case 'setLatency':\n      network.latency = data;\n      this.emit('network.latency', id, data);\n      break;\n    case 'setConnected':\n      network.isConnected = data;\n      this.emit(data ? 'network.connected' : 'network.disconnected', id);\n      break;\n    case 'setMyNick':\n      oldNick = network.nick;\n      network.nick = data;\n      network.renameUser(oldNick, data);\n      this.emit('network.userrenamed', id, oldNick, data);\n      this.emit('network.mynick', id, data);\n      break;\n    case 'setNetworkName':\n      network.networkName = data;\n      this.emit('network.networkname', id, data);\n      break;\n    case 'setCurrentServer':\n      network.currentServer = data;\n      this.emit('network.server', id, data);\n      break;\n    case 'setServerList':\n      network.ServerList = data;\n      this.emit('network.serverlist', id, data);\n      break;\n    case 'setCodecForDecoding':\n      network.codecForDecoding = data;\n      this.emit('network.codec.decoding', id, data);\n      break;\n    case 'setCodecForEncoding':\n      network.codecForEncoding = data;\n      this.emit('network.codec.encoding', id, data);\n      break;\n    case 'setCodecForServer':\n      network.codecForServer = data;\n      this.emit('network.codec.server', id, data);\n      break;\n    case 'setPerform':\n      network.perform = data;\n      this.emit('network.perform', id, data);\n      break;\n    case 'setIdentity':\n      network.identityId = data;\n      this.emit('network.identity', id, data);\n      break;\n    case 'setAutoReconnectInterval':\n      network.autoReconnectInterval = data;\n      this.emit('network.autoreconnect.interval', id, data);\n      break;\n    case 'setAutoReconnectRetries':\n      network.autoReconnectRetries = data;\n      this.emit('network.autoreconnect.retries', id, data);\n      break;\n    case 'setAutoIdentifyService':\n      network.autoIdentifyService = data;\n      this.emit('network.autoidentify.service', id, data);\n      break;\n    case 'setAutoIdentifyPassword':\n      network.autoIdentifyPassword = data;\n      this.emit('network.autoidentify.password', id, data);\n      break;\n    case 'setUnlimitedReconnectRetries':\n      network.unlimitedReconnectRetries = data;\n      this.emit('network.unlimitedreconnectretries', id, data);\n      break;\n    case 'setUseSasl':\n      network.useSasl = data;\n      this.emit('network.usesasl', id, data);\n      break;\n    case 'setSaslAccount':\n      network.saslAccount = data;\n      this.emit('network.sasl.account', id, data);\n      break;\n    case 'setSaslPassword':\n      network.saslPassword = data;\n      this.emit('network.sasl.password', id, data);\n      break;\n    case 'setRejoinChannels':\n      network.rejoinChannels = data;\n      this.emit('network.rejoinchannels', id, data);\n      break;\n    case 'setUseCustomMessageRate':\n      network.useCustomMessageRate = data;\n      this.emit('network.usecustommessagerate', id, data);\n      break;\n    case 'setUnlimitedMessageRate':\n      network.unlimitedMessageRate = data;\n      this.emit('network.messagerate.unlimited', id, data);\n      break;\n    case 'setMessageRateDelay':\n      network.msgRateMessageDelay = data;\n      this.emit('network.messagerate.delay', id, data);\n      break;\n    case 'setMessageRateBurstSize':\n      network.msgRateBurstSize = data;\n      this.emit('network.messagerate.burstsize', id, data);\n      break;\n    default:\n      logger('Unhandled Sync.Network %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncBufferSyncer(functionName, [ bufferId, data ]) {\n    let bufferTo, bufferFrom;\n    switch (functionName) {\n    case 'markBufferAsRead':\n      this.emit('buffer.read', bufferId);\n      break;\n    case 'setLastSeenMsg':\n      // data is a messageId\n      this.emit('buffer.lastseen', bufferId, data);\n      break;\n    case 'setMarkerLine':\n      // data is a messageId\n      this.emit('buffer.markerline', bufferId, data);\n      break;\n    case 'removeBuffer':\n      this.networks.deleteBuffer(bufferId);\n      this.emit('buffer.remove', bufferId);\n      break;\n    case 'renameBuffer':\n      // data is the new name\n      this.networks.getBuffer(bufferId).name = data;\n      this.emit('buffer.rename', bufferId, data);\n      break;\n    case 'mergeBuffersPermanently':\n      bufferTo = this.networks.getBuffer(bufferId);\n      bufferFrom = this.networks.getBuffer(data);\n      if (bufferTo && bufferFrom) {\n        for (const [ key, val ] of bufferFrom.messages) {\n          val.buffer = bufferTo;\n          bufferTo.messages.set(key, val);\n        }\n      }\n      this.networks.deleteBuffer(bufferFrom);\n      this.emit('buffer.merge', bufferTo, bufferFrom);\n      break;\n    default:\n      logger('Unhandled Sync.BufferSyncer %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncBufferViewManager(functionName, [ data ]) {\n    switch (functionName) {\n    case 'addBufferViewConfig':\n      // data is a bufferViewId\n      this.core.sendInitRequest('BufferViewConfig', String(data));\n      break;\n    default:\n      logger('Unhandled Sync.BufferViewManager %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncBufferViewConfig(id, functionName, data) {\n    const bufferView = this.bufferViews.get(id);\n    if (!bufferView) {\n      logger('Uninitialized bufferView %d. Ignoring %s', id, functionName);\n      return;\n    }\n    switch (functionName) {\n    case 'addBuffer':\n      bufferView.addBuffer(...data);\n      bufferView.unhide(data[0]);\n      this.emit('bufferview.bufferunhide', id, data[0]);\n      this.emit('bufferview.orderchanged', id);\n      break;\n    case 'removeBuffer':\n      bufferView.setTemporarilyRemoved(data[0]);\n      this.emit('bufferview.bufferhidden', id, data[0], 'temp');\n      break;\n    case 'removeBufferPermanently':\n      bufferView.setPermanentlyRemoved(data[0]);\n      this.emit('bufferview.bufferhidden', id, data[0], 'perm');\n      break;\n    case 'moveBuffer':\n      bufferView.moveBuffer(...data);\n      this.emit('bufferview.orderchanged', id);\n      break;\n    case 'setNetworkId':\n      [ bufferView.networkId ] = data;\n      this.emit('bufferview.networkid', id, bufferView.networkId);\n      break;\n    case 'setShowSearch':\n      [ bufferView.showSearch ] = data;\n      this.emit('bufferview.search', id, bufferView.showSearch);\n      break;\n    case 'setHideInactiveNetworks':\n      [ bufferView.hideInactiveNetworks ] = data;\n      this.emit('bufferview.hideinactivenetworks', id, bufferView.hideInactiveNetworks);\n      break;\n    case 'setHideInactiveBuffers':\n      [ bufferView.hideInactiveBuffers ] = data;\n      this.emit('bufferview.hideinactivebuffers', id, bufferView.hideInactiveBuffers);\n      break;\n    case 'setAllowedBufferTypes':\n      [ bufferView.allowedBufferTypes ] = data;\n      this.emit('bufferview.allowedbuffertypes', id, bufferView.allowedBufferTypes);\n      break;\n    case 'setAddNewBuffersAutomatically':\n      [ bufferView.addNewBuffersAutomatically ] = data;\n      this.emit('bufferview.addnewbuffersautomatically', id, bufferView.addNewBuffersAutomatically);\n      break;\n    case 'setMinimumActivity':\n      [ bufferView.minimumActivity ] = data;\n      this.emit('bufferview.minimumactivity', id, bufferView.minimumActivity);\n      break;\n    case 'setBufferViewName':\n      [ bufferView.bufferViewName ] = data;\n      this.emit('bufferview.bufferviewname', id, bufferView.bufferViewName);\n      break;\n    case 'setDisableDecoration':\n      [ bufferView.disableDecoration ] = data;\n      this.emit('bufferview.disabledecoration', id, bufferView.disableDecoration);\n      break;\n    case 'update':\n      bufferView.update(data[0]);\n      this.emit('bufferview.update', id, data[0]);\n      break;\n    default:\n      logger('Unhandled Sync.BufferViewConfig %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncIrcUser(networkId, username, functionName, [ data ]) {\n    const network = this.networks.get(networkId);\n    let user, buffer, ids;\n    if (!network) {\n      logger('Uninitialized network %d. Ignoring %s', networkId, functionName);\n      return;\n    }\n    switch (functionName) {\n    case 'partChannel':\n      // data is bufferName\n      buffer = network.buffers.get(data);\n      buffer.removeUser(username);\n      this.emit('user.part', networkId, username, buffer.id);\n      if (buffer.isChannel) {\n        if (network.nick !== null && network.nick.toLowerCase() === username.toLowerCase()) {\n          // We part\n          buffer.active = false;\n          this.emit('buffer.deactivate', buffer.id);\n        }\n      } else if (buffer.name === username) {\n        buffer.active = false;\n        this.emit('buffer.deactivate', buffer.id);\n      }\n      break;\n    case 'quit':\n      ids = network.deleteUser(username);\n      for (let id of ids) {\n        this.emit('buffer.deactivate', id);\n      }\n      this.emit('user.quit', networkId, username);\n      break;\n    case 'setNick':\n      // Already handled by RPC call\n      break;\n    /*case \"setServer\":\n      // TODO\n      break;*/\n    case 'setAway':\n      // data is isAway\n      user = network.getUser(username);\n      if (user) {\n        user.away = data;\n        this.emit('user.away', networkId, username, data);\n      }\n      break;\n    case 'setRealName':\n      // data is realname\n      user = network.getUser(username);\n      if (user) {\n        user.realname = data;\n        this.emit('user.realname', networkId, username, data);\n      }\n      break;\n    default:\n      logger('Unhandled Sync.IrcUser %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncIrcChannel(networkId, buffername, functionName, data) {\n    const network = this.networks.get(networkId);\n    if (!network) {\n      logger('Uninitialized network %d. Ignoring %s', networkId, functionName);\n      return;\n    }\n    const buffer = network.buffers.get(buffername);\n    if (!buffer) {\n      logger('Uninitialized buffer %s. Ignoring %s', buffername, functionName);\n      return;\n    }\n    let user, nick, mode;\n    switch (functionName) {\n    case 'joinIrcUsers':\n      for (let i=0; i < data[0].length; i++) {\n        user = network.getUser(data[0][i]); // nick\n        buffer.addUser(user, data[1][i]); // modes\n        this.emit('channel.join', buffer.id, data[0][i]);\n      }\n      break;\n    case 'addUserMode':\n      [ nick, mode ] = data;\n      user = network.getUser(nick);\n      buffer.addUserMode(user, mode);\n      this.emit('channel.addusermode', buffer.id, nick, mode);\n      break;\n    case 'removeUserMode':\n      [ nick, mode ] = data;\n      user = network.getUser(nick);\n      buffer.removeUserMode(user, mode);\n      this.emit('channel.removeusermode', buffer.id, nick, mode);\n      break;\n    case 'setTopic':\n      [ buffer.topic ] = data;\n      this.emit('channel.topic', buffer.id, buffer.topic);\n      break;\n    default:\n      logger('Unhandled Sync.IrcChannel %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncBacklogManager(functionName, [ bufferId, _first, _last, _maxAmount, _, data ]) {\n    const messageIds = [];\n    let buffer, network, identity, message;\n    switch (functionName) {\n    case 'receiveBacklog':\n      buffer = this.networks.getBuffer(bufferId);\n      network = this.networks.get(buffer.network);\n      identity = this.identities.get(network.identityId);\n      if (buffer) {\n        for (let rawmessage of data) {\n          message = buffer.addMessage(rawmessage);\n          if (!message) {\n            logger('Message %d already exists in buffer %d', rawmessage.id, buffer.id);\n          } else {\n            messageIds.push(message.id);\n            message._updateFlags(network, identity, this.options.highlightmode);\n          }\n        }\n        this.emit('buffer.backlog', bufferId, messageIds);\n      } else {\n        logger('Buffer %d does not exists.', bufferId);\n      }\n      break;\n    default:\n      logger('Unhandled Sync.BacklogManager %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncIgnoreListManager(functionName, [ data ]) {\n    switch (functionName) {\n    case 'update':\n      this.ignoreList.import(data);\n      this.emit('ignorelist', this.ignoreList);\n      break;\n    default:\n      logger('Unhandled Sync.IgnoreListManager %s', functionName);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncIdentity(id, functionName, [ data ]) {\n    const identity = this.identities.get(id);\n    if (identity) {\n      if (functionName.indexOf('set') === 0) {\n        let key = functionName.substring(3);\n        key = key.charAt(0).toLowerCase() + key.slice(1);\n        identity[key] = data;\n        this.emit(`identity.${key.toLowerCase()}`, id, data);\n      } else {\n        logger('Unhandled Sync.Identity %s', functionName);\n      }\n    } else {\n      logger('Unknown Identity %d', id);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleStructSyncAliasManager(functionName, [ data ]) {\n    switch (functionName) {\n    case 'update':\n      this.aliases = alias.toArray(data);\n      this.emit('aliases', this.aliases);\n      break;\n    default:\n      logger('Unhandled Sync.AliasManager %s', functionName);\n    }\n  }\n\n  /**\n   * Setup core\n   * @param {string} backend\n   * @param {string} adminuser\n   * @param {string} adminpassword\n   * @param {Object} [properties={}]\n   */\n  setupCore(backend, adminuser, adminpassword, properties = {}) {\n    this.core.setupCore(backend, adminuser, adminpassword, properties);\n  }\n\n  /**\n   * Login to core\n   */\n  login() {\n    this.loginCallback((user, password) => this.core.login(user, password));\n  }\n\n  /**\n   * Connect to the core\n   * @param {net.Duplex} duplex\n   */\n  connect(duplex) {\n    this.core.init(duplex);\n    this.core.connect();\n  }\n\n  /**\n   * Disconnect the client from the core\n   */\n  disconnect() {\n    clearInterval(this.heartbeatInterval);\n    this.core.disconnect();\n  }\n}\n\n/**\n * This event is fired when quasselcore information are received\n * @typedef {Event} Event:coreinfoinit\n * @property {Object} data\n * @property {boolean} data.Configured - Is the core configured\n * @property {number} data.CoreFeatures\n * @property {String} data.CoreInfo\n * @property {boolean} data.LoginEnabled\n * @property {boolean} data.MsgType - Is always \"ClientInitAck\"\n * @property {number} data.ProtocolVersion\n * @property {Array} [data.StorageBackends]\n * @property {boolean} data.SupportSsl\n * @property {boolean} data.SupportsCompression\n */\n/**\n * This event is fired upon successful login\n * @typedef {Event} Event:login\n */\n/**\n * This event is fired upon unsuccessful login\n * @typedef {Event} Event:loginfailed\n */\n/**\n * This event is fired upon successful session initialization\n * @typedef {Event} Event:init\n * @property {Object} obj\n */\n/**\n * This event is fired when {@link Identity} objects are first initialized\n * @typedef {Event} Event:identities.init\n * @property {Map<number, Identity>} identities\n */\n/**\n * This event is fired when a buffer is added to a network\n * @typedef {Event} Event:network.addbuffer\n * @property {number} networkId\n * @property {number|String} bufferId\n */\n/**\n * Network latency value\n * @typedef {Event} Event:network.latency\n * @property {number} networkId\n * @property {number} value\n */\n/**\n * Network connection state\n * @typedef {Event} Event:network.connectionstate\n * @property {number} networkId\n * @property {number} connectionState\n */\n/**\n * This event is fired when a network state is switched to connected\n * @typedef {Event} Event:network.connected\n * @property {number} networkId\n */\n/**\n * This event is fired when a network state is switched to disconnected\n * @typedef {Event} Event:network.disconnected\n * @property {number} networkId\n */\n/**\n * This event is fired when a user is renamed on a network\n * @typedef {Event} Event:network.userrenamed\n * @property {number} networkId\n * @property {String} oldNick\n * @property {String} nick\n */\n/**\n * This event is fired when current connected user is renamed on a network\n * @typedef {Event} Event:network.mynick\n * @property {number} networkId\n * @property {String} nick\n */\n/**\n * This event is fired when the name of a network changes\n * @typedef {Event} Event:network.networkname\n * @property {number} networkId\n * @property {String} networkName\n */\n/**\n * This event is fired when the server on which a network is connected changes\n * @typedef {Event} Event:network.server\n * @property {number} networkId\n * @property {String} server\n */\n/**\n * This event is fired when a network server list is updated\n * @typedef {Event} Event:network.serverlist\n * @property {number} networkId\n * @property {Object[]} serverlist\n */\n/**\n * Fired when encoding for sent messages has changed\n * @typedef {Event} Event:network.codec.decoding\n * @property {number} networkId\n * @property {String} codec\n */\n/**\n * Fired when encoding for received messages has changed\n * @typedef {Event} Event:network.codec.encoding\n * @property {number} networkId\n * @property {String} codec\n */\n/**\n * Fired when server encoding has changed\n * @typedef {Event} Event:network.codec.server\n * @property {number} networkId\n * @property {String} codec\n */\n/**\n * Fired when the list of commands to perform on connection to a server has changed\n * @typedef {Event} Event:network.perform\n * @property {number} networkId\n * @property {String[]} commands\n */\n/**\n * Fired when the network identity changed\n * @typedef {Event} Event:network.identity\n * @property {number} networkId\n * @property {number} identityId\n */\n/**\n * Fired when interval value for reconnecting to the network changed\n * @typedef {Event} Event:network.autoreconnect.interval\n * @property {number} networkId\n * @property {number} interval\n */\n/**\n * Fired when retries value for reconnecting to the network changed\n * @typedef {Event} Event:network.autoreconnect.retries\n * @property {number} networkId\n * @property {number} retries\n */\n/**\n * Fired when auto identify service changed\n * @typedef {Event} Event:network.autoidentify.service\n * @property {number} networkId\n * @property {String} service\n */\n/**\n * Fired when auto identify service password changed\n * @typedef {Event} Event:network.autoidentify.password\n * @property {number} networkId\n * @property {String} password\n */\n/**\n * Fired when Unlimited reconnect retries value has changed\n * @typedef {Event} Event:network.unlimitedreconnectretries\n * @property {number} networkId\n * @property {boolean} unlimitedreconnectretries\n */\n/**\n * Fired when Use Sasl value has changed\n * @typedef {Event} Event:network.usesasl\n * @property {number} networkId\n * @property {boolean} usesasl\n */\n/**\n * Fired when Sasl account has changed\n * @typedef {Event} Event:network.sasl.account\n * @property {number} networkId\n * @property {String} account\n */\n/**\n * Fired when Sasl account password has changed\n * @typedef {Event} Event:network.sasl.password\n * @property {number} networkId\n * @property {String} password\n */\n/**\n * Fired when Rejoin Channels value has changed\n * @typedef {Event} Event:network.rejoinchannels\n * @property {number} networkId\n * @property {boolean} rejoinchannels\n */\n/**\n * Fired when Use Custom Message Rate value has changed\n * @typedef {Event} Event:network.usecustommessagerate\n * @property {number} networkId\n * @property {boolean} usecustommessagerate\n */\n/**\n * Fired when Unlimited Message Rate Burst Size value has changed\n * @typedef {Event} Event:network.messagerate.unlimited\n * @property {number} networkId\n * @property {boolean} unlimited\n */\n/**\n * Fired when Message Rate Burst Size value has changed\n * @typedef {Event} Event:network.messagerate.burstsize\n * @property {number} networkId\n * @property {number} burstsize\n */\n/**\n * Fired when Message Rate Delay value has changed\n * @typedef {Event} Event:network.messagerate.delay\n * @property {number} networkId\n * @property {number} delay\n */\n/**\n * Buffer has been marked as read\n * @typedef {Event} Event:buffer.read\n * @property {number} bufferId\n */\n/**\n * Buffer's last seen message updated\n * @typedef {Event} Event:buffer.lastseen\n * @property {number} bufferId\n * @property {number} messageId\n */\n/**\n * Buffer's markeline attached to a message\n * @typedef {Event} Event:buffer.markerline\n * @property {number} bufferId\n * @property {number} messageId\n */\n/**\n * Buffer has been removed\n * @typedef {Event} Event:buffer.remove\n * @property {number} bufferId\n */\n/**\n * Buffer has been renamed\n * @typedef {Event} Event:buffer.rename\n * @property {number} bufferId\n */\n/**\n * bufferId2 has been merged into bufferId1\n * @typedef {Event} Event:buffer.merge\n * @property {number} bufferId1\n * @property {number} bufferId2\n */\n/**\n * Buffer's hidden state removed\n * @typedef {Event} Event:bufferview.bufferunhide\n * @property {number} bufferViewId\n * @property {number} bufferId\n */\n/**\n * Buffer's hidden state set\n * @typedef {Event} Event:bufferview.bufferhidden\n * @property {number} bufferViewId\n * @property {number} bufferId\n * @property {String} type Either \"temp\" or \"perm\"\n */\n/**\n * Buffer set as inactive\n * @typedef {Event} Event:buffer.deactivate\n * @property {number} bufferId\n */\n/**\n * User has left a channel\n * @typedef {Event} Event:user.part\n * @property {number} networkId\n * @property {String} nick\n * @property {number} bufferId\n */\n/**\n * User has left a network\n * @typedef {Event} Event:user.quit\n * @property {number} networkId\n * @property {String} nick\n */\n/**\n * User away state changed\n * @typedef {Event} Event:user.away\n * @property {number} networkId\n * @property {String} nick\n * @property {boolean} isAway\n */\n/**\n * User realname changed\n * @typedef {Event} Event:user.realname\n * @property {number} networkId\n * @property {String} nick\n * @property {String} realname\n */\n/**\n * User joined a channel\n * @typedef {Event} Event:channel.join\n * @property {number} bufferId\n * @property {String} nick\n */\n/**\n * User mode has been added\n * @typedef {Event} Event:channel.addusermode\n * @property {number} bufferId\n * @property {String} nick\n * @property {String} mode\n */\n/**\n * User mode has been removed\n * @typedef {Event} Event:channel.removeusermode\n * @property {number} bufferId\n * @property {String} nick\n * @property {String} mode\n */\n/**\n * Channel topic changed\n * @typedef {Event} Event:channel.topic\n * @property {number} bufferId\n * @property {String} topic\n */\n/**\n * Core information\n * @typedef {Event} Event:coreinfo\n * @property {Object} data\n */\n/**\n * {@link IRCBuffer} activated\n * @typedef {Event} Event:buffer.activate\n * @property {number} bufferId\n */\n/**\n * Backlogs received\n * @typedef {Event} Event:buffer.backlog\n * @property {number} bufferId\n * @property {number[]} messageIds\n */\n/**\n * {@link IRCMessage} received on a buffer\n * @typedef {Event} Event:buffer.message\n * @property {number} bufferId\n * @property {number} messageId\n */\n/**\n * Buffers order changed\n * @typedef {Event} Event:bufferview.orderchanged\n * @property {number} bufferViewId\n */\n/**\n * {@link BufferView} manager init request received\n * @typedef {Event} Event:bufferview.ids\n * @property {number[]} ids\n */\n/**\n * {@link BufferView} initialized\n * @typedef {Event} Event:bufferview.init\n * @property {number} bufferViewId\n */\n/**\n * {@link BufferView} networkId updated\n * @typedef {Event} Event:bufferview.networkid\n * @property {number} bufferViewId\n * @property {number} networkId\n */\n/**\n * {@link BufferView} search updated\n * @typedef {Event} Event:bufferview.search\n * @property {number} bufferViewId\n * @property {boolean} search\n */\n/**\n * {@link BufferView} hideInactiveNetworks updated\n * @typedef {Event} Event:bufferview.hideinactivenetworks\n * @property {number} bufferViewId\n * @property {boolean} hideinactivenetworks\n */\n/**\n * {@link BufferView} hideInactiveBuffers updated\n * @typedef {Event} Event:bufferview.hideinactivebuffers\n * @property {number} bufferViewId\n * @property {boolean} hideinactivebuffers\n */\n/**\n * {@link BufferView} allowedBufferTypes updated\n * @typedef {Event} Event:bufferview.allowedbuffertypes\n * @property {number} bufferViewId\n * @property {number} allowedbuffertypes\n */\n/**\n * {@link BufferView} addNewBuffersAutomatically updated\n * @typedef {Event} Event:bufferview.addnewbuffersautomatically\n * @property {number} bufferViewId\n * @property {boolean} addnewbuffersautomatically\n */\n/**\n * {@link BufferView} minimumActivity updated\n * @typedef {Event} Event:bufferview.minimumactivity\n * @property {number} bufferViewId\n * @property {boolean} minimumactivity\n */\n/**\n * {@link BufferView} bufferViewName updated\n * @typedef {Event} Event:bufferview.bufferviewname\n * @property {number} bufferViewId\n * @property {String} bufferviewname\n */\n/**\n * {@link BufferView} disableDecoration updated\n * @typedef {Event} Event:bufferview.disabledecoration\n * @property {number} bufferViewId\n * @property {boolean} disabledecoration\n */\n/**\n * {@link BufferView} object updated\n * @typedef {Event} Event:bufferview.update\n * @property {number} bufferViewId\n * @property {object} data\n */\n/**\n * {@link IgnoreList} updated\n * @typedef {Event} Event:ignorelist\n */\n/**\n * {@link Identity} updated\n * @typedef {Event} Event:identity\n */\n/**\n * New {@link Identity} created\n * @typedef {Event} Event:identity.new\n * @property {number} identityId\n */\n/**\n * {@link Identity} removed\n * @typedef {Event} Event:identity.remove\n * @property {number} identityId\n */\n/**\n * User connected to the {@link Network}\n * @typedef {Event} Event:network.adduser\n * @property {number} networkId\n * @property {String} nick\n */\n/**\n * New {@link Network} created\n * @typedef {Event} Event:network.new\n * @property {number} networkId\n */\n/**\n * {@link Network} removed\n * @typedef {Event} Event:network.remove\n * @property {number} networkId\n */\n/**\n * {@link Network} is ready\n * @typedef {Event} Event:network.init\n * @property {number} networkId\n */\n/**\n * Aliases updated\n * @typedef {Event} Event:aliases\n */\n/**\n * This event is fired when the core needs to be setup\n * @typedef {Event} Event:setup\n * @property {Object[]} backends - List of available storage backends\n * @property {String} backends[].DisplayName - Storage backends name\n * @property {String} backends[].Description - Storage backends description\n * @property {String[]} backends[].SetupKeys - Keys that will need a corresponding value to configure chosen storage backend\n * @property {Object} backends[].SetupDefaults - Defaults values for corresponding SetupKeys\n */\n/**\n * This event is fired if the setup of the core was successful\n * @typedef {Event} Event:setupok\n */\n/**\n * This event is fired if the setup of the core has failed\n * @typedef {Event} Event:setupfailed\n * @property {Object} error - The reason of the failure\n */\n/**\n * An error occured\n * @typedef {Event} Event:error\n * @property {Object} error\n */\n\nfunction splitOnce(str, character) {\n  const i = str.indexOf(character);\n  return [ str.slice(0, i), str.slice(i+1) ];\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/libquassel.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 252,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/libquassel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 253,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~logger",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/libquassel.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 254,
    "kind": "variable",
    "name": "Features",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Features",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/libquassel.js",
    "importStyle": "{Features}",
    "description": "",
    "lineNumber": 35,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.SYNCHRONIZEDMARKERLINE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.SASLAUTHENTICATION",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.SASLEXTERNAL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.HIDEINACTIVENETWORKS",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.PASSWORDCHANGE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.CAPNEGOTIATION",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.VERIFYSERVERSSL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.CUSTOMRATELIMITS",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Features.NUMFEATURES",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 255,
    "kind": "typedef",
    "name": "loginCallback",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~loginCallback",
    "access": "public",
    "description": "",
    "type": {
      "types": [
        "function(user: string, password: string)"
      ],
      "optional": false,
      "name": "loginCallback"
    }
  },
  {
    "__docId__": 256,
    "kind": "class",
    "name": "Client",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Client",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/libquassel.js",
    "importStyle": "{Client}",
    "description": "Main class to interact with Quassel instance",
    "examples": [
      "import { Client } from 'libquassel';\nconst net = require('net');\n\nconst quassel = new Client(function(next) {\n  next(\"user\", \"password\");\n});\nconst socket = net.createConnection({\n  host: \"localhost\",\n  port: 4242\n});\n\nquassel.connect(socket);"
    ],
    "lineNumber": 67,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 257,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#constructor",
    "access": "public",
    "description": "",
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(next: loginCallback)"
        ],
        "spread": false,
        "optional": false,
        "name": "loginCallback",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "Allows optionnal parameters"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "options.backloglimit",
        "defaultRaw": "options.backloglimit",
        "name": "options.initialbackloglimit",
        "description": "number of backlogs to request per buffer at connection"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "100",
        "defaultRaw": 100,
        "name": "options.backloglimit",
        "description": "number of backlogs to request per buffer after connection"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.securecore",
        "description": "Use SSL to connect to the core (if the core allows it)"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0x02",
        "defaultRaw": "0x02",
        "name": "options.highlightmode",
        "description": "Choose how highlights on nicks works. Defaults to only highlight a message if current nick is present."
      }
    ]
  },
  {
    "__docId__": 258,
    "kind": "member",
    "name": "options",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#options",
    "access": "public",
    "description": null,
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 259,
    "kind": "member",
    "name": "core",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#core",
    "access": "public",
    "description": null,
    "lineNumber": 85,
    "type": {
      "nullable": null,
      "types": [
        "Core"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 260,
    "kind": "member",
    "name": "networks",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#networks",
    "access": "public",
    "description": null,
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "NetworkCollection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 261,
    "kind": "member",
    "name": "identities",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#identities",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "type": {
      "nullable": null,
      "types": [
        "Map<number, Identity>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 262,
    "kind": "member",
    "name": "ignoreList",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#ignoreList",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "type": {
      "nullable": null,
      "types": [
        "IgnoreList"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 263,
    "kind": "member",
    "name": "aliases",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#aliases",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "type": {
      "nullable": null,
      "types": [
        "AliasItem[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 264,
    "kind": "member",
    "name": "bufferViews",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#bufferViews",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "Map<number, BufferView>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 265,
    "kind": "member",
    "name": "heartbeatInterval",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#heartbeatInterval",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "type": {
      "nullable": true,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 266,
    "kind": "member",
    "name": "useCompression",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#useCompression",
    "access": "public",
    "description": null,
    "lineNumber": 99,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 267,
    "kind": "member",
    "name": "connected",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#connected",
    "access": "public",
    "description": null,
    "lineNumber": 101,
    "type": {
      "nullable": true,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 268,
    "kind": "member",
    "name": "coreInfo",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#coreInfo",
    "access": "public",
    "description": null,
    "lineNumber": 103,
    "type": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 269,
    "kind": "member",
    "name": "coreData",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#coreData",
    "access": "public",
    "description": null,
    "lineNumber": 105,
    "type": {
      "nullable": true,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 270,
    "kind": "member",
    "name": "loginCallback",
    "memberof": "src/libquassel.js~Client",
    "static": false,
    "longname": "src/libquassel.js~Client#loginCallback",
    "access": "public",
    "description": null,
    "lineNumber": 107,
    "type": {
      "nullable": null,
      "types": [
        "function(next: loginCallback)"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 271,
    "kind": "method",
    "name": "handleMsgType",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleMsgType",
    "access": "protected",
    "description": "Handles quasselcore messages that possesses a `MsgType` attribute",
    "lineNumber": 130,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "emits": [
      {
        "types": [
          "Event:coreinfoinit"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:login"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:loginfailed"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.addbuffer"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:init"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:setup"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:setupok"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:setupfailed"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:identities.init"
        ],
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 272,
    "kind": "method",
    "name": "handleClientInitAck",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleClientInitAck",
    "access": "protected",
    "description": "",
    "lineNumber": 162,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 274,
    "kind": "method",
    "name": "handleSessionInit",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleSessionInit",
    "access": "protected",
    "description": "",
    "lineNumber": 177,
    "params": [
      {
        "name": "obj",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 276,
    "kind": "method",
    "name": "supports",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#supports",
    "access": "public",
    "description": "Returns `true` if the core supports the given feature",
    "examples": [
      "quassel.supports(Features.PASSWORDCHANGE);"
    ],
    "lineNumber": 217,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "feature",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 277,
    "kind": "method",
    "name": "dispatch",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#dispatch",
    "access": "protected",
    "description": "Dispatch quasselcore messages",
    "lineNumber": 226,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 278,
    "kind": "method",
    "name": "handleInitDataNetwork",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleInitDataNetwork",
    "access": "protected",
    "description": "",
    "lineNumber": 241,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 279,
    "kind": "method",
    "name": "handleStruct",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStruct",
    "access": "protected",
    "description": "Handles most of the quasselcore messages",
    "lineNumber": 324,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "quasselcore message decoded by qtdatasteam"
      }
    ],
    "emits": [
      {
        "types": [
          "Event:coreinfo"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.init"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.latency"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.connectionstate"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.addbuffer"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.connected"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.disconnected"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.userrenamed"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.mynick"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.networkname"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.server"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.serverlist"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.adduser"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.new"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.remove"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.codec.decoding"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.codec.encoding"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.codec.server"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.perform"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.identity"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.autoreconnect.interval"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.autoreconnect.retries"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.autoidentify.service"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.autoidentify.password"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.unlimitedreconnectretries"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.usesasl"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.sasl.account"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.sasl.password"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.rejoinchannels"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.usecustommessagerate"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.messagerate.unlimited"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.messagerate.delay"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:network.messagerate.burstsize"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.read"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.lastseen"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.markerline"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.remove"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.rename"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.merge"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.deactivate"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.activate"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.backlog"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:buffer.message"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.ids"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.bufferunhide"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.bufferhidden"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.orderchanged"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.init"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.networkid"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.search"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.hideinactivenetworks"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.hideinactivebuffers"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.allowedbuffertypes"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.addnewbuffersautomatically"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.minimumactivity"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.bufferviewname"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.disabledecoration"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:bufferview.update"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:user.part"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:user.quit"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:user.away"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:user.realname"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:channel.join"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:channel.addusermode"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:channel.removeusermode"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:channel.topic"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:ignorelist"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:identity"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:identity.new"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:identity.remove"
        ],
        "description": ""
      },
      {
        "types": [
          "Event:aliases"
        ],
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 280,
    "kind": "method",
    "name": "handleStructSync",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSync",
    "access": "protected",
    "description": "",
    "lineNumber": 355,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 281,
    "kind": "method",
    "name": "handleStructRpcCall",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructRpcCall",
    "access": "protected",
    "description": "",
    "lineNumber": 388,
    "params": [
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 282,
    "kind": "method",
    "name": "handleStructRpcCallDisplayMsg",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructRpcCallDisplayMsg",
    "access": "protected",
    "description": "",
    "lineNumber": 429,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 283,
    "kind": "method",
    "name": "handleStructRpcCall__objectRenamed__",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructRpcCall__objectRenamed__",
    "access": "protected",
    "description": "",
    "lineNumber": 464,
    "params": [
      {
        "name": "arrayPattern",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null",
          "null"
        ],
        "defaultValue": "[null, null, null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 284,
    "kind": "method",
    "name": "handleStructInitData",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructInitData",
    "access": "protected",
    "description": "",
    "lineNumber": 483,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern2",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 287,
    "kind": "method",
    "name": "handleStructInitDataBufferSyncer",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructInitDataBufferSyncer",
    "access": "protected",
    "description": "",
    "lineNumber": 529,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 288,
    "kind": "method",
    "name": "handleStructInitDataIrcChannel",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructInitDataIrcChannel",
    "access": "protected",
    "description": "",
    "lineNumber": 558,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 289,
    "kind": "method",
    "name": "handleStructInitDataIrcUser",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructInitDataIrcUser",
    "access": "protected",
    "description": "",
    "lineNumber": 571,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 290,
    "kind": "method",
    "name": "handleStructInitDataBufferViewConfig",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructInitDataBufferViewConfig",
    "access": "protected",
    "description": "",
    "lineNumber": 584,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 291,
    "kind": "method",
    "name": "handleStructSyncNetwork",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncNetwork",
    "access": "protected",
    "description": "",
    "lineNumber": 600,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern2",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 292,
    "kind": "method",
    "name": "handleStructSyncBufferSyncer",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncBufferSyncer",
    "access": "protected",
    "description": "",
    "lineNumber": 734,
    "params": [
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null"
        ],
        "defaultValue": "[null, null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 293,
    "kind": "method",
    "name": "handleStructSyncBufferViewManager",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncBufferViewManager",
    "access": "protected",
    "description": "",
    "lineNumber": 777,
    "params": [
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 294,
    "kind": "method",
    "name": "handleStructSyncBufferViewConfig",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncBufferViewConfig",
    "access": "protected",
    "description": "",
    "lineNumber": 791,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 295,
    "kind": "method",
    "name": "handleStructSyncIrcUser",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncIrcUser",
    "access": "protected",
    "description": "",
    "lineNumber": 864,
    "params": [
      {
        "name": "networkId",
        "types": [
          "*"
        ]
      },
      {
        "name": "username",
        "types": [
          "*"
        ]
      },
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern3",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 296,
    "kind": "method",
    "name": "handleStructSyncIrcChannel",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncIrcChannel",
    "access": "protected",
    "description": "",
    "lineNumber": 925,
    "params": [
      {
        "name": "networkId",
        "types": [
          "*"
        ]
      },
      {
        "name": "buffername",
        "types": [
          "*"
        ]
      },
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 297,
    "kind": "method",
    "name": "handleStructSyncBacklogManager",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncBacklogManager",
    "access": "protected",
    "description": "",
    "lineNumber": 969,
    "params": [
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null",
          "null",
          "null",
          "null",
          "null",
          "null"
        ],
        "defaultValue": "[null, null, null, null, null, null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 298,
    "kind": "method",
    "name": "handleStructSyncIgnoreListManager",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncIgnoreListManager",
    "access": "protected",
    "description": "",
    "lineNumber": 1000,
    "params": [
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 299,
    "kind": "method",
    "name": "handleStructSyncIdentity",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncIdentity",
    "access": "protected",
    "description": "",
    "lineNumber": 1014,
    "params": [
      {
        "name": "id",
        "types": [
          "*"
        ]
      },
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern2",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 300,
    "kind": "method",
    "name": "handleStructSyncAliasManager",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#handleStructSyncAliasManager",
    "access": "protected",
    "description": "",
    "lineNumber": 1033,
    "params": [
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "arrayPattern1",
        "types": [
          "*[]"
        ],
        "defaultRaw": [
          "null"
        ],
        "defaultValue": "[null]"
      }
    ],
    "return": null
  },
  {
    "__docId__": 302,
    "kind": "method",
    "name": "setupCore",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#setupCore",
    "access": "public",
    "description": "Setup core",
    "lineNumber": 1051,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "backend",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "adminuser",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "adminpassword",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "properties",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 303,
    "kind": "method",
    "name": "login",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#login",
    "access": "public",
    "description": "Login to core",
    "lineNumber": 1058,
    "params": [],
    "return": null
  },
  {
    "__docId__": 304,
    "kind": "method",
    "name": "connect",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#connect",
    "access": "public",
    "description": "Connect to the core",
    "lineNumber": 1066,
    "params": [
      {
        "nullable": null,
        "types": [
          "net.Duplex"
        ],
        "spread": false,
        "optional": false,
        "name": "duplex",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 305,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/libquassel.js~Client",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/libquassel.js~Client#disconnect",
    "access": "public",
    "description": "Disconnect the client from the core",
    "lineNumber": 1074,
    "params": [],
    "return": null
  },
  {
    "__docId__": 306,
    "kind": "typedef",
    "name": "Event:coreinfoinit",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:coreinfoinit",
    "access": "public",
    "description": "This event is fired when quasselcore information are received",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "data.Configured",
        "description": "Is the core configured"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "data.CoreFeatures",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "data.CoreInfo",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "data.LoginEnabled",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "data.MsgType",
        "description": "Is always \"ClientInitAck\""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "data.ProtocolVersion",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Array"
        ],
        "spread": false,
        "optional": true,
        "name": "data.StorageBackends",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "data.SupportSsl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "data.SupportsCompression",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:coreinfoinit"
    }
  },
  {
    "__docId__": 307,
    "kind": "typedef",
    "name": "Event:login",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:login",
    "access": "public",
    "description": "This event is fired upon successful login",
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:login"
    }
  },
  {
    "__docId__": 308,
    "kind": "typedef",
    "name": "Event:loginfailed",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:loginfailed",
    "access": "public",
    "description": "This event is fired upon unsuccessful login",
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:loginfailed"
    }
  },
  {
    "__docId__": 309,
    "kind": "typedef",
    "name": "Event:init",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:init",
    "access": "public",
    "description": "This event is fired upon successful session initialization",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:init"
    }
  },
  {
    "__docId__": 310,
    "kind": "typedef",
    "name": "Event:identities.init",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:identities.init",
    "access": "public",
    "description": "This event is fired when {@link Identity} objects are first initialized",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Map<number, Identity>"
        ],
        "spread": false,
        "optional": false,
        "name": "identities",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:identities.init"
    }
  },
  {
    "__docId__": 311,
    "kind": "typedef",
    "name": "Event:network.addbuffer",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.addbuffer",
    "access": "public",
    "description": "This event is fired when a buffer is added to a network",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number",
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.addbuffer"
    }
  },
  {
    "__docId__": 312,
    "kind": "typedef",
    "name": "Event:network.latency",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.latency",
    "access": "public",
    "description": "Network latency value",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.latency"
    }
  },
  {
    "__docId__": 313,
    "kind": "typedef",
    "name": "Event:network.connectionstate",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.connectionstate",
    "access": "public",
    "description": "Network connection state",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "connectionState",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.connectionstate"
    }
  },
  {
    "__docId__": 314,
    "kind": "typedef",
    "name": "Event:network.connected",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.connected",
    "access": "public",
    "description": "This event is fired when a network state is switched to connected",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.connected"
    }
  },
  {
    "__docId__": 315,
    "kind": "typedef",
    "name": "Event:network.disconnected",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.disconnected",
    "access": "public",
    "description": "This event is fired when a network state is switched to disconnected",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.disconnected"
    }
  },
  {
    "__docId__": 316,
    "kind": "typedef",
    "name": "Event:network.userrenamed",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.userrenamed",
    "access": "public",
    "description": "This event is fired when a user is renamed on a network",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "oldNick",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.userrenamed"
    }
  },
  {
    "__docId__": 317,
    "kind": "typedef",
    "name": "Event:network.mynick",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.mynick",
    "access": "public",
    "description": "This event is fired when current connected user is renamed on a network",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.mynick"
    }
  },
  {
    "__docId__": 318,
    "kind": "typedef",
    "name": "Event:network.networkname",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.networkname",
    "access": "public",
    "description": "This event is fired when the name of a network changes",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "networkName",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.networkname"
    }
  },
  {
    "__docId__": 319,
    "kind": "typedef",
    "name": "Event:network.server",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.server",
    "access": "public",
    "description": "This event is fired when the server on which a network is connected changes",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "server",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.server"
    }
  },
  {
    "__docId__": 320,
    "kind": "typedef",
    "name": "Event:network.serverlist",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.serverlist",
    "access": "public",
    "description": "This event is fired when a network server list is updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "serverlist",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.serverlist"
    }
  },
  {
    "__docId__": 321,
    "kind": "typedef",
    "name": "Event:network.codec.decoding",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.codec.decoding",
    "access": "public",
    "description": "Fired when encoding for sent messages has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "codec",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.codec.decoding"
    }
  },
  {
    "__docId__": 322,
    "kind": "typedef",
    "name": "Event:network.codec.encoding",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.codec.encoding",
    "access": "public",
    "description": "Fired when encoding for received messages has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "codec",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.codec.encoding"
    }
  },
  {
    "__docId__": 323,
    "kind": "typedef",
    "name": "Event:network.codec.server",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.codec.server",
    "access": "public",
    "description": "Fired when server encoding has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "codec",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.codec.server"
    }
  },
  {
    "__docId__": 324,
    "kind": "typedef",
    "name": "Event:network.perform",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.perform",
    "access": "public",
    "description": "Fired when the list of commands to perform on connection to a server has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "commands",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.perform"
    }
  },
  {
    "__docId__": 325,
    "kind": "typedef",
    "name": "Event:network.identity",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.identity",
    "access": "public",
    "description": "Fired when the network identity changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "identityId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.identity"
    }
  },
  {
    "__docId__": 326,
    "kind": "typedef",
    "name": "Event:network.autoreconnect.interval",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.autoreconnect.interval",
    "access": "public",
    "description": "Fired when interval value for reconnecting to the network changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "interval",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.autoreconnect.interval"
    }
  },
  {
    "__docId__": 327,
    "kind": "typedef",
    "name": "Event:network.autoreconnect.retries",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.autoreconnect.retries",
    "access": "public",
    "description": "Fired when retries value for reconnecting to the network changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "retries",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.autoreconnect.retries"
    }
  },
  {
    "__docId__": 328,
    "kind": "typedef",
    "name": "Event:network.autoidentify.service",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.autoidentify.service",
    "access": "public",
    "description": "Fired when auto identify service changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "service",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.autoidentify.service"
    }
  },
  {
    "__docId__": 329,
    "kind": "typedef",
    "name": "Event:network.autoidentify.password",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.autoidentify.password",
    "access": "public",
    "description": "Fired when auto identify service password changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.autoidentify.password"
    }
  },
  {
    "__docId__": 330,
    "kind": "typedef",
    "name": "Event:network.unlimitedreconnectretries",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.unlimitedreconnectretries",
    "access": "public",
    "description": "Fired when Unlimited reconnect retries value has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "unlimitedreconnectretries",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.unlimitedreconnectretries"
    }
  },
  {
    "__docId__": 331,
    "kind": "typedef",
    "name": "Event:network.usesasl",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.usesasl",
    "access": "public",
    "description": "Fired when Use Sasl value has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "usesasl",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.usesasl"
    }
  },
  {
    "__docId__": 332,
    "kind": "typedef",
    "name": "Event:network.sasl.account",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.sasl.account",
    "access": "public",
    "description": "Fired when Sasl account has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "account",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.sasl.account"
    }
  },
  {
    "__docId__": 333,
    "kind": "typedef",
    "name": "Event:network.sasl.password",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.sasl.password",
    "access": "public",
    "description": "Fired when Sasl account password has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.sasl.password"
    }
  },
  {
    "__docId__": 334,
    "kind": "typedef",
    "name": "Event:network.rejoinchannels",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.rejoinchannels",
    "access": "public",
    "description": "Fired when Rejoin Channels value has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "rejoinchannels",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.rejoinchannels"
    }
  },
  {
    "__docId__": 335,
    "kind": "typedef",
    "name": "Event:network.usecustommessagerate",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.usecustommessagerate",
    "access": "public",
    "description": "Fired when Use Custom Message Rate value has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "usecustommessagerate",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.usecustommessagerate"
    }
  },
  {
    "__docId__": 336,
    "kind": "typedef",
    "name": "Event:network.messagerate.unlimited",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.messagerate.unlimited",
    "access": "public",
    "description": "Fired when Unlimited Message Rate Burst Size value has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "unlimited",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.messagerate.unlimited"
    }
  },
  {
    "__docId__": 337,
    "kind": "typedef",
    "name": "Event:network.messagerate.burstsize",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.messagerate.burstsize",
    "access": "public",
    "description": "Fired when Message Rate Burst Size value has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "burstsize",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.messagerate.burstsize"
    }
  },
  {
    "__docId__": 338,
    "kind": "typedef",
    "name": "Event:network.messagerate.delay",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.messagerate.delay",
    "access": "public",
    "description": "Fired when Message Rate Delay value has changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "delay",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.messagerate.delay"
    }
  },
  {
    "__docId__": 339,
    "kind": "typedef",
    "name": "Event:buffer.read",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.read",
    "access": "public",
    "description": "Buffer has been marked as read",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.read"
    }
  },
  {
    "__docId__": 340,
    "kind": "typedef",
    "name": "Event:buffer.lastseen",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.lastseen",
    "access": "public",
    "description": "Buffer's last seen message updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.lastseen"
    }
  },
  {
    "__docId__": 341,
    "kind": "typedef",
    "name": "Event:buffer.markerline",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.markerline",
    "access": "public",
    "description": "Buffer's markeline attached to a message",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.markerline"
    }
  },
  {
    "__docId__": 342,
    "kind": "typedef",
    "name": "Event:buffer.remove",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.remove",
    "access": "public",
    "description": "Buffer has been removed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.remove"
    }
  },
  {
    "__docId__": 343,
    "kind": "typedef",
    "name": "Event:buffer.rename",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.rename",
    "access": "public",
    "description": "Buffer has been renamed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.rename"
    }
  },
  {
    "__docId__": 344,
    "kind": "typedef",
    "name": "Event:buffer.merge",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.merge",
    "access": "public",
    "description": "bufferId2 has been merged into bufferId1",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId2",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.merge"
    }
  },
  {
    "__docId__": 345,
    "kind": "typedef",
    "name": "Event:bufferview.bufferunhide",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.bufferunhide",
    "access": "public",
    "description": "Buffer's hidden state removed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.bufferunhide"
    }
  },
  {
    "__docId__": 346,
    "kind": "typedef",
    "name": "Event:bufferview.bufferhidden",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.bufferhidden",
    "access": "public",
    "description": "Buffer's hidden state set",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Either \"temp\" or \"perm\""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.bufferhidden"
    }
  },
  {
    "__docId__": 347,
    "kind": "typedef",
    "name": "Event:buffer.deactivate",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.deactivate",
    "access": "public",
    "description": "Buffer set as inactive",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.deactivate"
    }
  },
  {
    "__docId__": 348,
    "kind": "typedef",
    "name": "Event:user.part",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:user.part",
    "access": "public",
    "description": "User has left a channel",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:user.part"
    }
  },
  {
    "__docId__": 349,
    "kind": "typedef",
    "name": "Event:user.quit",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:user.quit",
    "access": "public",
    "description": "User has left a network",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:user.quit"
    }
  },
  {
    "__docId__": 350,
    "kind": "typedef",
    "name": "Event:user.away",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:user.away",
    "access": "public",
    "description": "User away state changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isAway",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:user.away"
    }
  },
  {
    "__docId__": 351,
    "kind": "typedef",
    "name": "Event:user.realname",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:user.realname",
    "access": "public",
    "description": "User realname changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "realname",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:user.realname"
    }
  },
  {
    "__docId__": 352,
    "kind": "typedef",
    "name": "Event:channel.join",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:channel.join",
    "access": "public",
    "description": "User joined a channel",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:channel.join"
    }
  },
  {
    "__docId__": 353,
    "kind": "typedef",
    "name": "Event:channel.addusermode",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:channel.addusermode",
    "access": "public",
    "description": "User mode has been added",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:channel.addusermode"
    }
  },
  {
    "__docId__": 354,
    "kind": "typedef",
    "name": "Event:channel.removeusermode",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:channel.removeusermode",
    "access": "public",
    "description": "User mode has been removed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:channel.removeusermode"
    }
  },
  {
    "__docId__": 355,
    "kind": "typedef",
    "name": "Event:channel.topic",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:channel.topic",
    "access": "public",
    "description": "Channel topic changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "topic",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:channel.topic"
    }
  },
  {
    "__docId__": 356,
    "kind": "typedef",
    "name": "Event:coreinfo",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:coreinfo",
    "access": "public",
    "description": "Core information",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:coreinfo"
    }
  },
  {
    "__docId__": 357,
    "kind": "typedef",
    "name": "Event:buffer.activate",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.activate",
    "access": "public",
    "description": "{@link IRCBuffer} activated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.activate"
    }
  },
  {
    "__docId__": 358,
    "kind": "typedef",
    "name": "Event:buffer.backlog",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.backlog",
    "access": "public",
    "description": "Backlogs received",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "messageIds",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.backlog"
    }
  },
  {
    "__docId__": 359,
    "kind": "typedef",
    "name": "Event:buffer.message",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:buffer.message",
    "access": "public",
    "description": "{@link IRCMessage} received on a buffer",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:buffer.message"
    }
  },
  {
    "__docId__": 360,
    "kind": "typedef",
    "name": "Event:bufferview.orderchanged",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.orderchanged",
    "access": "public",
    "description": "Buffers order changed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.orderchanged"
    }
  },
  {
    "__docId__": 361,
    "kind": "typedef",
    "name": "Event:bufferview.ids",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.ids",
    "access": "public",
    "description": "{@link BufferView} manager init request received",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number[]"
        ],
        "spread": false,
        "optional": false,
        "name": "ids",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.ids"
    }
  },
  {
    "__docId__": 362,
    "kind": "typedef",
    "name": "Event:bufferview.init",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.init",
    "access": "public",
    "description": "{@link BufferView} initialized",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.init"
    }
  },
  {
    "__docId__": 363,
    "kind": "typedef",
    "name": "Event:bufferview.networkid",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.networkid",
    "access": "public",
    "description": "{@link BufferView} networkId updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.networkid"
    }
  },
  {
    "__docId__": 364,
    "kind": "typedef",
    "name": "Event:bufferview.search",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.search",
    "access": "public",
    "description": "{@link BufferView} search updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "search",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.search"
    }
  },
  {
    "__docId__": 365,
    "kind": "typedef",
    "name": "Event:bufferview.hideinactivenetworks",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.hideinactivenetworks",
    "access": "public",
    "description": "{@link BufferView} hideInactiveNetworks updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hideinactivenetworks",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.hideinactivenetworks"
    }
  },
  {
    "__docId__": 366,
    "kind": "typedef",
    "name": "Event:bufferview.hideinactivebuffers",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.hideinactivebuffers",
    "access": "public",
    "description": "{@link BufferView} hideInactiveBuffers updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "hideinactivebuffers",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.hideinactivebuffers"
    }
  },
  {
    "__docId__": 367,
    "kind": "typedef",
    "name": "Event:bufferview.allowedbuffertypes",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.allowedbuffertypes",
    "access": "public",
    "description": "{@link BufferView} allowedBufferTypes updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "allowedbuffertypes",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.allowedbuffertypes"
    }
  },
  {
    "__docId__": 368,
    "kind": "typedef",
    "name": "Event:bufferview.addnewbuffersautomatically",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.addnewbuffersautomatically",
    "access": "public",
    "description": "{@link BufferView} addNewBuffersAutomatically updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "addnewbuffersautomatically",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.addnewbuffersautomatically"
    }
  },
  {
    "__docId__": 369,
    "kind": "typedef",
    "name": "Event:bufferview.minimumactivity",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.minimumactivity",
    "access": "public",
    "description": "{@link BufferView} minimumActivity updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "minimumactivity",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.minimumactivity"
    }
  },
  {
    "__docId__": 370,
    "kind": "typedef",
    "name": "Event:bufferview.bufferviewname",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.bufferviewname",
    "access": "public",
    "description": "{@link BufferView} bufferViewName updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferviewname",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.bufferviewname"
    }
  },
  {
    "__docId__": 371,
    "kind": "typedef",
    "name": "Event:bufferview.disabledecoration",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.disabledecoration",
    "access": "public",
    "description": "{@link BufferView} disableDecoration updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "disabledecoration",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.disabledecoration"
    }
  },
  {
    "__docId__": 372,
    "kind": "typedef",
    "name": "Event:bufferview.update",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:bufferview.update",
    "access": "public",
    "description": "{@link BufferView} object updated",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:bufferview.update"
    }
  },
  {
    "__docId__": 373,
    "kind": "typedef",
    "name": "Event:ignorelist",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:ignorelist",
    "access": "public",
    "description": "{@link IgnoreList} updated",
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:ignorelist"
    }
  },
  {
    "__docId__": 374,
    "kind": "typedef",
    "name": "Event:identity",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:identity",
    "access": "public",
    "description": "{@link Identity} updated",
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:identity"
    }
  },
  {
    "__docId__": 375,
    "kind": "typedef",
    "name": "Event:identity.new",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:identity.new",
    "access": "public",
    "description": "New {@link Identity} created",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "identityId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:identity.new"
    }
  },
  {
    "__docId__": 376,
    "kind": "typedef",
    "name": "Event:identity.remove",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:identity.remove",
    "access": "public",
    "description": "{@link Identity} removed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "identityId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:identity.remove"
    }
  },
  {
    "__docId__": 377,
    "kind": "typedef",
    "name": "Event:network.adduser",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.adduser",
    "access": "public",
    "description": "User connected to the {@link Network}",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.adduser"
    }
  },
  {
    "__docId__": 378,
    "kind": "typedef",
    "name": "Event:network.new",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.new",
    "access": "public",
    "description": "New {@link Network} created",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.new"
    }
  },
  {
    "__docId__": 379,
    "kind": "typedef",
    "name": "Event:network.remove",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.remove",
    "access": "public",
    "description": "{@link Network} removed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.remove"
    }
  },
  {
    "__docId__": 380,
    "kind": "typedef",
    "name": "Event:network.init",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:network.init",
    "access": "public",
    "description": "{@link Network} is ready",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:network.init"
    }
  },
  {
    "__docId__": 381,
    "kind": "typedef",
    "name": "Event:aliases",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:aliases",
    "access": "public",
    "description": "Aliases updated",
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:aliases"
    }
  },
  {
    "__docId__": 382,
    "kind": "typedef",
    "name": "Event:setup",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:setup",
    "access": "public",
    "description": "This event is fired when the core needs to be setup",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "backends",
        "description": "List of available storage backends"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "backends[].DisplayName",
        "description": "Storage backends name"
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "backends[].Description",
        "description": "Storage backends description"
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": false,
        "name": "backends[].SetupKeys",
        "description": "Keys that will need a corresponding value to configure chosen storage backend"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "backends[].SetupDefaults",
        "description": "Defaults values for corresponding SetupKeys"
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:setup"
    }
  },
  {
    "__docId__": 383,
    "kind": "typedef",
    "name": "Event:setupok",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:setupok",
    "access": "public",
    "description": "This event is fired if the setup of the core was successful",
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:setupok"
    }
  },
  {
    "__docId__": 384,
    "kind": "typedef",
    "name": "Event:setupfailed",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:setupfailed",
    "access": "public",
    "description": "This event is fired if the setup of the core has failed",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": "The reason of the failure"
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:setupfailed"
    }
  },
  {
    "__docId__": 385,
    "kind": "typedef",
    "name": "Event:error",
    "memberof": "src/libquassel.js",
    "static": true,
    "longname": "src/libquassel.js~Event:error",
    "access": "public",
    "description": "An error occured",
    "lineNumber": 1547,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Event"
      ],
      "optional": false,
      "name": "Event:error"
    }
  },
  {
    "__docId__": 386,
    "kind": "file",
    "name": "src/message.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\nconst { util } = require('qtdatastream');\n\n/**\n * @type {Object}\n * @property {number} Types.PLAIN\n * @property {number} Types.NOTICE\n * @property {number} Types.ACTION\n * @property {number} Types.NICK\n * @property {number} Types.MODE\n * @property {number} Types.JOIN\n * @property {number} Types.PART\n * @property {number} Types.QUIT\n * @property {number} Types.KICK\n * @property {number} Types.KILL\n * @property {number} Types.SERVER\n * @property {number} Types.INFO\n * @property {number} Types.ERROR\n * @property {number} Types.DAYCHANGE\n * @property {number} Types.TOPIC\n * @property {number} Types.NETSPLITJOIN\n * @property {number} Types.NETSPLITQUIT\n * @property {number} Types.INVITE\n */\nexport const Types = {\n  PLAIN: 0x00001,\n  NOTICE: 0x00002,\n  ACTION: 0x00004,\n  NICK: 0x00008,\n  MODE: 0x00010,\n  JOIN: 0x00020,\n  PART: 0x00040,\n  QUIT: 0x00080,\n  KICK: 0x00100,\n  KILL: 0x00200,\n  SERVER: 0x00400,\n  INFO: 0x00800,\n  ERROR: 0x01000,\n  DAYCHANGE: 0x02000,\n  TOPIC: 0x04000,\n  NETSPLITJOIN: 0x08000,\n  NETSPLITQUIT: 0x10000,\n  INVITE: 0x20000\n};\n\n\n/**\n * @type {Object}\n * @property {number} Flags.NONE\n * @property {number} Flags.SELF\n * @property {number} Flags.HIGHLIGHT\n * @property {number} Flags.REDIRECTED\n * @property {number} Flags.SERVERMSG\n * @property {number} Flags.BACKLOG\n */\nexport const Flags = {\n  NONE: 0x00,\n  SELF: 0x01,\n  HIGHLIGHT: 0x02,\n  REDIRECTED: 0x04,\n  SERVERMSG: 0x08,\n  BACKLOG: 0x80\n};\n\n/**\n * @type {Object}\n * @property {number} HighlightModes.NONE\n * @property {number} HighlightModes.CURRENTNICK\n * @property {number} HighlightModes.ALLIDENTITYNICKS\n */\nexport const HighlightModes = {\n  NONE: 0x01,\n  CURRENTNICK: 0x02,\n  ALLIDENTITYNICKS: 0x03\n};\n\n/**\n * IRC Message\n */\nexport class IRCMessage {\n\n  /** @type {number} */\n  id;\n  /** @type {Date} */\n  datetime;\n  /** @type {number} */\n  type;\n  /** @type {?string} */\n  content;\n  /** @type {BufferInfo} */\n  bufferInfo;\n  /** @type {boolean} */\n  isHighlighted;\n  /** @type {?string} */\n  nick;\n  /** @type {?string} */\n  hostmask;\n\n  constructor(message) {\n    this.nick = null;\n    this.hostmask = null;\n    this._flags = null;\n    this.isSelf = false;\n    this.isHighlighted = false;\n    this._sender = null;\n    this.id = message.id;\n    this.datetime = new Date(message.timestamp * 1000);\n    this.type = message.type;\n    this.flags = message.flags;\n    this.sender = message.sender ? util.str(message.sender) : null;\n    this.content = message.content ? util.str(message.content) : null;\n    this.bufferInfo = message.bufferInfo;\n  }\n\n  /**\n   * Update internal highlight flags\n   * @param {Network} network\n   * @param {Identity} identity\n   * @param {number} mode\n   * @protected\n   */\n  _updateFlags(network, identity, mode) {\n    let nickRegex = null, nicks = [];\n    switch (mode) {\n    case HighlightModes.NONE:\n      // None, do nothing\n      return;\n    case HighlightModes.CURRENTNICK:\n      if (this.type !== Types.PLAIN && this.type !== Types.ACTION) return;\n      if (!network.nick) return;\n      ({ nickRegex } = network);\n      break;\n    case HighlightModes.ALLIDENTITYNICKS:\n      if (this.type !== Types.PLAIN && this.type !== Types.ACTION) return;\n      if (identity.nicks.length === 0) return;\n      for (let identityNickRegex of identity.nickRegexes) {\n        nicks.push(identityNickRegex);\n      }\n      if (network.nick && identity.nicks.indexOf(network.nick) === -1) {\n        nicks.push(network.nickRegex);\n      }\n      nickRegex = `(${nicks.join('|')})`;\n      break;\n    default:\n      // Invalid, do nothing\n      return;\n    }\n    let regex = new RegExp(`([\\\\W]|^)${nickRegex}([\\\\W]|$)`, 'i');\n    if (regex.test(this.content)) {\n      this.flags = this.flags | Flags.HIGHLIGHT;\n    }\n  }\n\n  /** @type {number} */\n  set flags(value) {\n    this._flags = value;\n    this.isSelf = (value & Flags.SELF) !== 0;\n    this.isHighlighted = ((value & Flags.HIGHLIGHT) !== 0) && !this.isSelf;\n  }\n\n  /** @type {number} */\n  get flags() {\n    return this._flags;\n  }\n\n  /** @type {?string} */\n  set sender(value) {\n    this._sender = value;\n    if (value) {\n      [ this.nick, this.hostmask ] = value.split('!');\n    } else {\n      this.nick = this.hostmask = null;\n    }\n  }\n\n  /** @type {?string} */\n  get sender() {\n    return this._sender;\n  }\n\n  toString() {\n    return `<IRCMessage [${this.nick}] ${this.content ? this.content.substring(0, 9) : '*empty*'}>`;\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/message.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 387,
    "kind": "variable",
    "name": "util",
    "memberof": "src/message.js",
    "static": true,
    "longname": "src/message.js~util",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/message.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 388,
    "kind": "variable",
    "name": "Types",
    "memberof": "src/message.js",
    "static": true,
    "longname": "src/message.js~Types",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/message.js",
    "importStyle": "{Types}",
    "description": "",
    "lineNumber": 32,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.PLAIN",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.NOTICE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.ACTION",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.NICK",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.MODE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.JOIN",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.PART",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.QUIT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.KICK",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.KILL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.SERVER",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.INFO",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.ERROR",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.DAYCHANGE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.TOPIC",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.NETSPLITJOIN",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.NETSPLITQUIT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.INVITE",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 389,
    "kind": "variable",
    "name": "Flags",
    "memberof": "src/message.js",
    "static": true,
    "longname": "src/message.js~Flags",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/message.js",
    "importStyle": "{Flags}",
    "description": "",
    "lineNumber": 63,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Flags.NONE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Flags.SELF",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Flags.HIGHLIGHT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Flags.REDIRECTED",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Flags.SERVERMSG",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Flags.BACKLOG",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 390,
    "kind": "variable",
    "name": "HighlightModes",
    "memberof": "src/message.js",
    "static": true,
    "longname": "src/message.js~HighlightModes",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/message.js",
    "importStyle": "{HighlightModes}",
    "description": "",
    "lineNumber": 78,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "HighlightModes.NONE",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "HighlightModes.CURRENTNICK",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "HighlightModes.ALLIDENTITYNICKS",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 391,
    "kind": "class",
    "name": "IRCMessage",
    "memberof": "src/message.js",
    "static": true,
    "longname": "src/message.js~IRCMessage",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/message.js",
    "importStyle": "{IRCMessage}",
    "description": "IRC Message",
    "lineNumber": 87,
    "interface": false
  },
  {
    "__docId__": 392,
    "kind": "member",
    "name": "id",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#id",
    "access": "public",
    "description": null,
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 393,
    "kind": "member",
    "name": "datetime",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#datetime",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 394,
    "kind": "member",
    "name": "type",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#type",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 395,
    "kind": "member",
    "name": "content",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#content",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "type": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 396,
    "kind": "member",
    "name": "bufferInfo",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#bufferInfo",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "type": {
      "nullable": null,
      "types": [
        "BufferInfo"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 397,
    "kind": "member",
    "name": "isHighlighted",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#isHighlighted",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 398,
    "kind": "member",
    "name": "nick",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#nick",
    "access": "public",
    "description": null,
    "lineNumber": 102,
    "type": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 399,
    "kind": "member",
    "name": "hostmask",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#hostmask",
    "access": "public",
    "description": null,
    "lineNumber": 104,
    "type": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 400,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/message.js~IRCMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message.js~IRCMessage#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 106,
    "undocument": true
  },
  {
    "__docId__": 403,
    "kind": "member",
    "name": "_flags",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#_flags",
    "access": "private",
    "description": null,
    "lineNumber": 109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 404,
    "kind": "member",
    "name": "isSelf",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#isSelf",
    "access": "public",
    "description": null,
    "lineNumber": 110,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 406,
    "kind": "member",
    "name": "_sender",
    "memberof": "src/message.js~IRCMessage",
    "static": false,
    "longname": "src/message.js~IRCMessage#_sender",
    "access": "private",
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 414,
    "kind": "method",
    "name": "_updateFlags",
    "memberof": "src/message.js~IRCMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message.js~IRCMessage#_updateFlags",
    "access": "protected",
    "description": "Update internal highlight flags",
    "lineNumber": 129,
    "params": [
      {
        "nullable": null,
        "types": [
          "Network"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Identity"
        ],
        "spread": false,
        "optional": false,
        "name": "identity",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "mode",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 416,
    "kind": "set",
    "name": "flags",
    "memberof": "src/message.js~IRCMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message.js~IRCMessage#flags",
    "access": "public",
    "description": null,
    "lineNumber": 162,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 420,
    "kind": "get",
    "name": "flags",
    "memberof": "src/message.js~IRCMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message.js~IRCMessage#flags",
    "access": "public",
    "description": null,
    "lineNumber": 169,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 421,
    "kind": "set",
    "name": "sender",
    "memberof": "src/message.js~IRCMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message.js~IRCMessage#sender",
    "access": "public",
    "description": null,
    "lineNumber": 174,
    "type": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 424,
    "kind": "get",
    "name": "sender",
    "memberof": "src/message.js~IRCMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message.js~IRCMessage#sender",
    "access": "public",
    "description": null,
    "lineNumber": 184,
    "type": {
      "nullable": true,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 425,
    "kind": "method",
    "name": "toString",
    "memberof": "src/message.js~IRCMessage",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/message.js~IRCMessage#toString",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 426,
    "kind": "file",
    "name": "src/network.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\nconst { EventEmitter } = require('events');\nconst logger = require('debug')('libquassel:network');\nconst { util, types: qtypes, serialization: { Serializable, serialize } } = require('qtdatastream');\n\nimport IRCUser from './user';\nimport { IRCBufferCollection } from './buffer';\n\n/**\n * @type {Object}\n * @property {number} ConnectionStates.DISCONNECTED\n * @property {number} ConnectionStates.CONNECTING\n * @property {number} ConnectionStates.INITIALIZING\n * @property {number} ConnectionStates.INITIALIZED\n * @property {number} ConnectionStates.RECONNECTING\n * @property {number} ConnectionStates.DISCONNECTING\n */\nexport const ConnectionStates = {\n  DISCONNECTED: 0x00,\n  CONNECTING: 0x01,\n  INITIALIZING: 0x02,\n  INITIALIZED: 0x03,\n  RECONNECTING: 0x04,\n  DISCONNECTING: 0x05\n};\n\nfunction setter(fn) {\n  return function(aclass, key, descriptor) {\n    if (!aclass.hasOwnProperty('__values')) {\n      Object.defineProperty(aclass, '__values', {\n        enumerable: false,\n        writable: false,\n        configurable: false,\n        value: {}\n      });\n    }\n    Object.assign(descriptor, {\n      enumerable: true,\n      get: function() {\n        return this.__values[key];\n      },\n      set: function(value) {\n        this.__values[key] = fn(value);\n      }\n    });\n    return descriptor;\n  };\n}\n\n/**\n * A server as used in {@link Network}\n * @implements {Serializable}\n */\n@Serializable('Network::Server')\nexport class Server {\n  /** @type {string} */\n  @serialize(qtypes.QString, 'Host')\n  host;\n\n  @serialize(qtypes.QUInt, 'Port')\n  port = 6667;\n\n  @serialize(qtypes.QString, 'Password')\n  password = '';\n\n  @serialize(qtypes.QBool, 'UseSSL')\n  useSSL = false;\n\n  @serialize(qtypes.QBool, 'UseProxy')\n  useProxy = false;\n\n  @serialize(qtypes.QInt, 'ProxyType')\n  proxyType = 0;\n\n  @serialize(qtypes.QString, 'ProxyHost')\n  proxyHost = '';\n\n  @serialize(qtypes.QUInt, 'ProxyPort')\n  proxyPort = 8080;\n\n  @serialize(qtypes.QString, 'ProxyUser')\n  proxyUser = '';\n\n  @serialize(qtypes.QString, 'ProxyPass')\n  proxyPass = '';\n\n  @serialize(qtypes.QBool)\n  sslVerify = false;\n\n  @serialize(qtypes.QInt)\n  sslVersion = 0;\n\n  constructor(args) {\n    Object.assign(this, args);\n  }\n}\n\nfunction toStr(s) {\n  return Buffer.isBuffer(s) ? util.str(s) : s;\n}\n\n/**\n * Quassel Network\n * @implements {Serializable}\n */\n@Serializable('NetworkInfo')\nexport class Network extends EventEmitter {\n\n  /** @type {number} */\n  @serialize(qtypes.QUserType.get('NetworkId'), 'NetworkId')\n  get networkId() {\n    return this.id;\n  }\n\n  /** @type {number} */\n  set networkId(value) {\n    this.id = value;\n  }\n\n  /** @type {string} */\n  @serialize(qtypes.QString, 'NetworkName')\n  get networkName() {\n    return this.name;\n  }\n\n  /** @type {string} */\n  set networkName(value) {\n    this.name = value;\n  }\n\n  /** @type {number} */\n  @serialize(qtypes.QUserType.get('IdentityId'), 'Identity')\n  identityId;\n\n  /** @type {string} */\n  @setter(toStr)\n  @serialize(qtypes.QByteArray, 'CodecForServer')\n  codecForServer = null;\n\n  /** @type {string} */\n  @setter(toStr)\n  @serialize(qtypes.QByteArray, 'CodecForEncoding')\n  codecForEncoding = null;\n\n  /** @type {string} */\n  @setter(toStr)\n  @serialize(qtypes.QByteArray, 'CodecForDecoding')\n  codecForDecoding = null;\n\n  @serialize(qtypes.QList.of(Server), 'ServerList')\n  ServerList = [];\n\n  @serialize(qtypes.QBool, 'UseRandomServer')\n  useRandomServer = false;\n\n  @serialize(qtypes.QStringList, 'Perform')\n  perform = [];\n\n  @serialize(qtypes.QBool, 'UseAutoIdentify')\n  useAutoIdentify = false;\n\n  @serialize(qtypes.QString, 'AutoIdentifyService')\n  autoIdentifyService = 'NickServ';\n\n  @serialize(qtypes.QString, 'AutoIdentifyPassword')\n  autoIdentifyPassword = '';\n\n  @serialize(qtypes.QBool, 'UseSasl')\n  useSasl = false;\n\n  @serialize(qtypes.QString, 'SaslAccount')\n  saslAccount = '';\n\n  @serialize(qtypes.QString, 'SaslPassword')\n  saslPassword = '';\n\n  @serialize(qtypes.QBool, 'UseAutoReconnect')\n  useAutoReconnect = true;\n\n  @serialize(qtypes.QUInt, 'AutoReconnectInterval')\n  autoReconnectInterval = 60;\n\n  @serialize(qtypes.QUInt, 'AutoReconnectRetries')\n  autoReconnectRetries = 20;\n\n  @serialize(qtypes.QBool, 'UnlimitedReconnectRetries')\n  unlimitedReconnectRetries = false;\n\n  @serialize(qtypes.QBool, 'RejoinChannels')\n  rejoinChannels = true;\n\n  @serialize(qtypes.QBool, 'UseCustomMessageRate')\n  useCustomMessageRate = false;\n\n  @serialize(qtypes.QBool, 'UnlimitedMessageRate')\n  unlimitedMessageRate = false;\n\n  @serialize(qtypes.QUInt, 'MessageRateDelay')\n  msgRateMessageDelay = 2200;\n\n  @serialize(qtypes.QUInt, 'MessageRateBurstSize')\n  msgRateBurstSize = 5;\n\n  /** @type {string} */\n  set myNick(value) {\n    this.nick = value;\n  }\n\n  /** @type {string} */\n  get myNick() {\n    return this._nick;\n  }\n\n  /** @type {string} */\n  set nick(value) {\n    this._nick = value;\n    this.nickRegex = value.replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  /** @type {string} */\n  get nick() {\n    return this._nick;\n  }\n\n  /** @type {boolean} */\n  set isConnected(connected) {\n    connected = Boolean(connected);\n    if (this.statusBuffer) {\n      this.statusBuffer.isActive = connected;\n    }\n    this._isConnected = connected;\n  }\n\n  /** @type {boolean} */\n  get isConnected() {\n    return this._isConnected;\n  }\n\n  constructor(id, name = null) {\n    super();\n    this._isConnected = false;\n    this._nick = null;\n    this.id = typeof id === 'number' ? id : -1;\n    /** @type {IRCBufferCollection} */\n    this.buffers = new IRCBufferCollection();\n    /** @type {Map<String, IRCUser>} */\n    this.users = new Map;\n    /** @type {boolean} */\n    this.open = false;\n    /** @type {number} */\n    this.connectionState = ConnectionStates.DISCONNECTED;\n    /** @type {number} */\n    this.latency = 0;\n    /** @type {?IRCBuffer} */\n    this.statusBuffer = null;\n    this.nickRegex = null;\n    this.name = name;\n  }\n\n  getUser(nick) {\n    return this.users.get(nick);\n  }\n\n  /**\n   * Add given user to the network\n   * @param {IRCUser} user\n   */\n  addUser(user) {\n    this.users.set(user.nick, user);\n  }\n\n  /**\n   * Returns `true` if the specified nick/{@link IRCUser} exists in the network, `false` otherwise\n   * @param {string|IRCUser} nick\n   * @returns {boolean}\n   */\n  hasUser(nick) {\n    return this.users.has(typeof nick.nick === 'string' ? nick.nick : nick);\n  }\n\n  /**\n   * Replace `oldNick` by `newNick` in current network and buffers\n   * @param {string} oldNick\n   * @param {string} newNick\n   */\n  renameUser(oldNick, newNick) {\n    const user = this.users.get(oldNick);\n    if (user) {\n      user.nick = newNick;\n      this.users.set(newNick, user);\n      this.users.delete(oldNick);\n      for (let buffer of this.buffers.values()) {\n        if (buffer.isChannel && buffer.hasUser(oldNick)) {\n          buffer.updateUserMaps(oldNick);\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the user identified by `nick` from the network and buffers\n   * @param {string} nick\n   * @returns {number[]} list of buffer ids that has been deactivated\n   */\n  deleteUser(nick) {\n    const ids = [];\n    for (let buffer of this.buffers.values()) {\n      if (buffer.isChannel) {\n        if (buffer.hasUser(nick)) {\n          buffer.removeUser(nick);\n          if (this.nick && this.nick.toLowerCase() === nick.toLowerCase()) {\n            buffer.isActive = false;\n            ids.push(buffer.id);\n          }\n        }\n      } else if (buffer.name === nick) {\n        buffer.isActive = false;\n        ids.push(buffer.id);\n      }\n    }\n    this.users.delete(nick);\n    return ids;\n  }\n\n  /**\n   * @param {IRCUser[]} userlist\n   */\n  updateUsers(userlist) {\n    this.users.clear();\n    if (Array.isArray(userlist) && userlist.length> 0) {\n      for (let user of userlist) {\n        this.users.set(user.nick, user);\n      }\n    }\n  }\n\n  /**\n   * Get the {IRCBuffer} corresponding to specified id or name\n   * @param {number|string} bufferId\n   */\n  getBuffer(bufferId) {\n    return this.buffers.get(bufferId);\n  }\n\n  /**\n   * Returns `true` if a buffer exists with corresponding id or name\n   * @param {number|string} bufferId\n   */\n  hasBuffer(bufferId) {\n    return this.buffers.has(bufferId);\n  }\n\n  /**\n   * This method is used internally by update method\n   * @protected\n   * @param {Object} uac\n   */\n  set ircUsersAndChannels(uac) {\n    // Create IRCUsers and attach them to network\n    for (let user of uac.users) {\n      this.addUser(new IRCUser(user));\n    }\n    // If there is a buffer corresponding to a nick, activate the buffer\n    for (let buffer of this.buffers.values()) {\n      if (!buffer.isChannel && this.hasUser(buffer.name)) {\n        buffer.isActive = true;\n      }\n    }\n    // Attach channels to network\n    let channel, nick, user;\n    for (let key of uac.channels) {\n      channel = this.getBuffer(key);\n      // Then attach users to channels\n      for (nick in uac.channels[key].UserModes) {\n        user = this.getUser(nick);\n        if (user) {\n          channel.addUser(user, uac.channels[key].UserModes[nick]);\n        } else {\n          logger('User %s have not been found on server', nick);\n        }\n      }\n    }\n  }\n\n  update(data) {\n    Object.assign(this, data);\n  }\n\n  toString() {\n    return `<Network ${this.id} ${this.name}>`;\n  }\n}\n\n/**\n * Map of {@link Network}, with helpers\n */\nexport class NetworkCollection extends Map {\n  /**\n   * Add an empty {@linkNetwork} identified by `networkId` to the collection\n   * @param {number} networkId\n   * @returns {module:network.Network}\n   */\n  add(networkId) {\n    networkId = parseInt(networkId, 10);\n    const network = new Network(networkId);\n    this.set(networkId, network);\n    return network;\n  }\n\n  /**\n   * Returns {@link IRCBuffer} corresponding to given `bufferId`, or `undefined` otherwise\n   * @param {number} bufferId\n   * @returns {?IRCBuffer}\n   */\n  getBuffer(bufferId) {\n    if (typeof bufferId !== 'number') return undefined;\n    let buffer;\n    for (let network of this.values()) {\n      buffer = network.buffers.get(bufferId);\n      if (buffer) return buffer;\n    }\n    return undefined;\n  }\n\n  /**\n   * Delete the {@link IRCBuffer} object identified by `bufferId` from the networks\n   * @param {number} bufferId\n   */\n  deleteBuffer(bufferId) {\n    if (typeof bufferId !== 'number') {\n      logger('deleteBuffer:%O is not a number', bufferId);\n      return;\n    }\n    const buffer = this.getBuffer(bufferId);\n    if (buffer) {\n      this.get(buffer.network).buffers.delete(bufferId);\n    }\n  }\n\n  /**\n   * Yields all buffers of all networks\n   */\n  *buffers() {\n    for (let network of this.values()) {\n      for (let buffer of network.buffers.values()) {\n        yield buffer;\n      }\n    }\n  }\n\n  /**\n   * Returns `true` if buffer identified by `bufferId` exists\n   * @param {number} bufferId\n   */\n  hasBuffer(bufferId) {\n    if (typeof bufferId !== 'number') {\n      logger('hasBuffer:%O is not a number', bufferId);\n      return false;\n    }\n    for (let network of this.values()) {\n      if (network.hasBuffer(bufferId)) return true;\n    }\n    return false;\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/network.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 427,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/network.js",
    "static": true,
    "longname": "src/network.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/network.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 428,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/network.js",
    "static": true,
    "longname": "src/network.js~logger",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/network.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 429,
    "kind": "variable",
    "name": "util",
    "memberof": "src/network.js",
    "static": true,
    "longname": "src/network.js~util",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/network.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 430,
    "kind": "variable",
    "name": "ConnectionStates",
    "memberof": "src/network.js",
    "static": true,
    "longname": "src/network.js~ConnectionStates",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/network.js",
    "importStyle": "{ConnectionStates}",
    "description": "",
    "lineNumber": 25,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ConnectionStates.DISCONNECTED",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ConnectionStates.CONNECTING",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ConnectionStates.INITIALIZING",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ConnectionStates.INITIALIZED",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ConnectionStates.RECONNECTING",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ConnectionStates.DISCONNECTING",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 431,
    "kind": "function",
    "name": "setter",
    "memberof": "src/network.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/network.js~setter",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/network.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "params": [
      {
        "name": "fn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 432,
    "kind": "class",
    "name": "Server",
    "memberof": "src/network.js",
    "static": true,
    "longname": "src/network.js~Server",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/network.js",
    "importStyle": "{Server}",
    "description": "A server as used in {@link Network}",
    "lineNumber": 62,
    "decorators": [
      {
        "name": "Serializable",
        "arguments": "('Network::Server')"
      }
    ],
    "interface": false,
    "implements": [
      "Serializable"
    ]
  },
  {
    "__docId__": 433,
    "kind": "member",
    "name": "host",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#host",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'Host')"
      }
    ]
  },
  {
    "__docId__": 434,
    "kind": "member",
    "name": "port",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#port",
    "access": "public",
    "description": null,
    "lineNumber": 68,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUInt, 'Port')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 435,
    "kind": "member",
    "name": "password",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#password",
    "access": "public",
    "description": null,
    "lineNumber": 71,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'Password')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 436,
    "kind": "member",
    "name": "useSSL",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#useSSL",
    "access": "public",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UseSSL')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 437,
    "kind": "member",
    "name": "useProxy",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#useProxy",
    "access": "public",
    "description": null,
    "lineNumber": 77,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UseProxy')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 438,
    "kind": "member",
    "name": "proxyType",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#proxyType",
    "access": "public",
    "description": null,
    "lineNumber": 80,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QInt, 'ProxyType')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 439,
    "kind": "member",
    "name": "proxyHost",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#proxyHost",
    "access": "public",
    "description": null,
    "lineNumber": 83,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'ProxyHost')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 440,
    "kind": "member",
    "name": "proxyPort",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#proxyPort",
    "access": "public",
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUInt, 'ProxyPort')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 441,
    "kind": "member",
    "name": "proxyUser",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#proxyUser",
    "access": "public",
    "description": null,
    "lineNumber": 89,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'ProxyUser')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 442,
    "kind": "member",
    "name": "proxyPass",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#proxyPass",
    "access": "public",
    "description": null,
    "lineNumber": 92,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'ProxyPass')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 443,
    "kind": "member",
    "name": "sslVerify",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#sslVerify",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 444,
    "kind": "member",
    "name": "sslVersion",
    "memberof": "src/network.js~Server",
    "static": false,
    "longname": "src/network.js~Server#sslVersion",
    "access": "public",
    "description": null,
    "lineNumber": 98,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QInt)"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 445,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/network.js~Server",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Server#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 100,
    "undocument": true
  },
  {
    "__docId__": 446,
    "kind": "function",
    "name": "toStr",
    "memberof": "src/network.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/network.js~toStr",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/network.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 105,
    "undocument": true,
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 447,
    "kind": "class",
    "name": "Network",
    "memberof": "src/network.js",
    "static": true,
    "longname": "src/network.js~Network",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/network.js",
    "importStyle": "{Network}",
    "description": "Quassel Network",
    "lineNumber": 114,
    "decorators": [
      {
        "name": "Serializable",
        "arguments": "('NetworkInfo')"
      }
    ],
    "interface": false,
    "extends": [
      "EventEmitter"
    ],
    "implements": [
      "Serializable"
    ]
  },
  {
    "__docId__": 448,
    "kind": "get",
    "name": "networkId",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#networkId",
    "access": "public",
    "description": null,
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUserType.get('NetworkId'), 'NetworkId')"
      }
    ]
  },
  {
    "__docId__": 449,
    "kind": "set",
    "name": "networkId",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#networkId",
    "access": "public",
    "description": null,
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 450,
    "kind": "member",
    "name": "id",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#id",
    "access": "public",
    "description": null,
    "lineNumber": 124,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 451,
    "kind": "get",
    "name": "networkName",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#networkName",
    "access": "public",
    "description": null,
    "lineNumber": 129,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'NetworkName')"
      }
    ]
  },
  {
    "__docId__": 452,
    "kind": "set",
    "name": "networkName",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#networkName",
    "access": "public",
    "description": null,
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 453,
    "kind": "member",
    "name": "name",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#name",
    "access": "public",
    "description": null,
    "lineNumber": 135,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 454,
    "kind": "member",
    "name": "identityId",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#identityId",
    "access": "public",
    "description": null,
    "lineNumber": 140,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUserType.get('IdentityId'), 'Identity')"
      }
    ]
  },
  {
    "__docId__": 455,
    "kind": "member",
    "name": "codecForServer",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#codecForServer",
    "access": "public",
    "description": null,
    "lineNumber": 145,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "setter",
        "arguments": "(toStr)"
      },
      {
        "name": "serialize",
        "arguments": "(qtypes.QByteArray, 'CodecForServer')"
      }
    ]
  },
  {
    "__docId__": 456,
    "kind": "member",
    "name": "codecForEncoding",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#codecForEncoding",
    "access": "public",
    "description": null,
    "lineNumber": 150,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "setter",
        "arguments": "(toStr)"
      },
      {
        "name": "serialize",
        "arguments": "(qtypes.QByteArray, 'CodecForEncoding')"
      }
    ]
  },
  {
    "__docId__": 457,
    "kind": "member",
    "name": "codecForDecoding",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#codecForDecoding",
    "access": "public",
    "description": null,
    "lineNumber": 155,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    },
    "decorators": [
      {
        "name": "setter",
        "arguments": "(toStr)"
      },
      {
        "name": "serialize",
        "arguments": "(qtypes.QByteArray, 'CodecForDecoding')"
      }
    ]
  },
  {
    "__docId__": 458,
    "kind": "member",
    "name": "ServerList",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#ServerList",
    "access": "public",
    "description": null,
    "lineNumber": 158,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QList.of(Server), 'ServerList')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 459,
    "kind": "member",
    "name": "useRandomServer",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#useRandomServer",
    "access": "public",
    "description": null,
    "lineNumber": 161,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UseRandomServer')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 460,
    "kind": "member",
    "name": "perform",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#perform",
    "access": "public",
    "description": null,
    "lineNumber": 164,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QStringList, 'Perform')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 461,
    "kind": "member",
    "name": "useAutoIdentify",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#useAutoIdentify",
    "access": "public",
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UseAutoIdentify')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 462,
    "kind": "member",
    "name": "autoIdentifyService",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#autoIdentifyService",
    "access": "public",
    "description": null,
    "lineNumber": 170,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'AutoIdentifyService')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 463,
    "kind": "member",
    "name": "autoIdentifyPassword",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#autoIdentifyPassword",
    "access": "public",
    "description": null,
    "lineNumber": 173,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'AutoIdentifyPassword')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 464,
    "kind": "member",
    "name": "useSasl",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#useSasl",
    "access": "public",
    "description": null,
    "lineNumber": 176,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UseSasl')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 465,
    "kind": "member",
    "name": "saslAccount",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#saslAccount",
    "access": "public",
    "description": null,
    "lineNumber": 179,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'SaslAccount')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 466,
    "kind": "member",
    "name": "saslPassword",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#saslPassword",
    "access": "public",
    "description": null,
    "lineNumber": 182,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QString, 'SaslPassword')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 467,
    "kind": "member",
    "name": "useAutoReconnect",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#useAutoReconnect",
    "access": "public",
    "description": null,
    "lineNumber": 185,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UseAutoReconnect')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 468,
    "kind": "member",
    "name": "autoReconnectInterval",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#autoReconnectInterval",
    "access": "public",
    "description": null,
    "lineNumber": 188,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUInt, 'AutoReconnectInterval')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 469,
    "kind": "member",
    "name": "autoReconnectRetries",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#autoReconnectRetries",
    "access": "public",
    "description": null,
    "lineNumber": 191,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUInt, 'AutoReconnectRetries')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 470,
    "kind": "member",
    "name": "unlimitedReconnectRetries",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#unlimitedReconnectRetries",
    "access": "public",
    "description": null,
    "lineNumber": 194,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UnlimitedReconnectRetries')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 471,
    "kind": "member",
    "name": "rejoinChannels",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#rejoinChannels",
    "access": "public",
    "description": null,
    "lineNumber": 197,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'RejoinChannels')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 472,
    "kind": "member",
    "name": "useCustomMessageRate",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#useCustomMessageRate",
    "access": "public",
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UseCustomMessageRate')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 473,
    "kind": "member",
    "name": "unlimitedMessageRate",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#unlimitedMessageRate",
    "access": "public",
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QBool, 'UnlimitedMessageRate')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 474,
    "kind": "member",
    "name": "msgRateMessageDelay",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#msgRateMessageDelay",
    "access": "public",
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUInt, 'MessageRateDelay')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 475,
    "kind": "member",
    "name": "msgRateBurstSize",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#msgRateBurstSize",
    "access": "public",
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "decorators": [
      {
        "name": "serialize",
        "arguments": "(qtypes.QUInt, 'MessageRateBurstSize')"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 476,
    "kind": "set",
    "name": "myNick",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#myNick",
    "access": "public",
    "description": null,
    "lineNumber": 212,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 478,
    "kind": "get",
    "name": "myNick",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#myNick",
    "access": "public",
    "description": null,
    "lineNumber": 217,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 479,
    "kind": "set",
    "name": "nick",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#nick",
    "access": "public",
    "description": null,
    "lineNumber": 222,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 480,
    "kind": "member",
    "name": "_nick",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#_nick",
    "access": "private",
    "description": null,
    "lineNumber": 223,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 481,
    "kind": "member",
    "name": "nickRegex",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#nickRegex",
    "access": "public",
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 482,
    "kind": "get",
    "name": "nick",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#nick",
    "access": "public",
    "description": null,
    "lineNumber": 228,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 483,
    "kind": "set",
    "name": "isConnected",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#isConnected",
    "access": "public",
    "description": null,
    "lineNumber": 233,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 484,
    "kind": "member",
    "name": "_isConnected",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#_isConnected",
    "access": "private",
    "description": null,
    "lineNumber": 238,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 485,
    "kind": "get",
    "name": "isConnected",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#isConnected",
    "access": "public",
    "description": null,
    "lineNumber": 242,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 486,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 246,
    "undocument": true
  },
  {
    "__docId__": 490,
    "kind": "member",
    "name": "buffers",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#buffers",
    "access": "public",
    "description": null,
    "lineNumber": 252,
    "type": {
      "nullable": null,
      "types": [
        "IRCBufferCollection"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 491,
    "kind": "member",
    "name": "users",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#users",
    "access": "public",
    "description": null,
    "lineNumber": 254,
    "type": {
      "nullable": null,
      "types": [
        "Map<String, IRCUser>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 492,
    "kind": "member",
    "name": "open",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#open",
    "access": "public",
    "description": null,
    "lineNumber": 256,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 493,
    "kind": "member",
    "name": "connectionState",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#connectionState",
    "access": "public",
    "description": null,
    "lineNumber": 258,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 494,
    "kind": "member",
    "name": "latency",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#latency",
    "access": "public",
    "description": null,
    "lineNumber": 260,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 495,
    "kind": "member",
    "name": "statusBuffer",
    "memberof": "src/network.js~Network",
    "static": false,
    "longname": "src/network.js~Network#statusBuffer",
    "access": "public",
    "description": null,
    "lineNumber": 262,
    "type": {
      "nullable": true,
      "types": [
        "IRCBuffer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 498,
    "kind": "method",
    "name": "getUser",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#getUser",
    "access": "public",
    "description": null,
    "lineNumber": 267,
    "undocument": true,
    "params": [
      {
        "name": "nick",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 499,
    "kind": "method",
    "name": "addUser",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#addUser",
    "access": "public",
    "description": "Add given user to the network",
    "lineNumber": 275,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 500,
    "kind": "method",
    "name": "hasUser",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#hasUser",
    "access": "public",
    "description": "Returns `true` if the specified nick/{@link IRCUser} exists in the network, `false` otherwise",
    "lineNumber": 284,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{boolean}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "IRCUser"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 501,
    "kind": "method",
    "name": "renameUser",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#renameUser",
    "access": "public",
    "description": "Replace `oldNick` by `newNick` in current network and buffers",
    "lineNumber": 293,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "oldNick",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newNick",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 502,
    "kind": "method",
    "name": "deleteUser",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#deleteUser",
    "access": "public",
    "description": "Delete the user identified by `nick` from the network and buffers",
    "lineNumber": 312,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{number[]} list of buffer ids that has been deactivated"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "nick",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": "list of buffer ids that has been deactivated"
    }
  },
  {
    "__docId__": 503,
    "kind": "method",
    "name": "updateUsers",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#updateUsers",
    "access": "public",
    "description": "",
    "lineNumber": 335,
    "params": [
      {
        "nullable": null,
        "types": [
          "IRCUser[]"
        ],
        "spread": false,
        "optional": false,
        "name": "userlist",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 504,
    "kind": "method",
    "name": "getBuffer",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#getBuffer",
    "access": "public",
    "description": "Get the {IRCBuffer} corresponding to specified id or name",
    "lineNumber": 348,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 505,
    "kind": "method",
    "name": "hasBuffer",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#hasBuffer",
    "access": "public",
    "description": "Returns `true` if a buffer exists with corresponding id or name",
    "lineNumber": 356,
    "params": [
      {
        "nullable": null,
        "types": [
          "number",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 506,
    "kind": "set",
    "name": "ircUsersAndChannels",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#ircUsersAndChannels",
    "access": "protected",
    "description": "This method is used internally by update method",
    "lineNumber": 365,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "uac",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 507,
    "kind": "method",
    "name": "update",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#update",
    "access": "public",
    "description": null,
    "lineNumber": 392,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 508,
    "kind": "method",
    "name": "toString",
    "memberof": "src/network.js~Network",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~Network#toString",
    "access": "public",
    "description": null,
    "lineNumber": 396,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 509,
    "kind": "class",
    "name": "NetworkCollection",
    "memberof": "src/network.js",
    "static": true,
    "longname": "src/network.js~NetworkCollection",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/network.js",
    "importStyle": "{NetworkCollection}",
    "description": "Map of {@link Network}, with helpers",
    "lineNumber": 404,
    "interface": false,
    "extends": [
      "Map"
    ]
  },
  {
    "__docId__": 510,
    "kind": "method",
    "name": "add",
    "memberof": "src/network.js~NetworkCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~NetworkCollection#add",
    "access": "public",
    "description": "Add an empty {@linkNetwork} identified by `networkId` to the collection",
    "lineNumber": 410,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{module:network.Network}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "module:network.Network"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 511,
    "kind": "method",
    "name": "getBuffer",
    "memberof": "src/network.js~NetworkCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~NetworkCollection#getBuffer",
    "access": "public",
    "description": "Returns {@link IRCBuffer} corresponding to given `bufferId`, or `undefined` otherwise",
    "lineNumber": 422,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{?IRCBuffer}"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "IRCBuffer"
      ],
      "spread": false,
      "description": ""
    }
  },
  {
    "__docId__": 512,
    "kind": "method",
    "name": "deleteBuffer",
    "memberof": "src/network.js~NetworkCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~NetworkCollection#deleteBuffer",
    "access": "public",
    "description": "Delete the {@link IRCBuffer} object identified by `bufferId` from the networks",
    "lineNumber": 436,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 513,
    "kind": "method",
    "name": "buffers",
    "memberof": "src/network.js~NetworkCollection",
    "generator": true,
    "async": false,
    "static": false,
    "longname": "src/network.js~NetworkCollection#buffers",
    "access": "public",
    "description": "Yields all buffers of all networks",
    "lineNumber": 450,
    "params": [],
    "return": null
  },
  {
    "__docId__": 514,
    "kind": "method",
    "name": "hasBuffer",
    "memberof": "src/network.js~NetworkCollection",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/network.js~NetworkCollection#hasBuffer",
    "access": "public",
    "description": "Returns `true` if buffer identified by `bufferId` exists",
    "lineNumber": 462,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 515,
    "kind": "file",
    "name": "src/request.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\nconst { EventEmitter } = require('events');\nconst { types: qtypes, socket } = require('qtdatastream');\nconst logger = require('debug')('libquassel:request');\nconst pkg = require('../package.json');\n\nimport { Network, Server } from './network';\n\n/**\n * @type {Object}\n * @property {number} Types.INVALID\n * @property {number} Types.SYNC\n * @property {number} Types.RPCCALL\n * @property {number} Types.INITREQUEST\n * @property {number} Types.INITDATA\n * @property {number} Types.HEARTBEAT\n * @property {number} Types.HEARTBEATREPLY\n */\nexport const Types = {\n  INVALID: 0x00,\n  SYNC: 0x01,\n  RPCCALL: 0x02,\n  INITREQUEST: 0x03,\n  INITDATA: 0x04,\n  HEARTBEAT: 0x05,\n  HEARTBEATREPLY: 0x06\n};\n\n/**\n * Decorator for SYNC methods\n * @protected\n */\nfunction sync(className, functionName, ...datatypes) {\n  const qsync = qtypes.QInt.from(Types.SYNC);\n  const qclassName = qtypes.QByteArray.from(className);\n  const qfunctionName = qtypes.QByteArray.from(functionName);\n  return function(target, _key, descriptor) {\n    return {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: function(...args) {\n        const [ id, ...data ] = descriptor.value.apply(this, args);\n        this.qtsocket.write([\n          qsync,\n          qclassName,\n          qtypes.QByteArray.from(id),\n          qfunctionName,\n          ...data.map((value, index) => datatypes[index].from(value))\n        ]);\n      }\n    };\n  };\n}\n\n/**\n * Decorator for RPC methods\n * @protected\n */\nfunction rpc(functionName, ...datatypes) {\n  const qrpc = qtypes.QInt.from(Types.RPCCALL);\n  const qfunctionName = qtypes.QByteArray.from(`2${functionName}`);\n  return function(target, _key, descriptor) {\n    return {\n      enumerable: false,\n      configurable: false,\n      writable: false,\n      value: function(...args) {\n        const data = descriptor.value.apply(this, args);\n        this.qtsocket.write([\n          qrpc,\n          qfunctionName,\n          ...data.map((value, index) => datatypes[index].from(value))\n        ]);\n      }\n    };\n  };\n}\n\n/**\n * Send commands to the core\n */\nexport class Core extends EventEmitter {\n  constructor(options) {\n    super();\n    this.options = options;\n    this.useSSL = false;\n    this.useCompression = false;\n    this.qtsocket = null;\n    this.duplex = null;\n  }\n\n  /**\n   * Handle magic number response\n   * @param {net.Duplex} duplex\n   */\n  init(duplex) {\n    this.duplex = duplex;\n    this.duplex.once('data', data => {\n      const ret = data.readUInt32BE(0);\n      if (((ret >> 24) & 0x01) > 0) {\n        this.useSSL = true;\n        logger('Core supports SSL');\n      }\n\n      if (((ret >> 24) & 0x02) > 0) {\n        this.useCompression = true;\n        logger('Core supports compression');\n      }\n\n      // if (self.useCompression) {\n      //   const zlib = require('zlib');\n      //     // Not working, don't know why yet\n      //     self.qtsocket = new qtdatastream.socket.Socket(self.client, function(buffer, next) {\n      //         zlib.inflate(buffer, next);\n      //     }, function(buffer, next) {\n      //         var deflate = zlib.createDeflate({flush: zlib.Z_SYNC_FLUSH}), buffers = [];\n      //         deflate.on('data', function(chunk) {\n      //             buffers.push(chunk);\n      //         });\n\n      //         deflate.on('end', function() {\n      //             logger(buffers);\n      //             next(null, Buffer.concat(buffers));\n      //         });\n\n      //         deflate.end(buffer);\n      //     });\n      // } else {\n      this.qtsocket = new socket.Socket(duplex);\n      // }\n\n      this.qtsocket\n      .on('data', data => this.emit('data', data))\n      .on('close', () => this.emit('close'))\n      .on('end', () => this.emit('end'))\n      .on('error', e => this.emit('error', e));\n\n      this.sendClientInfo(this.useSSL, this.useCompression);\n    });\n  }\n\n  /**\n   * Begins SSL handshake if necessary.\n   * This method returns a Promise.\n   * @param {function} callback\n   */\n  finishClientInit(callback) {\n    if (this.useSSL) {\n      logger('SECURE');\n      const tls = require('tls');\n      const secureContext = tls.createSecureContext({\n        secureProtocol: 'TLSv1_2_client_method'\n      });\n      const secureStream = tls.connect({\n        socket: this.duplex,\n        rejectUnauthorized: false,\n        secureContext: secureContext\n      });\n      secureStream.once('secure', callback);\n      this.qtsocket.setSocket(secureStream);\n    } else {\n      logger('PLAIN');\n      callback();\n    }\n  }\n\n  /**\n   * Send heartbeat response\n   * @param {boolean} reply\n   */\n  heartBeat(reply) {\n    const d = new Date();\n    const ms = d.getTime() - d.setHours(0, 0, 0, 0);\n    const slist = [\n      reply ? Types.HEARTBEAT : Types.HEARTBEATREPLY,\n      qtypes.QTime.from(ms)\n    ];\n    logger('Sending heartbeat');\n    this.qtsocket.write(slist);\n  }\n\n  /**\n   * Core Sync request - Backlogs\n   * @param {number} bufferId\n   * @param {number} [firstMsgId=-1]\n   * @param {number} [lastMsgId=-1]\n   * @param {?number} [maxAmount=backloglimit]\n   */\n  @sync(\n    'BacklogManager',\n    'requestBacklog',\n    qtypes.QUserType.get('BufferId'),\n    qtypes.QUserType.get('MsgId'),\n    qtypes.QUserType.get('MsgId'),\n    qtypes.QInt,\n    qtypes.QInt\n  )\n  backlog(bufferId, firstMsgId = -1, lastMsgId = -1, maxAmount = undefined) {\n    maxAmount = maxAmount === undefined ? this.options.backloglimit : maxAmount;\n    logger('Sending backlog request');\n    return [ '', bufferId, firstMsgId, lastMsgId, maxAmount, 0 ];\n  }\n\n  /**\n   * Core Sync request - Connect the specified network\n   * @param {number} networkId\n   */\n  @sync('Network', 'requestConnect')\n  connectNetwork(networkId) {\n    logger('Sending connection request');\n    return [ String(networkId) ];\n  }\n\n  /**\n   * Core Sync request - Disconnect the specified network\n   * @param {number} networkId\n   */\n  @sync('Network', 'requestDisconnect')\n  disconnectNetwork(networkId) {\n    logger('Sending disconnection request');\n    return [ String(networkId) ];\n  }\n\n  /**\n   * Core Sync request - Update network information\n   * @param {Number} networkId\n   * @param {Network} network\n   */\n  @sync('Network', 'requestSetNetworkInfo', qtypes.QClass)\n  setNetworkInfo(networkId, network) {\n    logger('Sending update request (Network)');\n    return [ String(networkId), network ];\n  }\n\n  /**\n   * Core Sync request - Mark buffer as read\n   * @param {number} bufferId\n   */\n  @sync('BufferSyncer', 'requestMarkBufferAsRead', qtypes.QUserType.get('BufferId'))\n  markBufferAsRead(bufferId) {\n    logger('Sending mark buffer as read request');\n    return [ '', bufferId ];\n  }\n\n  /**\n   * Core Sync request - Set all messages before messageId as read for specified buffer\n   * @param {number} bufferId\n   * @param {number} messageId\n   */\n  @sync('BufferSyncer', 'requestSetLastSeenMsg', qtypes.QUserType.get('BufferId'), qtypes.QUserType.get('MsgId'))\n  setLastMsgRead(bufferId, messageId) {\n    logger('Sending last message read request');\n    return [ '', bufferId, messageId ];\n  }\n\n  /**\n   * Core Sync request - Mark a specified buffer line\n   * @param {number} bufferId\n   * @param {number} messageId\n   */\n  @sync('BufferSyncer', 'requestSetMarkerLine', qtypes.QUserType.get('BufferId'), qtypes.QUserType.get('MsgId'))\n  setMarkerLine(bufferId, messageId) {\n    logger('Sending mark line request');\n    return [ '', bufferId, messageId ];\n  }\n\n  /**\n   * Core Sync request - Remove a buffer\n   * @param {number} bufferId\n   */\n  @sync('BufferSyncer', 'requestRemoveBuffer', qtypes.QUserType.get('BufferId'))\n  removeBuffer(bufferId) {\n    logger('Sending perm hide request');\n    return [ '', bufferId ];\n  }\n\n  /**\n   * Core Sync request - Merge bufferId2 into bufferId1\n   * @param {number} bufferId1\n   * @param {number} bufferId2\n   */\n  @sync('BufferSyncer', 'requestMergeBuffersPermanently', qtypes.QUserType.get('BufferId'), qtypes.QUserType.get('BufferId'))\n  mergeBuffersPermanently( bufferId1, bufferId2) {\n    logger('Sending merge request');\n    return [ '', bufferId1, bufferId2 ];\n  }\n\n  /**\n   * Core Sync request - Rename a buffer\n   * @param {number} bufferId\n   * @param {string} newName\n   */\n   @sync('BufferSyncer', 'requestMergeBuffersPermanently', qtypes.QUserType.get('BufferId'), qtypes.QString)\n  renameBuffer(bufferId, newName) {\n    logger('Sending rename buffer request');\n    return [ '', bufferId, newName ];\n  }\n\n  /**\n   * Core Sync request - Hide a buffer temporarily\n   * @param {number} bufferViewId\n   * @param {number} bufferId\n   */\n  @sync('BufferViewConfig', 'requestRemoveBuffer', qtypes.QUserType.get('BufferId'))\n  hideBufferTemporarily(bufferViewId, bufferId) {\n    logger('Sending temp hide request');\n    return [ String(bufferViewId), bufferId ];\n  }\n\n  /**\n   * Core Sync request - Hide a buffer permanently\n   * @param {number} bufferViewId\n   * @param {number} bufferId\n   */\n  @sync('BufferViewConfig', 'requestRemoveBufferPermanently', qtypes.QUserType.get('BufferId'))\n  hideBufferPermanently(bufferViewId, bufferId) {\n    logger('Sending perm hide request');\n    return [ String(bufferViewId), bufferId ];\n  }\n\n  /**\n   * Core Sync request - Unhide a buffer\n   * @param {number} bufferViewId\n   * @param {number} bufferId\n   * @param {number} pos\n   */\n  @sync('BufferViewConfig', 'requestAddBuffer', qtypes.QUserType.get('BufferId'), qtypes.QInt)\n  unhideBuffer(bufferViewId, bufferId, pos) {\n    logger('Sending unhide request');\n    return [ String(bufferViewId), bufferId, pos ];\n  }\n\n  /**\n   * Core Sync request - Create a new chat list\n   * @experimental\n   * @param {Object} data\n   * @example\n   * FIXME\n   * createBufferView({\n   *     sortAlphabetically: 1,\n   *     showSearch: 0,\n   *     networkId: 0,\n   *     minimumActivity: 0,\n   *     hideInactiveNetworks: 0,\n   *     hideInactiveBuffers: 0,\n   *     disableDecoration: 0,\n   *     bufferViewName: 'All Chats',\n   *     allowedBufferTypes: 15,\n   *     addNewBuffersAutomatically: 1,\n   *     TemporarilyRemovedBuffers: [],\n   *     RemovedBuffers: [],\n   *     BufferList: []\n   * });\n   */\n  @sync('BufferViewManager', 'requestCreateBufferView', qtypes.QMap)\n  createBufferView(data) {\n    logger('Sending create buffer view request');\n    return [ '', data ];\n  }\n\n  /**\n   * Core Sync request - Update ignoreList\n   * @param {object} ignoreList\n   */\n  @sync('IgnoreListManager', 'requestUpdate', qtypes.QList)\n  updateIgnoreListManager(ignoreList) {\n    logger('Sending update request (IgnoreListManager)');\n    return [ '', ignoreList ];\n  }\n\n  /**\n   * Core Sync request - Update identity\n   * @param {Number} identityId\n   * @param {Identity} identity\n   */\n  @sync('Identity', 'requestUpdate', qtypes.QClass)\n  updateIdentity(identityId, identity) {\n    logger('Sending update request (Identity)');\n    return [ String(identityId), identity ];\n  }\n\n  /**\n   * Core Sync request - Update aliases\n   * @param {object} data see {@link toCoreObject}\n   */\n  @sync('AliasManager', 'requestUpdate', qtypes.QMap)\n  updateAliasManager(data) {\n    logger('Sending update request (AliasManager)');\n    return [ '', data ];\n  }\n\n  @sync('BufferSyncer', 'requestPurgeBufferIds')\n  purgeBufferIds() {\n    logger('Sending purge buffer ids request');\n    return [];\n  }\n\n  /**\n   * Core RPC request - Remove an {@link Identity}\n   * @param {number} identityId\n   */\n  @rpc('removeIdentity(IdentityId)', qtypes.QUserType.get('IdentityId'))\n  removeIdentity(identityId) {\n    logger('Deleting identity');\n    return [ identityId ];\n  }\n\n  /**\n   * Core RPC request - Remove a {@link Network}\n   * @param {number} networkId\n   */\n  @rpc('removeNetwork(NetworkId)', qtypes.QUserType.get('NetworkId'))\n  removeNetwork (networkId) {\n    logger('Deleting nhetwork');\n    return [ networkId ];\n  }\n\n  /**\n   * Core RPC request - Send a user input to a specified buffer\n   * @param {bufferInfo} bufferInfo\n   * @param {String} message\n   */\n  @rpc('sendInput(BufferInfo,QString)', qtypes.QUserType.get('BufferInfo'), qtypes.QString)\n  sendMessage(bufferInfo, message) {\n    logger('Sending message');\n    return [ bufferInfo, message ];\n  }\n\n  /**\n   * Core RPC request - Create a new {@link module:identity}\n   * @param {module:identity} identity\n   */\n  @rpc('createIdentity(Identity,QVariantMap)', qtypes.QUserType.get('Identity'), qtypes.QMap)\n  createIdentity(identity) {\n    logger('Creating identity');\n    return [ identity, {}];\n  }\n\n  /**\n   * Core RPC request - Create a new {@link module:network.Network}\n   * @param {String} networkName\n   * @param {number} identityId\n   * @param {String|Object} initialServer - Server hostname or IP, or full Network::Server Object. Can also be undefined if options.ServerList is defined.\n   * @param {String} [initialServer.Host=initialServer]\n   * @param {String} [initialServer.Port=\"6667\"]\n   * @param {String} [initialServer.Password=\"\"]\n   * @param {boolean} [initialServer.UseSSL=true]\n   * @param {number} [initialServer.sslVersion=0]\n   * @param {boolean} [initialServer.UseProxy=false]\n   * @param {number} [initialServer.ProxyType=0]\n   * @param {String} [initialServer.ProxyHost=\"\"]\n   * @param {String} [initialServer.ProxyPort=\"\"]\n   * @param {String} [initialServer.ProxyUser=\"\"]\n   * @param {String} [initialServer.ProxyPass=\"\"]\n   * @param {Object} [options]\n   * @param {String} [options.codecForServer=\"\"]\n   * @param {String} [options.codecForEncoding=\"\"]\n   * @param {String} [options.codecForDecoding=\"\"]\n   * @param {boolean} [options.useRandomServer=false]\n   * @param {String[]} [options.perform=[]]\n   * @param {Object[]} [options.ServerList=[]]\n   * @param {boolean} [options.useAutoIdentify=false]\n   * @param {String} [options.autoIdentifyService=\"NickServ\"]\n   * @param {String} [options.autoIdentifyPassword=\"\"]\n   * @param {boolean} [options.useSasl=false]\n   * @param {String} [options.saslAccount=\"\"]\n   * @param {String} [options.saslPassword=\"\"]\n   * @param {boolean} [options.useAutoReconnect=true]\n   * @param {number} [options.autoReconnectInterval=60]\n   * @param {number} [options.autoReconnectRetries=20]\n   * @param {boolean} [options.unlimitedReconnectRetries=false]\n   * @param {boolean} [options.rejoinChannels=true]\n   * @param {boolean} [options.useCustomMessageRate=false]\n   * @param {boolean} [options.unlimitedMessageRate=false]\n   * @param {number} [options.msgRateMessageDelay=2200]\n   * @param {number} [options.msgRateBurstSize=5]\n   */\n  @rpc('createNetwork(NetworkInfo,QStringList)', qtypes.QClass, qtypes.QStringList)\n  createNetwork(networkName, identityId, initialServer, options = {}) {\n    const network = new Network(-1, networkName);\n    network.identityId = identityId;\n    network.update(options);\n    if (typeof initialServer === 'string') {\n      initialServer = {\n        host: initialServer\n      };\n    }\n    network.ServerList.push(new Server(initialServer));\n    logger('Creating network');\n    return [ network, []];\n  }\n\n  /**\n   * Sends an initialization request to quasselcore for specified `classname` and `objectname`\n   * @param {String} classname\n   * @param {String} objectname\n   * @example\n   * quassel.core.sendInitRequest(\"IrcUser\", \"1/randomuser\");\n   */\n  sendInitRequest(classname, objectname = '') {\n    const initRequest = [\n      qtypes.QUInt.from(Types.INITREQUEST),\n      qtypes.QString.from(classname),\n      qtypes.QString.from(objectname)\n    ];\n    this.qtsocket.write(initRequest);\n  }\n\n  /**\n   * Sends client information to the core\n   * @param {boolean} useSSL\n   * @param {boolean} useCompression - Not supported\n   * @protected\n   */\n  sendClientInfo(useSSL, useCompression){\n    const smap = {\n      'ClientDate': '',\n      'UseSsl': useSSL,\n      'ClientVersion': `${pkg.name} ${pkg.version}`,\n      'UseCompression': useCompression,\n      'MsgType': 'ClientInit',\n      'ProtocolVersion': 10\n    };\n    logger('Sending client informations');\n    this.qtsocket.write(smap);\n  }\n\n  /**\n   * Setup core\n   * @param {String} backend\n   * @param {String} adminuser\n   * @param {String} adminpassword\n   * @param {Object} [properties={}]\n   */\n  setupCore(backend, adminuser, adminpassword, properties = {}) {\n    const obj = {\n      SetupData: {\n        ConnectionProperties: properties,\n        Backend: backend,\n        AdminUser: adminuser,\n        AdminPasswd: adminpassword\n      },\n      MsgType: 'CoreSetupData'\n    };\n\n    this.qtsocket.write(obj);\n  }\n\n  /**\n   * Send login request to the core\n   * @param {String} user\n   * @param {String} password\n   */\n  login(user, password) {\n    const obj = {\n      'MsgType': 'ClientLogin',\n      'User': user,\n      'Password': password\n    };\n    this.qtsocket.write(obj);\n  }\n\n  /**\n   * Send magic number to the core\n   */\n  connect() {\n    let magic = 0x42b33f00;\n    // magic | 0x01 Encryption\n    // magic | 0x02 Compression\n    if (this.options.securecore) {\n      magic |= 0x01;\n    }\n\n    // At this point `duplex` must already be connected\n    const bufs = [\n      qtypes.QUInt.from(magic).toBuffer(),\n      qtypes.QUInt.from(0x01).toBuffer(),\n      qtypes.QUInt.from(0x01 << 31).toBuffer()\n    ];\n    this.duplex.write(Buffer.concat(bufs));\n  }\n\n  /**\n   * Disconnect the client from the core\n   */\n  disconnect() {\n    this.duplex.end();\n    this.duplex.destroy();\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/request.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 516,
    "kind": "variable",
    "name": "EventEmitter",
    "memberof": "src/request.js",
    "static": true,
    "longname": "src/request.js~EventEmitter",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 517,
    "kind": "variable",
    "name": "types",
    "memberof": "src/request.js",
    "static": true,
    "longname": "src/request.js~types",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 518,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/request.js",
    "static": true,
    "longname": "src/request.js~logger",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 519,
    "kind": "variable",
    "name": "pkg",
    "memberof": "src/request.js",
    "static": true,
    "longname": "src/request.js~pkg",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/request.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 520,
    "kind": "variable",
    "name": "Types",
    "memberof": "src/request.js",
    "static": true,
    "longname": "src/request.js~Types",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/request.js",
    "importStyle": "{Types}",
    "description": "",
    "lineNumber": 26,
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.INVALID",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.SYNC",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.RPCCALL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.INITREQUEST",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.INITDATA",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.HEARTBEAT",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Types.HEARTBEATREPLY",
        "description": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 521,
    "kind": "function",
    "name": "sync",
    "memberof": "src/request.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/request.js~sync",
    "access": "protected",
    "export": false,
    "importPath": "libquassel/src/request.js",
    "importStyle": null,
    "description": "Decorator for SYNC methods",
    "lineNumber": 40,
    "params": [
      {
        "name": "className",
        "types": [
          "*"
        ]
      },
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "datatypes",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 522,
    "kind": "function",
    "name": "rpc",
    "memberof": "src/request.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/request.js~rpc",
    "access": "protected",
    "export": false,
    "importPath": "libquassel/src/request.js",
    "importStyle": null,
    "description": "Decorator for RPC methods",
    "lineNumber": 67,
    "params": [
      {
        "name": "functionName",
        "types": [
          "*"
        ]
      },
      {
        "name": "datatypes",
        "types": [
          "...*"
        ],
        "spread": true
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 523,
    "kind": "class",
    "name": "Core",
    "memberof": "src/request.js",
    "static": true,
    "longname": "src/request.js~Core",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/request.js",
    "importStyle": "{Core}",
    "description": "Send commands to the core",
    "lineNumber": 90,
    "interface": false,
    "extends": [
      "EventEmitter"
    ]
  },
  {
    "__docId__": 524,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 91,
    "undocument": true
  },
  {
    "__docId__": 525,
    "kind": "member",
    "name": "options",
    "memberof": "src/request.js~Core",
    "static": false,
    "longname": "src/request.js~Core#options",
    "access": "public",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 526,
    "kind": "member",
    "name": "useSSL",
    "memberof": "src/request.js~Core",
    "static": false,
    "longname": "src/request.js~Core#useSSL",
    "access": "public",
    "description": null,
    "lineNumber": 94,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 527,
    "kind": "member",
    "name": "useCompression",
    "memberof": "src/request.js~Core",
    "static": false,
    "longname": "src/request.js~Core#useCompression",
    "access": "public",
    "description": null,
    "lineNumber": 95,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 528,
    "kind": "member",
    "name": "qtsocket",
    "memberof": "src/request.js~Core",
    "static": false,
    "longname": "src/request.js~Core#qtsocket",
    "access": "public",
    "description": null,
    "lineNumber": 96,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 529,
    "kind": "member",
    "name": "duplex",
    "memberof": "src/request.js~Core",
    "static": false,
    "longname": "src/request.js~Core#duplex",
    "access": "public",
    "description": null,
    "lineNumber": 97,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 530,
    "kind": "method",
    "name": "init",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#init",
    "access": "public",
    "description": "Handle magic number response",
    "lineNumber": 104,
    "params": [
      {
        "nullable": null,
        "types": [
          "net.Duplex"
        ],
        "spread": false,
        "optional": false,
        "name": "duplex",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 535,
    "kind": "method",
    "name": "finishClientInit",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#finishClientInit",
    "access": "public",
    "description": "Begins SSL handshake if necessary.\nThis method returns a Promise.",
    "lineNumber": 155,
    "params": [
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "callback",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 536,
    "kind": "method",
    "name": "heartBeat",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#heartBeat",
    "access": "public",
    "description": "Send heartbeat response",
    "lineNumber": 179,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "reply",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 537,
    "kind": "method",
    "name": "backlog",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#backlog",
    "access": "public",
    "description": "Core Sync request - Backlogs",
    "lineNumber": 206,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "firstMsgId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "lastMsgId",
        "description": ""
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "backloglimit",
        "defaultRaw": "backloglimit",
        "name": "maxAmount",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BacklogManager', 'requestBacklog', qtypes.QUserType.get('BufferId'), qtypes.QUserType.get('MsgId'), qtypes.QUserType.get('MsgId'), qtypes.QInt, qtypes.QInt)"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 538,
    "kind": "method",
    "name": "connectNetwork",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#connectNetwork",
    "access": "public",
    "description": "Core Sync request - Connect the specified network",
    "lineNumber": 217,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('Network', 'requestConnect')"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 539,
    "kind": "method",
    "name": "disconnectNetwork",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#disconnectNetwork",
    "access": "public",
    "description": "Core Sync request - Disconnect the specified network",
    "lineNumber": 227,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('Network', 'requestDisconnect')"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 540,
    "kind": "method",
    "name": "setNetworkInfo",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#setNetworkInfo",
    "access": "public",
    "description": "Core Sync request - Update network information",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Network"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('Network', 'requestSetNetworkInfo', qtypes.QClass)"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 541,
    "kind": "method",
    "name": "markBufferAsRead",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#markBufferAsRead",
    "access": "public",
    "description": "Core Sync request - Mark buffer as read",
    "lineNumber": 248,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferSyncer', 'requestMarkBufferAsRead', qtypes.QUserType.get('BufferId'))"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 542,
    "kind": "method",
    "name": "setLastMsgRead",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#setLastMsgRead",
    "access": "public",
    "description": "Core Sync request - Set all messages before messageId as read for specified buffer",
    "lineNumber": 259,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferSyncer', 'requestSetLastSeenMsg', qtypes.QUserType.get('BufferId'), qtypes.QUserType.get('MsgId'))"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 543,
    "kind": "method",
    "name": "setMarkerLine",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#setMarkerLine",
    "access": "public",
    "description": "Core Sync request - Mark a specified buffer line",
    "lineNumber": 270,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "messageId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferSyncer', 'requestSetMarkerLine', qtypes.QUserType.get('BufferId'), qtypes.QUserType.get('MsgId'))"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 544,
    "kind": "method",
    "name": "removeBuffer",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#removeBuffer",
    "access": "public",
    "description": "Core Sync request - Remove a buffer",
    "lineNumber": 280,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferSyncer', 'requestRemoveBuffer', qtypes.QUserType.get('BufferId'))"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 545,
    "kind": "method",
    "name": "mergeBuffersPermanently",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#mergeBuffersPermanently",
    "access": "public",
    "description": "Core Sync request - Merge bufferId2 into bufferId1",
    "lineNumber": 291,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId1",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId2",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferSyncer', 'requestMergeBuffersPermanently', qtypes.QUserType.get('BufferId'), qtypes.QUserType.get('BufferId'))"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 546,
    "kind": "method",
    "name": "renameBuffer",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#renameBuffer",
    "access": "public",
    "description": "Core Sync request - Rename a buffer",
    "lineNumber": 302,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newName",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferSyncer', 'requestMergeBuffersPermanently', qtypes.QUserType.get('BufferId'), qtypes.QString)"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 547,
    "kind": "method",
    "name": "hideBufferTemporarily",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#hideBufferTemporarily",
    "access": "public",
    "description": "Core Sync request - Hide a buffer temporarily",
    "lineNumber": 313,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferViewConfig', 'requestRemoveBuffer', qtypes.QUserType.get('BufferId'))"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 548,
    "kind": "method",
    "name": "hideBufferPermanently",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#hideBufferPermanently",
    "access": "public",
    "description": "Core Sync request - Hide a buffer permanently",
    "lineNumber": 324,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferViewConfig', 'requestRemoveBufferPermanently', qtypes.QUserType.get('BufferId'))"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 549,
    "kind": "method",
    "name": "unhideBuffer",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#unhideBuffer",
    "access": "public",
    "description": "Core Sync request - Unhide a buffer",
    "lineNumber": 336,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferViewId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "pos",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferViewConfig', 'requestAddBuffer', qtypes.QUserType.get('BufferId'), qtypes.QInt)"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 550,
    "kind": "method",
    "name": "createBufferView",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#createBufferView",
    "access": "public",
    "description": "Core Sync request - Create a new chat list",
    "examples": [
      "FIXME\ncreateBufferView({\n    sortAlphabetically: 1,\n    showSearch: 0,\n    networkId: 0,\n    minimumActivity: 0,\n    hideInactiveNetworks: 0,\n    hideInactiveBuffers: 0,\n    disableDecoration: 0,\n    bufferViewName: 'All Chats',\n    allowedBufferTypes: 15,\n    addNewBuffersAutomatically: 1,\n    TemporarilyRemovedBuffers: [],\n    RemovedBuffers: [],\n    BufferList: []\n});"
    ],
    "lineNumber": 364,
    "experimental": true,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferViewManager', 'requestCreateBufferView', qtypes.QMap)"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 551,
    "kind": "method",
    "name": "updateIgnoreListManager",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#updateIgnoreListManager",
    "access": "public",
    "description": "Core Sync request - Update ignoreList",
    "lineNumber": 374,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "ignoreList",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('IgnoreListManager', 'requestUpdate', qtypes.QList)"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 552,
    "kind": "method",
    "name": "updateIdentity",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#updateIdentity",
    "access": "public",
    "description": "Core Sync request - Update identity",
    "lineNumber": 385,
    "params": [
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "identityId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Identity"
        ],
        "spread": false,
        "optional": false,
        "name": "identity",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('Identity', 'requestUpdate', qtypes.QClass)"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 553,
    "kind": "method",
    "name": "updateAliasManager",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#updateAliasManager",
    "access": "public",
    "description": "Core Sync request - Update aliases",
    "lineNumber": 395,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "data",
        "description": "see {@link toCoreObject}"
      }
    ],
    "decorators": [
      {
        "name": "sync",
        "arguments": "('AliasManager', 'requestUpdate', qtypes.QMap)"
      }
    ],
    "return": {
      "types": [
        "string[]"
      ]
    }
  },
  {
    "__docId__": 554,
    "kind": "method",
    "name": "purgeBufferIds",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#purgeBufferIds",
    "access": "public",
    "description": null,
    "lineNumber": 401,
    "undocument": true,
    "decorators": [
      {
        "name": "sync",
        "arguments": "('BufferSyncer', 'requestPurgeBufferIds')"
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 555,
    "kind": "method",
    "name": "removeIdentity",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#removeIdentity",
    "access": "public",
    "description": "Core RPC request - Remove an {@link Identity}",
    "lineNumber": 411,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "identityId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "rpc",
        "arguments": "('removeIdentity(IdentityId)', qtypes.QUserType.get('IdentityId'))"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 556,
    "kind": "method",
    "name": "removeNetwork",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#removeNetwork",
    "access": "public",
    "description": "Core RPC request - Remove a {@link Network}",
    "lineNumber": 421,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "networkId",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "rpc",
        "arguments": "('removeNetwork(NetworkId)', qtypes.QUserType.get('NetworkId'))"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 557,
    "kind": "method",
    "name": "sendMessage",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#sendMessage",
    "access": "public",
    "description": "Core RPC request - Send a user input to a specified buffer",
    "lineNumber": 432,
    "params": [
      {
        "nullable": null,
        "types": [
          "bufferInfo"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferInfo",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "rpc",
        "arguments": "('sendInput(BufferInfo,QString)', qtypes.QUserType.get('BufferInfo'), qtypes.QString)"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 558,
    "kind": "method",
    "name": "createIdentity",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#createIdentity",
    "access": "public",
    "description": "Core RPC request - Create a new {@link module:identity}",
    "lineNumber": 442,
    "params": [
      {
        "nullable": null,
        "types": [
          "module:identity"
        ],
        "spread": false,
        "optional": false,
        "name": "identity",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "rpc",
        "arguments": "('createIdentity(Identity,QVariantMap)', qtypes.QUserType.get('Identity'), qtypes.QMap)"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 559,
    "kind": "method",
    "name": "createNetwork",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#createNetwork",
    "access": "public",
    "description": "Core RPC request - Create a new {@link module:network.Network}",
    "lineNumber": 487,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "networkName",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "identityId",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String",
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "initialServer",
        "description": "Server hostname or IP, or full Network::Server Object. Can also be undefined if options.ServerList is defined."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "initialServer",
        "defaultRaw": "initialServer",
        "name": "initialServer.Host",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"6667\"",
        "defaultRaw": "6667",
        "name": "initialServer.Port",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "initialServer.Password",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "initialServer.UseSSL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "initialServer.sslVersion",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "initialServer.UseProxy",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0",
        "defaultRaw": 0,
        "name": "initialServer.ProxyType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "initialServer.ProxyHost",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "initialServer.ProxyPort",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "initialServer.ProxyUser",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "initialServer.ProxyPass",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "options.codecForServer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "options.codecForEncoding",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "options.codecForDecoding",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.useRandomServer",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.perform",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.ServerList",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.useAutoIdentify",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"NickServ\"",
        "defaultRaw": "NickServ",
        "name": "options.autoIdentifyService",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "options.autoIdentifyPassword",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.useSasl",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "options.saslAccount",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"\"",
        "defaultRaw": "",
        "name": "options.saslPassword",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.useAutoReconnect",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "60",
        "defaultRaw": 60,
        "name": "options.autoReconnectInterval",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "20",
        "defaultRaw": 20,
        "name": "options.autoReconnectRetries",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.unlimitedReconnectRetries",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.rejoinChannels",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.useCustomMessageRate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.unlimitedMessageRate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "2200",
        "defaultRaw": 2200,
        "name": "options.msgRateMessageDelay",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "5",
        "defaultRaw": 5,
        "name": "options.msgRateBurstSize",
        "description": ""
      }
    ],
    "decorators": [
      {
        "name": "rpc",
        "arguments": "('createNetwork(NetworkInfo,QStringList)', qtypes.QClass, qtypes.QStringList)"
      }
    ],
    "return": {
      "types": [
        "undefined[]"
      ]
    }
  },
  {
    "__docId__": 560,
    "kind": "method",
    "name": "sendInitRequest",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#sendInitRequest",
    "access": "public",
    "description": "Sends an initialization request to quasselcore for specified `classname` and `objectname`",
    "examples": [
      "quassel.core.sendInitRequest(\"IrcUser\", \"1/randomuser\");"
    ],
    "lineNumber": 508,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "classname",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "objectname",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 561,
    "kind": "method",
    "name": "sendClientInfo",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#sendClientInfo",
    "access": "protected",
    "description": "Sends client information to the core",
    "lineNumber": 523,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useSSL",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "useCompression",
        "description": "Not supported"
      }
    ],
    "return": null
  },
  {
    "__docId__": 562,
    "kind": "method",
    "name": "setupCore",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#setupCore",
    "access": "public",
    "description": "Setup core",
    "lineNumber": 543,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "backend",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "adminuser",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "adminpassword",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "properties",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 563,
    "kind": "method",
    "name": "login",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#login",
    "access": "public",
    "description": "Send login request to the core",
    "lineNumber": 562,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 564,
    "kind": "method",
    "name": "connect",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#connect",
    "access": "public",
    "description": "Send magic number to the core",
    "lineNumber": 574,
    "params": [],
    "return": null
  },
  {
    "__docId__": 565,
    "kind": "method",
    "name": "disconnect",
    "memberof": "src/request.js~Core",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/request.js~Core#disconnect",
    "access": "public",
    "description": "Disconnect the client from the core",
    "lineNumber": 594,
    "params": [],
    "return": null
  },
  {
    "__docId__": 566,
    "kind": "file",
    "name": "src/tls.js",
    "content": "const forge = require('node-forge');\nconst logger = require('debug')('libquassel:tls');\nconst { Duplex } = require('stream');\n\nclass TLSSocket extends Duplex {\n  constructor(duplex, options) {\n    super(options);\n    this._tlsOptions = options;\n    this._secureEstablished = false;\n    this._duplex = duplex;\n    this._duplex.push = (data) => this._ssl.process(data.toString('binary'));\n    this._ssl = null;\n    this._before_secure_chunks = [];\n    this._init();\n    this._start();\n  }\n\n  _init() {\n    const self = this;\n    this._ssl = forge.tls.createConnection({\n      server: false,\n      verify: function(connection, verified, depth, certs) {\n        if (!self._tlsOptions.rejectUnauthorized || !self._tlsOptions.servername) {\n          logger('server certificate verification skipped');\n          return true;\n        }\n\n        if (depth === 0) {\n          const cn = certs[0].subject.getField('CN').value;\n          if (cn !== self._tlsOptions.servername) {\n            verified = {\n              alert: forge.tls.Alert.Description.bad_certificate,\n              message: 'Certificate Common Name does not match hostname.'\n            };\n            logger('%s !== %s', cn, self._tlsOptions.servername);\n          }\n          logger('server certificate verified');\n        } else {\n          logger('skipping certificate trust verification');\n          verified = true;\n        }\n\n        return verified;\n      },\n      connected: function(_connection) {\n        logger('connected');\n        self._secureEstablished = true;\n        self.emit('secure');\n      },\n      tlsDataReady: function(connection) {\n        // encrypted data is ready to be sent to the server\n        const data = connection.tlsData.getBytes();\n        self._duplex.write(data, 'binary');\n      },\n      dataReady: function(connection) {\n        // clear data from the server is ready\n        const data = connection.data.getBytes();\n        self.push(Buffer.from(data, 'binary'));\n      },\n      closed: function() {\n        logger('disconnected');\n        self.end();\n      },\n      error: function(connection, error) {\n        logger('error', error);\n        error.toString = function () {\n          return 'TLS error: ' + error.message;\n        };\n        self.emit('error', error);\n      }\n    });\n  }\n\n  _start() {\n    logger('handshake');\n    this._ssl.handshake();\n  }\n\n  _write(chunk, encoding, callback) {\n    if (!this._secureEstablished) {\n      this._before_secure_chunks.push([ chunk, encoding, callback ]);\n    } else {\n      if (this._before_secure_chunks.length > 0) {\n        for (let [ chunk, encoding, callback ] of this._before_secure_chunks) {\n          this._writenow(chunk, encoding, callback);\n        }\n        this._before_secure_chunks = [];\n      }\n      this._writenow(chunk, encoding, callback);\n    }\n  }\n\n  _writenow(chunk, encoding, callback=()=>{}) {\n    const result = this._ssl.prepare(chunk);\n    process.nextTick(() => {\n      callback(result ? 'Error while packaging data into a TLS record' : null);\n    });\n  }\n\n  _read(_size) {}\n}\n\nfunction connect(options, callback=()=>{}) {\n  const defaults = {\n    rejectUnauthorized: '0' !== process.env.NODE_TLS_REJECT_UNAUTHORIZED\n  };\n  options = Object.assign({}, defaults, options);\n\n  const socket = new TLSSocket(options.socket, options);\n  socket.once('secure', callback);\n\n  return socket;\n}\n\nfunction createSecureContext() {\n  return {};\n}\n\nmodule.exports = {\n  TLSSocket,\n  connect,\n  createSecureContext\n};",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/tls.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 567,
    "kind": "variable",
    "name": "forge",
    "memberof": "src/tls.js",
    "static": true,
    "longname": "src/tls.js~forge",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/tls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 568,
    "kind": "variable",
    "name": "logger",
    "memberof": "src/tls.js",
    "static": true,
    "longname": "src/tls.js~logger",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/tls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 569,
    "kind": "variable",
    "name": "Duplex",
    "memberof": "src/tls.js",
    "static": true,
    "longname": "src/tls.js~Duplex",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/tls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 570,
    "kind": "class",
    "name": "TLSSocket",
    "memberof": "src/tls.js",
    "static": true,
    "longname": "src/tls.js~TLSSocket",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/tls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "interface": false,
    "extends": [
      "Duplex"
    ],
    "ignore": true
  },
  {
    "__docId__": 571,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/tls.js~TLSSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tls.js~TLSSocket#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 572,
    "kind": "member",
    "name": "_tlsOptions",
    "memberof": "src/tls.js~TLSSocket",
    "static": false,
    "longname": "src/tls.js~TLSSocket#_tlsOptions",
    "access": "private",
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 573,
    "kind": "member",
    "name": "_secureEstablished",
    "memberof": "src/tls.js~TLSSocket",
    "static": false,
    "longname": "src/tls.js~TLSSocket#_secureEstablished",
    "access": "private",
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 574,
    "kind": "member",
    "name": "_duplex",
    "memberof": "src/tls.js~TLSSocket",
    "static": false,
    "longname": "src/tls.js~TLSSocket#_duplex",
    "access": "private",
    "description": null,
    "lineNumber": 10,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 575,
    "kind": "member",
    "name": "_ssl",
    "memberof": "src/tls.js~TLSSocket",
    "static": false,
    "longname": "src/tls.js~TLSSocket#_ssl",
    "access": "private",
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 576,
    "kind": "member",
    "name": "_before_secure_chunks",
    "memberof": "src/tls.js~TLSSocket",
    "static": false,
    "longname": "src/tls.js~TLSSocket#_before_secure_chunks",
    "access": "private",
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "type": {
      "types": [
        "*[]"
      ]
    }
  },
  {
    "__docId__": 577,
    "kind": "method",
    "name": "_init",
    "memberof": "src/tls.js~TLSSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tls.js~TLSSocket#_init",
    "access": "private",
    "description": null,
    "lineNumber": 18,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 579,
    "kind": "method",
    "name": "_start",
    "memberof": "src/tls.js~TLSSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tls.js~TLSSocket#_start",
    "access": "private",
    "description": null,
    "lineNumber": 74,
    "undocument": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 580,
    "kind": "method",
    "name": "_write",
    "memberof": "src/tls.js~TLSSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tls.js~TLSSocket#_write",
    "access": "private",
    "description": null,
    "lineNumber": 79,
    "undocument": true,
    "params": [
      {
        "name": "chunk",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoding",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 582,
    "kind": "method",
    "name": "_writenow",
    "memberof": "src/tls.js~TLSSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tls.js~TLSSocket#_writenow",
    "access": "private",
    "description": null,
    "lineNumber": 93,
    "undocument": true,
    "params": [
      {
        "name": "chunk",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoding",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 583,
    "kind": "method",
    "name": "_read",
    "memberof": "src/tls.js~TLSSocket",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/tls.js~TLSSocket#_read",
    "access": "private",
    "description": null,
    "lineNumber": 100,
    "undocument": true,
    "params": [
      {
        "name": "_size",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 584,
    "kind": "function",
    "name": "connect",
    "memberof": "src/tls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tls.js~connect",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/tls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 103,
    "undocument": true,
    "params": [
      {
        "name": "options",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "optional": true,
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 585,
    "kind": "function",
    "name": "createSecureContext",
    "memberof": "src/tls.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/tls.js~createSecureContext",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/tls.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 115,
    "undocument": true,
    "params": [],
    "return": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 586,
    "kind": "file",
    "name": "src/user.js",
    "content": "/*\n * libquassel\n * https://github.com/magne4000/node-libquassel\n *\n * Copyright (c) 2017 Joël Charles\n * Licensed under the MIT license.\n */\n\n/**\n * IRC user\n */\nexport default class IRCUser {\n\n  /** @type {boolean} */\n  away;\n  /** @type {string} */\n  awayMessage;\n  /** @type {string[]} */\n  channels;\n  /** @type {boolean} */\n  encrypted;\n  /** @type {string} */\n  host;\n  /** @type {Date} */\n  idleTime;\n  /** @type {string} */\n  ircOperator;\n  /** @type {boolean} */\n  lastAwayMessage;\n  /** @type {Date} */\n  loginTime;\n  /** @type {string} */\n  realName;\n  /** @type {string} */\n  server;\n  /** @type {string} */\n  userHost;\n  /** @type {string} */\n  user;\n  /** @type {string} */\n  userModes;\n  /** @type {string} */\n  whoisServiceReply;\n  /** @type {string} */\n  nick;\n\n  constructor(data) {\n    this._id = null;\n\n    if (data) {\n      this.update(data);\n    }\n  }\n\n  update(data) {\n    Object.assign(this, data);\n  }\n\n  /** @type {string} */\n  get id() {\n    return this._id;\n  }\n\n  /** @type {string} */\n  set id(value) {\n    this._id = value;\n    [ this.nick ] = value.split('!');\n  }\n}\n",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/user.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 587,
    "kind": "class",
    "name": "IRCUser",
    "memberof": "src/user.js",
    "static": true,
    "longname": "src/user.js~IRCUser",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/user.js",
    "importStyle": "IRCUser",
    "description": "IRC user",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 588,
    "kind": "member",
    "name": "away",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#away",
    "access": "public",
    "description": null,
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 589,
    "kind": "member",
    "name": "awayMessage",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#awayMessage",
    "access": "public",
    "description": null,
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 590,
    "kind": "member",
    "name": "channels",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#channels",
    "access": "public",
    "description": null,
    "lineNumber": 19,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 591,
    "kind": "member",
    "name": "encrypted",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#encrypted",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 592,
    "kind": "member",
    "name": "host",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#host",
    "access": "public",
    "description": null,
    "lineNumber": 23,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 593,
    "kind": "member",
    "name": "idleTime",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#idleTime",
    "access": "public",
    "description": null,
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 594,
    "kind": "member",
    "name": "ircOperator",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#ircOperator",
    "access": "public",
    "description": null,
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 595,
    "kind": "member",
    "name": "lastAwayMessage",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#lastAwayMessage",
    "access": "public",
    "description": null,
    "lineNumber": 29,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 596,
    "kind": "member",
    "name": "loginTime",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#loginTime",
    "access": "public",
    "description": null,
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Date"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 597,
    "kind": "member",
    "name": "realName",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#realName",
    "access": "public",
    "description": null,
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 598,
    "kind": "member",
    "name": "server",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#server",
    "access": "public",
    "description": null,
    "lineNumber": 35,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 599,
    "kind": "member",
    "name": "userHost",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#userHost",
    "access": "public",
    "description": null,
    "lineNumber": 37,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 600,
    "kind": "member",
    "name": "user",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#user",
    "access": "public",
    "description": null,
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 601,
    "kind": "member",
    "name": "userModes",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#userModes",
    "access": "public",
    "description": null,
    "lineNumber": 41,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 602,
    "kind": "member",
    "name": "whoisServiceReply",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#whoisServiceReply",
    "access": "public",
    "description": null,
    "lineNumber": 43,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 603,
    "kind": "member",
    "name": "nick",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#nick",
    "access": "public",
    "description": null,
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 604,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/user.js~IRCUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/user.js~IRCUser#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 47,
    "undocument": true
  },
  {
    "__docId__": 605,
    "kind": "member",
    "name": "_id",
    "memberof": "src/user.js~IRCUser",
    "static": false,
    "longname": "src/user.js~IRCUser#_id",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 606,
    "kind": "method",
    "name": "update",
    "memberof": "src/user.js~IRCUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/user.js~IRCUser#update",
    "access": "public",
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "params": [
      {
        "name": "data",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 607,
    "kind": "get",
    "name": "id",
    "memberof": "src/user.js~IRCUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/user.js~IRCUser#id",
    "access": "public",
    "description": null,
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 608,
    "kind": "set",
    "name": "id",
    "memberof": "src/user.js~IRCUser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/user.js~IRCUser#id",
    "access": "public",
    "description": null,
    "lineNumber": 65,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 610,
    "kind": "file",
    "name": "src/usertypes.js",
    "content": "const { types: qtypes } = require('qtdatastream');\n\n/**\n * @typedef {QUserType} UserType<NetworkId>\n * @property {INT} this\n */\nqtypes.QUserType.register('NetworkId', qtypes.Types.INT);\n\n/**\n * @typedef {QUserType} UserType<IdentityId>\n * @property {INT} this\n */\nqtypes.QUserType.register('IdentityId', qtypes.Types.INT);\n\n/**\n * @typedef {QUserType} UserType<BufferId>\n * @property {INT} this\n */\nqtypes.QUserType.register('BufferId', qtypes.Types.INT);\n\n/**\n * @typedef {QUserType} UserType<MsgId>\n * @property {INT} this\n */\nqtypes.QUserType.register('MsgId', qtypes.Types.INT);\n\n/**\n * @typedef {QUserType} UserType<Identity>\n * @property {MAP} this\n */\nqtypes.QUserType.register('Identity', qtypes.Types.MAP);\n\n/**\n * @typedef {QUserType} UserType<NetworkInfo>\n * @property {MAP} this\n */\nqtypes.QUserType.register('NetworkInfo', qtypes.Types.MAP);\n\n/**\n * @typedef {QUserType} UserType<Network::Server>\n * @property {MAP} this\n */\nqtypes.QUserType.register('Network::Server', qtypes.Types.MAP);\n\n/**\n * @typedef {QUserType} UserType<NetworkId>\n * @property {INT} this\n */\nqtypes.QUserType.register('NetworkId', qtypes.Types.INT);\n\n/**\n * @typedef {QUserType} UserType<BufferInfo>\n * @property {INT} id\n * @property {INT} network\n * @property {SHORT} type\n * @property {UINT} group\n * @property {BYTEARRAY} name\n */\nqtypes.QUserType.register('BufferInfo', [\n  { id: qtypes.Types.INT },\n  { network: qtypes.Types.INT },\n  { type: qtypes.Types.SHORT },\n  { group: qtypes.Types.UINT },\n  { name: qtypes.Types.BYTEARRAY }\n]);\n\n/**\n * @typedef {QUserType} UserType<Message>\n * @property {INT} id\n * @property {UINT} timestamp\n * @property {UINT} type\n * @property {BOOL} flags\n * @property {UserType<BufferInfo>} bufferInfo\n * @property {BYTEARRAY} sender\n * @property {BYTEARRAY} content\n */\nqtypes.QUserType.register('Message', [\n  { id: qtypes.Types.INT },\n  { timestamp: qtypes.Types.UINT },\n  { type: qtypes.Types.UINT },\n  { flags: qtypes.Types.BOOL },\n  { bufferInfo: 'BufferInfo' },\n  { sender: qtypes.Types.BYTEARRAY },\n  { content: qtypes.Types.BYTEARRAY }\n]);",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/usertypes.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 611,
    "kind": "variable",
    "name": "types",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~types",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/usertypes.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 612,
    "kind": "typedef",
    "name": "UserType<NetworkId>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<NetworkId>",
    "access": "public",
    "description": "",
    "lineNumber": 7,
    "properties": [
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<NetworkId>"
    }
  },
  {
    "__docId__": 613,
    "kind": "typedef",
    "name": "UserType<IdentityId>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<IdentityId>",
    "access": "public",
    "description": "",
    "lineNumber": 13,
    "properties": [
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<IdentityId>"
    }
  },
  {
    "__docId__": 614,
    "kind": "typedef",
    "name": "UserType<BufferId>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<BufferId>",
    "access": "public",
    "description": "",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<BufferId>"
    }
  },
  {
    "__docId__": 615,
    "kind": "typedef",
    "name": "UserType<MsgId>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<MsgId>",
    "access": "public",
    "description": "",
    "lineNumber": 25,
    "properties": [
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<MsgId>"
    }
  },
  {
    "__docId__": 616,
    "kind": "typedef",
    "name": "UserType<Identity>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<Identity>",
    "access": "public",
    "description": "",
    "lineNumber": 31,
    "properties": [
      {
        "nullable": null,
        "types": [
          "MAP"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<Identity>"
    }
  },
  {
    "__docId__": 617,
    "kind": "typedef",
    "name": "UserType<NetworkInfo>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<NetworkInfo>",
    "access": "public",
    "description": "",
    "lineNumber": 37,
    "properties": [
      {
        "nullable": null,
        "types": [
          "MAP"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<NetworkInfo>"
    }
  },
  {
    "__docId__": 618,
    "kind": "typedef",
    "name": "UserType<Network::Server>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<Network::Server>",
    "access": "public",
    "description": "",
    "lineNumber": 43,
    "properties": [
      {
        "nullable": null,
        "types": [
          "MAP"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<Network::Server>"
    }
  },
  {
    "__docId__": 619,
    "kind": "typedef",
    "name": "UserType<NetworkId>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<NetworkId>",
    "access": "public",
    "description": "",
    "lineNumber": 49,
    "properties": [
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "this",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<NetworkId>"
    }
  },
  {
    "__docId__": 620,
    "kind": "typedef",
    "name": "UserType<BufferInfo>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<BufferInfo>",
    "access": "public",
    "description": "",
    "lineNumber": 59,
    "properties": [
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "network",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "SHORT"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UINT"
        ],
        "spread": false,
        "optional": false,
        "name": "group",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BYTEARRAY"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<BufferInfo>"
    }
  },
  {
    "__docId__": 621,
    "kind": "typedef",
    "name": "UserType<Message>",
    "memberof": "src/usertypes.js",
    "static": true,
    "longname": "src/usertypes.js~UserType<Message>",
    "access": "public",
    "description": "",
    "lineNumber": 77,
    "properties": [
      {
        "nullable": null,
        "types": [
          "INT"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UINT"
        ],
        "spread": false,
        "optional": false,
        "name": "timestamp",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UINT"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BOOL"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "UserType<BufferInfo>"
        ],
        "spread": false,
        "optional": false,
        "name": "bufferInfo",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BYTEARRAY"
        ],
        "spread": false,
        "optional": false,
        "name": "sender",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "BYTEARRAY"
        ],
        "spread": false,
        "optional": false,
        "name": "content",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "QUserType"
      ],
      "optional": false,
      "name": "UserType<Message>"
    }
  },
  {
    "__docId__": 622,
    "kind": "file",
    "name": "src/websocket.js",
    "content": "import { Duplex } from 'stream';\nconst toBuffer = require('blob-to-buffer');\n\nconst ErrorCodes = {\n  1001: 'The endpoint is going away, either because of a server failure or because the browser is navigating away from the page that opened the connection.',\n  1002: 'The endpoint is terminating the connection due to a protocol error.',\n  1003: 'The connection is being terminated because the endpoint received data of a type it cannot accept (for example, a text-only endpoint received binary data).',\n  1005: 'No status code was provided even though one was expected.',\n  1006: 'The connection was closed abnormally (that is, with no close frame being sent) when a status code was expected.',\n  1007: 'The endpoint is terminating the connection because a message was received that contained inconsistent data (e.g., non-UTF-8 data within a text message).',\n  1008: 'The endpoint is terminating the connection because it received a message that violates its policy. This is a generic status code, used when codes 1003 and 1009 are not suitable.',\n  1009: 'The endpoint is terminating the connection because a data frame was received that is too large.',\n  1010: 'The client is terminating the connection because it expected the server to negotiate one or more extension, but the server didn\\'t.',\n  1011: 'The server is terminating the connection because it encountered an unexpected condition that prevented it from fulfilling the request.',\n  1012: 'The server is terminating the connection because it is restarting.',\n  1013: 'The server is terminating the connection due to a temporary condition, e.g. it is overloaded and is casting off some of its clients',\n  1015: 'The connection was closed due to a failure to perform a TLS handshake (e.g., the server certificate can\\'t be verified).'\n};\n\nexport default class WebSocketStream extends Duplex {\n  constructor(target, protocols) {\n    super();\n    if (typeof target === 'object') {\n      this.socket = target;\n    } else {\n      this.socket = new WebSocket(target, protocols);\n    }\n    this.socket.onopen = () => this.emit('connected');\n    this.socket.onclose = (event) => {\n      if (event.code > 1000) {\n        if (event.code in ErrorCodes) {\n          this.emit('error', new Error(ErrorCodes[event.code]));\n        } else {\n          this.emit('error', new Error('Unknown WebSocket error'));\n        }\n      }\n      this.emit('end');\n    };\n    this.socket.onerror = _err => {}; // Handled by onclose\n    this.socket.onmessage = (event) => {\n      toBuffer(event.data, (err, buffer) => {\n        if (err) throw err;\n        this.push(buffer);\n      });\n    };\n  }\n\n  _read(_size) {}\n\n  _write(chunk, encoding, callback) {\n    if (this.socket.readyState === 1) { // open\n      this.socket.send(chunk);\n      callback();\n    } else if (this.socket.readyState === 0) { // connecting\n      this.once('connected', () => this.write(chunk, encoding, callback));\n      callback();\n    } else { // closing or close\n      callback('Attempt to write on a closed websocket');\n    }\n  }\n}",
    "static": true,
    "longname": "/home/magne/workspace/node-libquassel/src/websocket.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 623,
    "kind": "variable",
    "name": "toBuffer",
    "memberof": "src/websocket.js",
    "static": true,
    "longname": "src/websocket.js~toBuffer",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/websocket.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 2,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 624,
    "kind": "variable",
    "name": "ErrorCodes",
    "memberof": "src/websocket.js",
    "static": true,
    "longname": "src/websocket.js~ErrorCodes",
    "access": "public",
    "export": false,
    "importPath": "libquassel/src/websocket.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "{\"1001\": string, \"1002\": string, \"1003\": string, \"1005\": string, \"1006\": string, \"1007\": string, \"1008\": string, \"1009\": string, \"1010\": string, \"1011\": string, \"1012\": string, \"1013\": string, \"1015\": string}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 625,
    "kind": "class",
    "name": "WebSocketStream",
    "memberof": "src/websocket.js",
    "static": true,
    "longname": "src/websocket.js~WebSocketStream",
    "access": "public",
    "export": true,
    "importPath": "libquassel/src/websocket.js",
    "importStyle": "WebSocketStream",
    "description": null,
    "lineNumber": 20,
    "undocument": true,
    "interface": false,
    "extends": [
      "stream~Duplex"
    ]
  },
  {
    "__docId__": 626,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/websocket.js~WebSocketStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/websocket.js~WebSocketStream#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 21,
    "undocument": true
  },
  {
    "__docId__": 627,
    "kind": "member",
    "name": "socket",
    "memberof": "src/websocket.js~WebSocketStream",
    "static": false,
    "longname": "src/websocket.js~WebSocketStream#socket",
    "access": "public",
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 629,
    "kind": "method",
    "name": "_read",
    "memberof": "src/websocket.js~WebSocketStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/websocket.js~WebSocketStream#_read",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "params": [
      {
        "name": "_size",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 630,
    "kind": "method",
    "name": "_write",
    "memberof": "src/websocket.js~WebSocketStream",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/websocket.js~WebSocketStream#_write",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "params": [
      {
        "name": "chunk",
        "types": [
          "*"
        ]
      },
      {
        "name": "encoding",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "kind": "index",
    "content": "# libquassel\nJavascript library to connect and interact with Quassel IRC server.\n\n## Install\n```sh\nnpm install --production libquassel\n```\n\n## Use in browser\nYou just need to import `dist/libquassel.js` in your HTML page.\n\n## Development\n```sh\nnpm install libquassel\n```\n\nIn order to create a browser compatible file, run the following commands\n```sh\n# use browserify to build on change\nnpm run watch\n# before commit, make the dev version + minified version + the doc\nnpm run build\n```\n\n### 3.0 breaking changes\nVersion `3.0` introduces many changes:\n\n\n### Getting Started\n#### node\n```javascript\nconst { Client } = require('libquassel.js');\nconst net = require('net');\n\nconst socket = net.createConnection({\n  host: \"localhost\",\n  port: 4242\n});\n\nconst quassel = new Client((next) => next(\"user\", \"password\"));\n\nquassel.on('network.init', (networkId) => {\n    network = quassel.networks.get(networkId);\n    // ...\n});\n\n// ...\n\nquassel.connect(socket);\n```\n\n#### browser\n```html\n<!-- In your HTML -->\n<script src=\"/path/to/libquassel.js\"></script>\n```\n```javascript\n// libquassel in available as a global in browser\nconst socket = new libquassel.WebSocketStream('wss://domain.tld:12345', ['binary', 'base64']);\nconst quassel = new libquassel.Client((next) => next(\"user\", \"password\"));\n\nquassel.on('network.init', (networkId) => {\n    network = quassel.networks.get(networkId);\n    // ...\n});\n\n// ...\n\nquassel.connect(socket);\n```\n\n### Documentation\n[3.0.0](https://magne4000.github.com/libquassel/3.0.0 \"libquassel 3.0.0 documentation\")\n\n### Examples\nSee [test](test) folder for examples.\n\n## License\nCopyright (c) 2017 Joël Charles\nLicensed under the MIT license.\n",
    "longname": "/home/magne/workspace/node-libquassel/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"libquassel\",\n  \"description\": \"Javascript lib to connect and interact with Quassel IRC core\",\n  \"version\": \"3.0.0\",\n  \"homepage\": \"https://github.com/magne4000/node-libquassel\",\n  \"license\": \"MIT\",\n  \"author\": {\n    \"name\": \"Joël Charles\",\n    \"email\": \"joel.charles91@gmail.com\"\n  },\n  \"files\": [\n    \"LICENSE-MIT\",\n    \"README.md\",\n    \"src\",\n    \"dist\",\n    \"index.js\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/magne4000/node-libquassel.git\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/magne4000/node-libquassel/issues\"\n  },\n  \"licenses\": [\n    {\n      \"type\": \"MIT\",\n      \"url\": \"https://github.com/magne4000/node-libquassel/blob/master/LICENSE-MIT\"\n    }\n  ],\n  \"scripts\": {\n    \"test\": \"tape -r babel-register test/test.js\",\n    \"test-manual\": \"babel-node test/manual.js\",\n    \"build\": \"webpack --config webpack.config.dist.js\",\n    \"watch\": \"webpack --config webpack.config.dev.js --watch --progress\",\n    \"doc\": \"esdoc\",\n    \"eslint\": \"eslint src\",\n    \"prepublish\": \"npm run build\"\n  },\n  \"main\": \"index.js\",\n  \"engines\": {\n    \"node\": \">= 6\"\n  },\n  \"devDependencies\": {\n    \"ansi-styles\": \"^3.2.1\",\n    \"babel-cli\": \"^6.26.0\",\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.2.2\",\n    \"babel-loader\": \"^7.1.3\",\n    \"babel-plugin-transform-builtin-extend\": \"^1.1.2\",\n    \"babel-plugin-transform-class-properties\": \"^6.24.1\",\n    \"babel-plugin-transform-decorators-legacy\": \"^1.3.4\",\n    \"babel-plugin-transform-runtime\": \"^6.23.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"blob-to-buffer\": \"^1.2.7\",\n    \"clean-webpack-plugin\": \"^0.1.18\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-ecmascript-proposal-plugin\": \"^1.0.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.18.2\",\n    \"inquirer\": \"^5.1.0\",\n    \"tape\": \"^4.9.0\",\n    \"uglify-es\": \"^3.3.9\",\n    \"uglifyjs-webpack-plugin\": \"^1.2.2\",\n    \"webpack\": \"^3.10.0\"\n  },\n  \"keywords\": [\n    \"quassel\",\n    \"libquassel\"\n  ],\n  \"dependencies\": {\n    \"debug\": \"^3.1.0\",\n    \"node-forge\": \"^0.7.2\",\n    \"qtdatastream\": \"^1.0.1\"\n  }\n}\n",
    "longname": "/home/magne/workspace/node-libquassel/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]